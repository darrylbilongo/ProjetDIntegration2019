{"dependencies":[{"name":"../../tokenizer","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var isWhiteSpace = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").isWhiteSpace;\n\n  var cmpStr = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").cmpStr;\n\n  var TYPE = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE;\n\n  var FUNCTION = TYPE.Function;\n  var URL = TYPE.Url;\n  var RIGHTPARENTHESIS = TYPE.RightParenthesis;\n  module.exports = {\n    name: 'Url',\n    structure: {\n      value: ['String', 'Raw']\n    },\n    parse: function parse() {\n      var start = this.scanner.tokenStart;\n      var value;\n\n      switch (this.scanner.tokenType) {\n        case URL:\n          var rawStart = start + 4;\n          var rawEnd = this.scanner.tokenEnd - 1;\n\n          while (rawStart < rawEnd && isWhiteSpace(this.scanner.source.charCodeAt(rawStart))) {\n            rawStart++;\n          }\n\n          while (rawStart < rawEnd && isWhiteSpace(this.scanner.source.charCodeAt(rawEnd - 1))) {\n            rawEnd--;\n          }\n\n          value = {\n            type: 'Raw',\n            loc: this.getLocation(rawStart, rawEnd),\n            value: this.scanner.source.substring(rawStart, rawEnd)\n          };\n          this.eat(URL);\n          break;\n\n        case FUNCTION:\n          if (!cmpStr(this.scanner.source, this.scanner.tokenStart, this.scanner.tokenEnd, 'url(')) {\n            this.error('Function name must be `url`');\n          }\n\n          this.eat(FUNCTION);\n          this.scanner.skipSC();\n          value = this.String();\n          this.scanner.skipSC();\n          this.eat(RIGHTPARENTHESIS);\n          break;\n\n        default:\n          this.error('Url or Function is expected');\n      }\n\n      return {\n        type: 'Url',\n        loc: this.getLocation(start, this.scanner.tokenStart),\n        value: value\n      };\n    },\n    generate: function generate(node) {\n      this.chunk('url');\n      this.chunk('(');\n      this.node(node.value);\n      this.chunk(')');\n    }\n  };\n});","map":[[2,0,1,0],[2,6,1,4,"isWhiteSpace"],[2,18,1,16],[2,21,1,19,"require"],[2,32,1,26],[2,70,1,19],[2,71,1,46,"isWhiteSpace"],[2,83,1,0],[4,0,2,0],[4,6,2,4,"cmpStr"],[4,12,2,10],[4,15,2,13,"require"],[4,26,2,20],[4,64,2,13],[4,65,2,40,"cmpStr"],[4,71,2,0],[6,0,3,0],[6,6,3,4,"TYPE"],[6,10,3,8],[6,13,3,11,"require"],[6,24,3,18],[6,62,3,11],[6,63,3,38,"TYPE"],[6,67,3,0],[8,0,5,0],[8,6,5,4,"FUNCTION"],[8,14,5,12],[8,17,5,15,"TYPE"],[8,21,5,19],[8,22,5,20,"Function"],[8,30,5,0],[9,0,6,0],[9,6,6,4,"URL"],[9,9,6,7],[9,12,6,10,"TYPE"],[9,16,6,14],[9,17,6,15,"Url"],[9,20,6,0],[10,0,7,0],[10,6,7,4,"RIGHTPARENTHESIS"],[10,22,7,20],[10,25,7,23,"TYPE"],[10,29,7,27],[10,30,7,28,"RightParenthesis"],[10,46,7,0],[11,0,10,0,"module"],[11,2,10,0,"module"],[11,8,10,6],[11,9,10,7,"exports"],[11,16,10,0],[11,19,10,17],[12,0,11,4,"name"],[12,4,11,4,"name"],[12,8,11,8],[12,10,11,10],[12,15,10,17],[13,0,12,4,"structure"],[13,4,12,4,"structure"],[13,13,12,13],[13,15,12,15],[14,0,13,8,"value"],[14,6,13,8,"value"],[14,11,13,13],[14,13,13,15],[14,14,13,16],[14,22,13,15],[14,24,13,26],[14,29,13,15],[15,0,12,15],[15,5,10,17],[16,0,15,4,"parse"],[16,4,15,4,"parse"],[16,9,15,9],[16,11,15,11],[16,28,15,22],[17,0,16,8],[17,10,16,12,"start"],[17,15,16,17],[17,18,16,20],[17,23,16,25,"scanner"],[17,30,16,20],[17,31,16,33,"tokenStart"],[17,41,16,8],[18,0,17,8],[18,10,17,12,"value"],[18,15,17,8],[20,0,19,8],[20,14,19,16],[20,19,19,21,"scanner"],[20,26,19,16],[20,27,19,29,"tokenType"],[20,36,19,8],[21,0,20,12],[21,13,20,17,"URL"],[21,16,20,12],[22,0,21,16],[22,14,21,20,"rawStart"],[22,22,21,28],[22,25,21,31,"start"],[22,30,21,36],[22,33,21,39],[22,34,21,16],[23,0,22,16],[23,14,22,20,"rawEnd"],[23,20,22,26],[23,23,22,29],[23,28,22,34,"scanner"],[23,35,22,29],[23,36,22,42,"tokenEnd"],[23,44,22,29],[23,47,22,53],[23,48,22,16],[25,0,24,16],[25,17,24,23,"rawStart"],[25,25,24,31],[25,28,24,34,"rawEnd"],[25,34,24,23],[25,38,24,44,"isWhiteSpace"],[25,50,24,56],[25,51,24,57],[25,56,24,62,"scanner"],[25,63,24,57],[25,64,24,70,"source"],[25,70,24,57],[25,71,24,77,"charCodeAt"],[25,81,24,57],[25,82,24,88,"rawStart"],[25,90,24,57],[25,91,24,56],[25,92,24,16],[25,94,24,100],[26,0,25,20,"rawStart"],[26,12,25,20,"rawStart"],[26,20,25,28],[27,0,26,17],[29,0,28,16],[29,17,28,23,"rawStart"],[29,25,28,31],[29,28,28,34,"rawEnd"],[29,34,28,23],[29,38,28,44,"isWhiteSpace"],[29,50,28,56],[29,51,28,57],[29,56,28,62,"scanner"],[29,63,28,57],[29,64,28,70,"source"],[29,70,28,57],[29,71,28,77,"charCodeAt"],[29,81,28,57],[29,82,28,88,"rawEnd"],[29,88,28,94],[29,91,28,97],[29,92,28,57],[29,93,28,56],[29,94,28,16],[29,96,28,102],[30,0,29,20,"rawEnd"],[30,12,29,20,"rawEnd"],[30,18,29,26],[31,0,30,17],[33,0,32,16,"value"],[33,10,32,16,"value"],[33,15,32,21],[33,18,32,24],[34,0,33,20,"type"],[34,12,33,20,"type"],[34,16,33,24],[34,18,33,26],[34,23,32,24],[35,0,34,20,"loc"],[35,12,34,20,"loc"],[35,15,34,23],[35,17,34,25],[35,22,34,30,"getLocation"],[35,33,34,25],[35,34,34,42,"rawStart"],[35,42,34,25],[35,44,34,52,"rawEnd"],[35,50,34,25],[35,51,32,24],[36,0,35,20,"value"],[36,12,35,20,"value"],[36,17,35,25],[36,19,35,27],[36,24,35,32,"scanner"],[36,31,35,27],[36,32,35,40,"source"],[36,38,35,27],[36,39,35,47,"substring"],[36,48,35,27],[36,49,35,57,"rawStart"],[36,57,35,27],[36,59,35,67,"rawEnd"],[36,65,35,27],[37,0,32,24],[37,11,32,16],[38,0,38,16],[38,15,38,21,"eat"],[38,18,38,16],[38,19,38,25,"URL"],[38,22,38,16],[39,0,39,16],[41,0,41,12],[41,13,41,17,"FUNCTION"],[41,21,41,12],[42,0,42,16],[42,14,42,20],[42,15,42,21,"cmpStr"],[42,21,42,27],[42,22,42,28],[42,27,42,33,"scanner"],[42,34,42,28],[42,35,42,41,"source"],[42,41,42,27],[42,43,42,49],[42,48,42,54,"scanner"],[42,55,42,49],[42,56,42,62,"tokenStart"],[42,66,42,27],[42,68,42,74],[42,73,42,79,"scanner"],[42,80,42,74],[42,81,42,87,"tokenEnd"],[42,89,42,27],[42,91,42,97],[42,97,42,27],[42,98,42,16],[42,100,42,106],[43,0,43,20],[43,17,43,25,"error"],[43,22,43,20],[43,23,43,31],[43,52,43,20],[44,0,44,17],[46,0,46,16],[46,15,46,21,"eat"],[46,18,46,16],[46,19,46,25,"FUNCTION"],[46,27,46,16],[47,0,47,16],[47,15,47,21,"scanner"],[47,22,47,16],[47,23,47,29,"skipSC"],[47,29,47,16],[48,0,48,16,"value"],[48,10,48,16,"value"],[48,15,48,21],[48,18,48,24],[48,23,48,29,"String"],[48,29,48,24],[48,31,48,16],[49,0,49,16],[49,15,49,21,"scanner"],[49,22,49,16],[49,23,49,29,"skipSC"],[49,29,49,16],[50,0,50,16],[50,15,50,21,"eat"],[50,18,50,16],[50,19,50,25,"RIGHTPARENTHESIS"],[50,35,50,16],[51,0,51,16],[53,0,53,12],[54,0,54,16],[54,15,54,21,"error"],[54,20,54,16],[54,21,54,27],[54,50,54,16],[55,0,19,8],[57,0,57,8],[57,13,57,15],[58,0,58,12,"type"],[58,8,58,12,"type"],[58,12,58,16],[58,14,58,18],[58,19,57,15],[59,0,59,12,"loc"],[59,8,59,12,"loc"],[59,11,59,15],[59,13,59,17],[59,18,59,22,"getLocation"],[59,29,59,17],[59,30,59,34,"start"],[59,35,59,17],[59,37,59,41],[59,42,59,46,"scanner"],[59,49,59,41],[59,50,59,54,"tokenStart"],[59,60,59,17],[59,61,57,15],[60,0,60,12,"value"],[60,8,60,12,"value"],[60,13,60,17],[60,15,60,19,"value"],[61,0,57,15],[61,7,57,8],[62,0,62,5],[62,5,10,17],[63,0,63,4,"generate"],[63,4,63,4,"generate"],[63,12,63,12],[63,14,63,14],[63,32,63,23,"node"],[63,36,63,14],[63,38,63,29],[64,0,64,8],[64,11,64,13,"chunk"],[64,16,64,8],[64,17,64,19],[64,22,64,8],[65,0,65,8],[65,11,65,13,"chunk"],[65,16,65,8],[65,17,65,19],[65,20,65,8],[66,0,66,8],[66,11,66,13,"node"],[66,15,66,8],[66,16,66,18,"node"],[66,20,66,22],[66,21,66,23,"value"],[66,26,66,8],[67,0,67,8],[67,11,67,13,"chunk"],[67,16,67,8],[67,17,67,19],[67,20,67,8],[68,0,68,5],[69,0,10,17],[69,3,10,0]]},"type":"js/module"}]}