{"dependencies":[{"name":"../../tokenizer","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var tokenizer = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\");\n\n  var TYPE = tokenizer.TYPE;\n  var WhiteSpace = TYPE.WhiteSpace;\n  var Semicolon = TYPE.Semicolon;\n  var LeftCurlyBracket = TYPE.LeftCurlyBracket;\n  var Delim = TYPE.Delim;\n  var EXCLAMATIONMARK = 0x0021;\n\n  function getOffsetExcludeWS() {\n    if (this.scanner.tokenIndex > 0) {\n      if (this.scanner.lookupType(-1) === WhiteSpace) {\n        return this.scanner.tokenIndex > 1 ? this.scanner.getTokenStart(this.scanner.tokenIndex - 1) : this.scanner.firstCharOffset;\n      }\n    }\n\n    return this.scanner.tokenStart;\n  }\n\n  function balanceEnd() {\n    return 0;\n  }\n\n  function leftCurlyBracket(tokenType) {\n    return tokenType === LeftCurlyBracket ? 1 : 0;\n  }\n\n  function leftCurlyBracketOrSemicolon(tokenType) {\n    return tokenType === LeftCurlyBracket || tokenType === Semicolon ? 1 : 0;\n  }\n\n  function exclamationMarkOrSemicolon(tokenType, source, offset) {\n    if (tokenType === Delim && source.charCodeAt(offset) === EXCLAMATIONMARK) {\n      return 1;\n    }\n\n    return tokenType === Semicolon ? 1 : 0;\n  }\n\n  function semicolonIncluded(tokenType) {\n    return tokenType === Semicolon ? 2 : 0;\n  }\n\n  module.exports = {\n    name: 'Raw',\n    structure: {\n      value: String\n    },\n    parse: function parse(startToken, mode, excludeWhiteSpace) {\n      var startOffset = this.scanner.getTokenStart(startToken);\n      var endOffset;\n      this.scanner.skip(this.scanner.getRawLength(startToken, mode || balanceEnd));\n\n      if (excludeWhiteSpace && this.scanner.tokenStart > startOffset) {\n        endOffset = getOffsetExcludeWS.call(this);\n      } else {\n        endOffset = this.scanner.tokenStart;\n      }\n\n      return {\n        type: 'Raw',\n        loc: this.getLocation(startOffset, endOffset),\n        value: this.scanner.source.substring(startOffset, endOffset)\n      };\n    },\n    generate: function generate(node) {\n      this.chunk(node.value);\n    },\n    mode: {\n      default: balanceEnd,\n      leftCurlyBracket: leftCurlyBracket,\n      leftCurlyBracketOrSemicolon: leftCurlyBracketOrSemicolon,\n      exclamationMarkOrSemicolon: exclamationMarkOrSemicolon,\n      semicolonIncluded: semicolonIncluded\n    }\n  };\n});","map":[[2,0,1,0],[2,6,1,4,"tokenizer"],[2,15,1,13],[2,18,1,16,"require"],[2,29,1,23],[2,67,1,0],[4,0,2,0],[4,6,2,4,"TYPE"],[4,10,2,8],[4,13,2,11,"tokenizer"],[4,22,2,20],[4,23,2,21,"TYPE"],[4,27,2,0],[5,0,4,0],[5,6,4,4,"WhiteSpace"],[5,16,4,14],[5,19,4,17,"TYPE"],[5,23,4,21],[5,24,4,22,"WhiteSpace"],[5,34,4,0],[6,0,5,0],[6,6,5,4,"Semicolon"],[6,15,5,13],[6,18,5,16,"TYPE"],[6,22,5,20],[6,23,5,21,"Semicolon"],[6,32,5,0],[7,0,6,0],[7,6,6,4,"LeftCurlyBracket"],[7,22,6,20],[7,25,6,23,"TYPE"],[7,29,6,27],[7,30,6,28,"LeftCurlyBracket"],[7,46,6,0],[8,0,7,0],[8,6,7,4,"Delim"],[8,11,7,9],[8,14,7,12,"TYPE"],[8,18,7,16],[8,19,7,17,"Delim"],[8,24,7,0],[9,0,8,0],[9,6,8,4,"EXCLAMATIONMARK"],[9,21,8,19],[9,24,8,22],[9,30,8,0],[11,0,10,0],[11,11,10,9,"getOffsetExcludeWS"],[11,29,10,0],[11,32,10,30],[12,0,11,4],[12,8,11,8],[12,13,11,13,"scanner"],[12,20,11,8],[12,21,11,21,"tokenIndex"],[12,31,11,8],[12,34,11,34],[12,35,11,4],[12,37,11,37],[13,0,12,8],[13,10,12,12],[13,15,12,17,"scanner"],[13,22,12,12],[13,23,12,25,"lookupType"],[13,33,12,12],[13,34,12,36],[13,35,12,37],[13,36,12,12],[13,42,12,44,"WhiteSpace"],[13,52,12,8],[13,54,12,56],[14,0,13,12],[14,15,13,19],[14,20,13,24,"scanner"],[14,27,13,19],[14,28,13,32,"tokenIndex"],[14,38,13,19],[14,41,13,45],[14,42,13,19],[14,45,14,18],[14,50,14,23,"scanner"],[14,57,14,18],[14,58,14,31,"getTokenStart"],[14,71,14,18],[14,72,14,45],[14,77,14,50,"scanner"],[14,84,14,45],[14,85,14,58,"tokenIndex"],[14,95,14,45],[14,98,14,71],[14,99,14,18],[14,100,13,19],[14,103,15,18],[14,108,15,23,"scanner"],[14,115,15,18],[14,116,15,31,"firstCharOffset"],[14,131,13,12],[15,0,16,9],[16,0,17,5],[18,0,19,4],[18,11,19,11],[18,16,19,16,"scanner"],[18,23,19,11],[18,24,19,24,"tokenStart"],[18,34,19,4],[19,0,20,1],[21,0,23,0],[21,11,23,9,"balanceEnd"],[21,21,23,0],[21,24,23,22],[22,0,24,4],[22,11,24,11],[22,12,24,4],[23,0,25,1],[25,0,28,0],[25,11,28,9,"leftCurlyBracket"],[25,27,28,0],[25,28,28,26,"tokenType"],[25,37,28,0],[25,39,28,37],[26,0,29,4],[26,11,29,11,"tokenType"],[26,20,29,20],[26,25,29,25,"LeftCurlyBracket"],[26,41,29,11],[26,44,29,44],[26,45,29,11],[26,48,29,48],[26,49,29,4],[27,0,30,1],[29,0,33,0],[29,11,33,9,"leftCurlyBracketOrSemicolon"],[29,38,33,0],[29,39,33,37,"tokenType"],[29,48,33,0],[29,50,33,48],[30,0,34,4],[30,11,34,11,"tokenType"],[30,20,34,20],[30,25,34,25,"LeftCurlyBracket"],[30,41,34,11],[30,45,34,45,"tokenType"],[30,54,34,54],[30,59,34,59,"Semicolon"],[30,68,34,11],[30,71,34,71],[30,72,34,11],[30,75,34,75],[30,76,34,4],[31,0,35,1],[33,0,38,0],[33,11,38,9,"exclamationMarkOrSemicolon"],[33,37,38,0],[33,38,38,36,"tokenType"],[33,47,38,0],[33,49,38,47,"source"],[33,55,38,0],[33,57,38,55,"offset"],[33,63,38,0],[33,65,38,63],[34,0,39,4],[34,8,39,8,"tokenType"],[34,17,39,17],[34,22,39,22,"Delim"],[34,27,39,8],[34,31,39,31,"source"],[34,37,39,37],[34,38,39,38,"charCodeAt"],[34,48,39,31],[34,49,39,49,"offset"],[34,55,39,31],[34,61,39,61,"EXCLAMATIONMARK"],[34,76,39,4],[34,78,39,78],[35,0,40,8],[35,13,40,15],[35,14,40,8],[36,0,41,5],[38,0,43,4],[38,11,43,11,"tokenType"],[38,20,43,20],[38,25,43,25,"Semicolon"],[38,34,43,11],[38,37,43,37],[38,38,43,11],[38,41,43,41],[38,42,43,4],[39,0,44,1],[41,0,47,0],[41,11,47,9,"semicolonIncluded"],[41,28,47,0],[41,29,47,27,"tokenType"],[41,38,47,0],[41,40,47,38],[42,0,48,4],[42,11,48,11,"tokenType"],[42,20,48,20],[42,25,48,25,"Semicolon"],[42,34,48,11],[42,37,48,37],[42,38,48,11],[42,41,48,41],[42,42,48,4],[43,0,49,1],[45,0,51,0,"module"],[45,2,51,0,"module"],[45,8,51,6],[45,9,51,7,"exports"],[45,16,51,0],[45,19,51,17],[46,0,52,4,"name"],[46,4,52,4,"name"],[46,8,52,8],[46,10,52,10],[46,15,51,17],[47,0,53,4,"structure"],[47,4,53,4,"structure"],[47,13,53,13],[47,15,53,15],[48,0,54,8,"value"],[48,6,54,8,"value"],[48,11,54,13],[48,13,54,15,"String"],[49,0,53,15],[49,5,51,17],[50,0,56,4,"parse"],[50,4,56,4,"parse"],[50,9,56,9],[50,11,56,11],[50,26,56,20,"startToken"],[50,36,56,11],[50,38,56,32,"mode"],[50,42,56,11],[50,44,56,38,"excludeWhiteSpace"],[50,61,56,11],[50,63,56,57],[51,0,57,8],[51,10,57,12,"startOffset"],[51,21,57,23],[51,24,57,26],[51,29,57,31,"scanner"],[51,36,57,26],[51,37,57,39,"getTokenStart"],[51,50,57,26],[51,51,57,53,"startToken"],[51,61,57,26],[51,62,57,8],[52,0,58,8],[52,10,58,12,"endOffset"],[52,19,58,8],[53,0,60,8],[53,11,60,13,"scanner"],[53,18,60,8],[53,19,60,21,"skip"],[53,23,60,8],[53,24,61,12],[53,29,61,17,"scanner"],[53,36,61,12],[53,37,61,25,"getRawLength"],[53,49,61,12],[53,50,61,38,"startToken"],[53,60,61,12],[53,62,61,50,"mode"],[53,66,61,54],[53,70,61,58,"balanceEnd"],[53,80,61,12],[53,81,60,8],[55,0,64,8],[55,10,64,12,"excludeWhiteSpace"],[55,27,64,29],[55,31,64,33],[55,36,64,38,"scanner"],[55,43,64,33],[55,44,64,46,"tokenStart"],[55,54,64,33],[55,57,64,59,"startOffset"],[55,68,64,8],[55,70,64,72],[56,0,65,12,"endOffset"],[56,8,65,12,"endOffset"],[56,17,65,21],[56,20,65,24,"getOffsetExcludeWS"],[56,38,65,42],[56,39,65,43,"call"],[56,43,65,24],[56,44,65,48],[56,48,65,24],[56,49,65,12],[57,0,66,9],[57,7,64,8],[57,13,66,15],[58,0,67,12,"endOffset"],[58,8,67,12,"endOffset"],[58,17,67,21],[58,20,67,24],[58,25,67,29,"scanner"],[58,32,67,24],[58,33,67,37,"tokenStart"],[58,43,67,12],[59,0,68,9],[61,0,70,8],[61,13,70,15],[62,0,71,12,"type"],[62,8,71,12,"type"],[62,12,71,16],[62,14,71,18],[62,19,70,15],[63,0,72,12,"loc"],[63,8,72,12,"loc"],[63,11,72,15],[63,13,72,17],[63,18,72,22,"getLocation"],[63,29,72,17],[63,30,72,34,"startOffset"],[63,41,72,17],[63,43,72,47,"endOffset"],[63,52,72,17],[63,53,70,15],[64,0,73,12,"value"],[64,8,73,12,"value"],[64,13,73,17],[64,15,73,19],[64,20,73,24,"scanner"],[64,27,73,19],[64,28,73,32,"source"],[64,34,73,19],[64,35,73,39,"substring"],[64,44,73,19],[64,45,73,49,"startOffset"],[64,56,73,19],[64,58,73,62,"endOffset"],[64,67,73,19],[65,0,70,15],[65,7,70,8],[66,0,75,5],[66,5,51,17],[67,0,76,4,"generate"],[67,4,76,4,"generate"],[67,12,76,12],[67,14,76,14],[67,32,76,23,"node"],[67,36,76,14],[67,38,76,29],[68,0,77,8],[68,11,77,13,"chunk"],[68,16,77,8],[68,17,77,19,"node"],[68,21,77,23],[68,22,77,24,"value"],[68,27,77,8],[69,0,78,5],[69,5,51,17],[70,0,80,4,"mode"],[70,4,80,4,"mode"],[70,8,80,8],[70,10,80,10],[71,0,81,8,"default"],[71,6,81,8,"default"],[71,13,81,15],[71,15,81,17,"balanceEnd"],[71,25,80,10],[72,0,82,8,"leftCurlyBracket"],[72,6,82,8,"leftCurlyBracket"],[72,22,82,24],[72,24,82,26,"leftCurlyBracket"],[72,40,80,10],[73,0,83,8,"leftCurlyBracketOrSemicolon"],[73,6,83,8,"leftCurlyBracketOrSemicolon"],[73,33,83,35],[73,35,83,37,"leftCurlyBracketOrSemicolon"],[73,62,80,10],[74,0,84,8,"exclamationMarkOrSemicolon"],[74,6,84,8,"exclamationMarkOrSemicolon"],[74,32,84,34],[74,34,84,36,"exclamationMarkOrSemicolon"],[74,60,80,10],[75,0,85,8,"semicolonIncluded"],[75,6,85,8,"semicolonIncluded"],[75,23,85,25],[75,25,85,27,"semicolonIncluded"],[76,0,80,10],[77,0,51,17],[77,3,51,0]]},"type":"js/module"}]}