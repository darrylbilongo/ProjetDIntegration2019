{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  var shape = {\n    generic: true,\n    types: {},\n    properties: {},\n    parseContext: {},\n    scope: {},\n    atrule: ['parse'],\n    pseudo: ['parse'],\n    node: ['name', 'structure', 'parse', 'generate', 'walkContext']\n  };\n\n  function isObject(value) {\n    return value && value.constructor === Object;\n  }\n\n  function copy(value) {\n    if (isObject(value)) {\n      var res = {};\n\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          res[key] = value[key];\n        }\n      }\n\n      return res;\n    } else {\n      return value;\n    }\n  }\n\n  function extend(dest, src) {\n    for (var key in src) {\n      if (hasOwnProperty.call(src, key)) {\n        if (isObject(dest[key])) {\n          extend(dest[key], copy(src[key]));\n        } else {\n          dest[key] = copy(src[key]);\n        }\n      }\n    }\n  }\n\n  function mix(dest, src, shape) {\n    for (var key in shape) {\n      if (hasOwnProperty.call(shape, key) === false) {\n        continue;\n      }\n\n      if (shape[key] === true) {\n        if (key in src) {\n          if (hasOwnProperty.call(src, key)) {\n            dest[key] = copy(src[key]);\n          }\n        }\n      } else if (shape[key]) {\n        if (isObject(shape[key])) {\n          var res = {};\n          extend(res, dest[key]);\n          extend(res, src[key]);\n          dest[key] = res;\n        } else if (Array.isArray(shape[key])) {\n          var res = {};\n          var innerShape = shape[key].reduce(function (s, k) {\n            s[k] = true;\n            return s;\n          }, {});\n\n          for (var name in dest[key]) {\n            if (hasOwnProperty.call(dest[key], name)) {\n              res[name] = {};\n\n              if (dest[key] && dest[key][name]) {\n                mix(res[name], dest[key][name], innerShape);\n              }\n            }\n          }\n\n          for (var name in src[key]) {\n            if (hasOwnProperty.call(src[key], name)) {\n              if (!res[name]) {\n                res[name] = {};\n              }\n\n              if (src[key] && src[key][name]) {\n                mix(res[name], src[key][name], innerShape);\n              }\n            }\n          }\n\n          dest[key] = res;\n        }\n      }\n    }\n\n    return dest;\n  }\n\n  module.exports = function (dest, src) {\n    return mix(dest, src, shape);\n  };\n});","map":[[2,0,1,0],[2,6,1,4,"hasOwnProperty"],[2,20,1,18],[2,23,1,21,"Object"],[2,29,1,27],[2,30,1,28,"prototype"],[2,39,1,21],[2,40,1,38,"hasOwnProperty"],[2,54,1,0],[3,0,2,0],[3,6,2,4,"shape"],[3,11,2,9],[3,14,2,12],[4,0,3,4,"generic"],[4,4,3,4,"generic"],[4,11,3,11],[4,13,3,13],[4,17,2,12],[5,0,4,4,"types"],[5,4,4,4,"types"],[5,9,4,9],[5,11,4,11],[5,13,2,12],[6,0,5,4,"properties"],[6,4,5,4,"properties"],[6,14,5,14],[6,16,5,16],[6,18,2,12],[7,0,6,4,"parseContext"],[7,4,6,4,"parseContext"],[7,16,6,16],[7,18,6,18],[7,20,2,12],[8,0,7,4,"scope"],[8,4,7,4,"scope"],[8,9,7,9],[8,11,7,11],[8,13,2,12],[9,0,8,4,"atrule"],[9,4,8,4,"atrule"],[9,10,8,10],[9,12,8,12],[9,13,8,13],[9,20,8,12],[9,21,2,12],[10,0,9,4,"pseudo"],[10,4,9,4,"pseudo"],[10,10,9,10],[10,12,9,12],[10,13,9,13],[10,20,9,12],[10,21,2,12],[11,0,10,4,"node"],[11,4,10,4,"node"],[11,8,10,8],[11,10,10,10],[11,11,10,11],[11,17,10,10],[11,19,10,19],[11,30,10,10],[11,32,10,32],[11,39,10,10],[11,41,10,41],[11,51,10,10],[11,53,10,53],[11,66,10,10],[12,0,2,12],[12,3,2,0],[14,0,13,0],[14,11,13,9,"isObject"],[14,19,13,0],[14,20,13,18,"value"],[14,25,13,0],[14,27,13,25],[15,0,14,4],[15,11,14,11,"value"],[15,16,14,16],[15,20,14,20,"value"],[15,25,14,25],[15,26,14,26,"constructor"],[15,37,14,20],[15,42,14,42,"Object"],[15,48,14,4],[16,0,15,1],[18,0,17,0],[18,11,17,9,"copy"],[18,15,17,0],[18,16,17,14,"value"],[18,21,17,0],[18,23,17,21],[19,0,18,4],[19,8,18,8,"isObject"],[19,16,18,16],[19,17,18,17,"value"],[19,22,18,16],[19,23,18,4],[19,25,18,25],[20,0,19,8],[20,10,19,12,"res"],[20,13,19,15],[20,16,19,18],[20,18,19,8],[22,0,20,8],[22,11,20,13],[22,15,20,17,"key"],[22,18,20,8],[22,22,20,24,"value"],[22,27,20,8],[22,29,20,31],[23,0,21,12],[23,12,21,16,"hasOwnProperty"],[23,26,21,30],[23,27,21,31,"call"],[23,31,21,16],[23,32,21,36,"value"],[23,37,21,16],[23,39,21,43,"key"],[23,42,21,16],[23,43,21,12],[23,45,21,49],[24,0,22,16,"res"],[24,10,22,16,"res"],[24,13,22,19],[24,14,22,20,"key"],[24,17,22,19],[24,18,22,16],[24,21,22,27,"value"],[24,26,22,32],[24,27,22,33,"key"],[24,30,22,32],[24,31,22,16],[25,0,23,13],[26,0,24,9],[28,0,25,8],[28,13,25,15,"res"],[28,16,25,8],[29,0,26,5],[29,5,18,4],[29,11,26,11],[30,0,27,8],[30,13,27,15,"value"],[30,18,27,8],[31,0,28,5],[32,0,29,1],[34,0,31,0],[34,11,31,9,"extend"],[34,17,31,0],[34,18,31,16,"dest"],[34,22,31,0],[34,24,31,22,"src"],[34,27,31,0],[34,29,31,27],[35,0,32,4],[35,9,32,9],[35,13,32,13,"key"],[35,16,32,4],[35,20,32,20,"src"],[35,23,32,4],[35,25,32,25],[36,0,33,8],[36,10,33,12,"hasOwnProperty"],[36,24,33,26],[36,25,33,27,"call"],[36,29,33,12],[36,30,33,32,"src"],[36,33,33,12],[36,35,33,37,"key"],[36,38,33,12],[36,39,33,8],[36,41,33,43],[37,0,34,12],[37,12,34,16,"isObject"],[37,20,34,24],[37,21,34,25,"dest"],[37,25,34,29],[37,26,34,30,"key"],[37,29,34,29],[37,30,34,24],[37,31,34,12],[37,33,34,37],[38,0,35,16,"extend"],[38,10,35,16,"extend"],[38,16,35,22],[38,17,35,23,"dest"],[38,21,35,27],[38,22,35,28,"key"],[38,25,35,27],[38,26,35,22],[38,28,35,34,"copy"],[38,32,35,38],[38,33,35,39,"src"],[38,36,35,42],[38,37,35,43,"key"],[38,40,35,42],[38,41,35,38],[38,42,35,22],[38,43,35,16],[39,0,36,13],[39,9,34,12],[39,15,36,19],[40,0,37,16,"dest"],[40,10,37,16,"dest"],[40,14,37,20],[40,15,37,21,"key"],[40,18,37,20],[40,19,37,16],[40,22,37,28,"copy"],[40,26,37,32],[40,27,37,33,"src"],[40,30,37,36],[40,31,37,37,"key"],[40,34,37,36],[40,35,37,32],[40,36,37,16],[41,0,38,13],[42,0,39,9],[43,0,40,5],[44,0,41,1],[46,0,43,0],[46,11,43,9,"mix"],[46,14,43,0],[46,15,43,13,"dest"],[46,19,43,0],[46,21,43,19,"src"],[46,24,43,0],[46,26,43,24,"shape"],[46,31,43,0],[46,33,43,31],[47,0,44,4],[47,9,44,9],[47,13,44,13,"key"],[47,16,44,4],[47,20,44,20,"shape"],[47,25,44,4],[47,27,44,27],[48,0,45,8],[48,10,45,12,"hasOwnProperty"],[48,24,45,26],[48,25,45,27,"call"],[48,29,45,12],[48,30,45,32,"shape"],[48,35,45,12],[48,37,45,39,"key"],[48,40,45,12],[48,46,45,48],[48,51,45,8],[48,53,45,55],[49,0,46,12],[50,0,47,9],[52,0,49,8],[52,10,49,12,"shape"],[52,15,49,17],[52,16,49,18,"key"],[52,19,49,17],[52,20,49,12],[52,25,49,27],[52,29,49,8],[52,31,49,33],[53,0,50,12],[53,12,50,16,"key"],[53,15,50,19],[53,19,50,23,"src"],[53,22,50,12],[53,24,50,28],[54,0,51,16],[54,14,51,20,"hasOwnProperty"],[54,28,51,34],[54,29,51,35,"call"],[54,33,51,20],[54,34,51,40,"src"],[54,37,51,20],[54,39,51,45,"key"],[54,42,51,20],[54,43,51,16],[54,45,51,51],[55,0,52,20,"dest"],[55,12,52,20,"dest"],[55,16,52,24],[55,17,52,25,"key"],[55,20,52,24],[55,21,52,20],[55,24,52,32,"copy"],[55,28,52,36],[55,29,52,37,"src"],[55,32,52,40],[55,33,52,41,"key"],[55,36,52,40],[55,37,52,36],[55,38,52,20],[56,0,53,17],[57,0,54,13],[58,0,55,9],[58,7,49,8],[58,13,55,15],[58,17,55,19,"shape"],[58,22,55,24],[58,23,55,25,"key"],[58,26,55,24],[58,27,55,15],[58,29,55,31],[59,0,56,12],[59,12,56,16,"isObject"],[59,20,56,24],[59,21,56,25,"shape"],[59,26,56,30],[59,27,56,31,"key"],[59,30,56,30],[59,31,56,24],[59,32,56,12],[59,34,56,38],[60,0,57,16],[60,14,57,20,"res"],[60,17,57,23],[60,20,57,26],[60,22,57,16],[61,0,58,16,"extend"],[61,10,58,16,"extend"],[61,16,58,22],[61,17,58,23,"res"],[61,20,58,22],[61,22,58,28,"dest"],[61,26,58,32],[61,27,58,33,"key"],[61,30,58,32],[61,31,58,22],[61,32,58,16],[62,0,59,16,"extend"],[62,10,59,16,"extend"],[62,16,59,22],[62,17,59,23,"res"],[62,20,59,22],[62,22,59,28,"src"],[62,25,59,31],[62,26,59,32,"key"],[62,29,59,31],[62,30,59,22],[62,31,59,16],[63,0,60,16,"dest"],[63,10,60,16,"dest"],[63,14,60,20],[63,15,60,21,"key"],[63,18,60,20],[63,19,60,16],[63,22,60,28,"res"],[63,25,60,16],[64,0,61,13],[64,9,56,12],[64,15,61,19],[64,19,61,23,"Array"],[64,24,61,28],[64,25,61,29,"isArray"],[64,32,61,23],[64,33,61,37,"shape"],[64,38,61,42],[64,39,61,43,"key"],[64,42,61,42],[64,43,61,23],[64,44,61,19],[64,46,61,50],[65,0,62,16],[65,14,62,20,"res"],[65,17,62,23],[65,20,62,26],[65,22,62,16],[66,0,63,16],[66,14,63,20,"innerShape"],[66,24,63,30],[66,27,63,33,"shape"],[66,32,63,38],[66,33,63,39,"key"],[66,36,63,38],[66,37,63,33],[66,38,63,44,"reduce"],[66,44,63,33],[66,45,63,51],[66,55,63,60,"s"],[66,56,63,51],[66,58,63,63,"k"],[66,59,63,51],[66,61,63,66],[67,0,64,20,"s"],[67,12,64,20,"s"],[67,13,64,21],[67,14,64,22,"k"],[67,15,64,21],[67,16,64,20],[67,19,64,27],[67,23,64,20],[68,0,65,20],[68,19,65,27,"s"],[68,20,65,20],[69,0,66,17],[69,11,63,33],[69,13,66,19],[69,15,63,33],[69,16,63,16],[71,0,67,16],[71,15,67,21],[71,19,67,25,"name"],[71,23,67,16],[71,27,67,33,"dest"],[71,31,67,37],[71,32,67,38,"key"],[71,35,67,37],[71,36,67,16],[71,38,67,44],[72,0,68,20],[72,16,68,24,"hasOwnProperty"],[72,30,68,38],[72,31,68,39,"call"],[72,35,68,24],[72,36,68,44,"dest"],[72,40,68,48],[72,41,68,49,"key"],[72,44,68,48],[72,45,68,24],[72,47,68,55,"name"],[72,51,68,24],[72,52,68,20],[72,54,68,62],[73,0,69,24,"res"],[73,14,69,24,"res"],[73,17,69,27],[73,18,69,28,"name"],[73,22,69,27],[73,23,69,24],[73,26,69,36],[73,28,69,24],[75,0,70,24],[75,18,70,28,"dest"],[75,22,70,32],[75,23,70,33,"key"],[75,26,70,32],[75,27,70,28],[75,31,70,41,"dest"],[75,35,70,45],[75,36,70,46,"key"],[75,39,70,45],[75,40,70,41],[75,41,70,51,"name"],[75,45,70,41],[75,46,70,24],[75,48,70,58],[76,0,71,28,"mix"],[76,16,71,28,"mix"],[76,19,71,31],[76,20,71,32,"res"],[76,23,71,35],[76,24,71,36,"name"],[76,28,71,35],[76,29,71,31],[76,31,71,43,"dest"],[76,35,71,47],[76,36,71,48,"key"],[76,39,71,47],[76,40,71,43],[76,41,71,53,"name"],[76,45,71,43],[76,46,71,31],[76,48,71,60,"innerShape"],[76,58,71,31],[76,59,71,28],[77,0,72,25],[78,0,73,21],[79,0,74,17],[81,0,75,16],[81,15,75,21],[81,19,75,25,"name"],[81,23,75,16],[81,27,75,33,"src"],[81,30,75,36],[81,31,75,37,"key"],[81,34,75,36],[81,35,75,16],[81,37,75,43],[82,0,76,20],[82,16,76,24,"hasOwnProperty"],[82,30,76,38],[82,31,76,39,"call"],[82,35,76,24],[82,36,76,44,"src"],[82,39,76,47],[82,40,76,48,"key"],[82,43,76,47],[82,44,76,24],[82,46,76,54,"name"],[82,50,76,24],[82,51,76,20],[82,53,76,61],[83,0,77,24],[83,18,77,28],[83,19,77,29,"res"],[83,22,77,32],[83,23,77,33,"name"],[83,27,77,32],[83,28,77,24],[83,30,77,40],[84,0,78,28,"res"],[84,16,78,28,"res"],[84,19,78,31],[84,20,78,32,"name"],[84,24,78,31],[84,25,78,28],[84,28,78,40],[84,30,78,28],[85,0,79,25],[87,0,80,24],[87,18,80,28,"src"],[87,21,80,31],[87,22,80,32,"key"],[87,25,80,31],[87,26,80,28],[87,30,80,40,"src"],[87,33,80,43],[87,34,80,44,"key"],[87,37,80,43],[87,38,80,40],[87,39,80,49,"name"],[87,43,80,40],[87,44,80,24],[87,46,80,56],[88,0,81,28,"mix"],[88,16,81,28,"mix"],[88,19,81,31],[88,20,81,32,"res"],[88,23,81,35],[88,24,81,36,"name"],[88,28,81,35],[88,29,81,31],[88,31,81,43,"src"],[88,34,81,46],[88,35,81,47,"key"],[88,38,81,46],[88,39,81,43],[88,40,81,52,"name"],[88,44,81,43],[88,45,81,31],[88,47,81,59,"innerShape"],[88,57,81,31],[88,58,81,28],[89,0,82,25],[90,0,83,21],[91,0,84,17],[93,0,85,16,"dest"],[93,10,85,16,"dest"],[93,14,85,20],[93,15,85,21,"key"],[93,18,85,20],[93,19,85,16],[93,22,85,28,"res"],[93,25,85,16],[94,0,86,13],[95,0,87,9],[96,0,88,5],[98,0,89,4],[98,11,89,11,"dest"],[98,15,89,4],[99,0,90,1],[101,0,92,0,"module"],[101,2,92,0,"module"],[101,8,92,6],[101,9,92,7,"exports"],[101,16,92,0],[101,19,92,17],[101,29,92,26,"dest"],[101,33,92,17],[101,35,92,32,"src"],[101,38,92,17],[101,40,92,37],[102,0,93,4],[102,11,93,11,"mix"],[102,14,93,14],[102,15,93,15,"dest"],[102,19,93,14],[102,21,93,21,"src"],[102,24,93,14],[102,26,93,26,"shape"],[102,31,93,14],[102,32,93,4],[103,0,94,1],[103,3,92,0]]},"type":"js/module"}]}