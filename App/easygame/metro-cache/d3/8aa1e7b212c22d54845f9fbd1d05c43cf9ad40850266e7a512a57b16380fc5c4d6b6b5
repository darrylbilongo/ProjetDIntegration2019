{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./extractColor","data":{"isAsync":false}},{"name":"./extractOpacity","data":{"isAsync":false}},{"name":"./extractTransform","data":{"isAsync":false}},{"name":"../units","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = extractGradient;\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2], \"react\"));\n\n  var _extractColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"./extractColor\"));\n\n  var _extractOpacity = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./extractOpacity\"));\n\n  var _extractTransform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./extractTransform\"));\n\n  var _units = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"../units\"));\n\n  var percentReg = /^([+\\-]?\\d+(?:\\.\\d+)?(?:[eE][+\\-]?\\d+)?)(%?)$/;\n\n  function percentToFloat(percent) {\n    if (typeof percent === 'number') {\n      return percent;\n    }\n\n    if (typeof percent === 'object' && typeof percent.__getAnimatedValue === 'function') {\n      return percent.__getAnimatedValue();\n    }\n\n    var matched = typeof percent === 'string' && percent.match(percentReg);\n\n    if (!matched) {\n      console.warn(\"\\\"\" + percent + \"\\\" is not a valid number or percentage string.\");\n      return 0;\n    }\n\n    return matched[2] ? +matched[1] / 100 : +matched[1];\n  }\n\n  var offsetComparator = function offsetComparator(object, other) {\n    return object[0] - other[0];\n  };\n\n  function extractGradient(props, parent) {\n    var id = props.id,\n        children = props.children,\n        gradientTransform = props.gradientTransform,\n        transform = props.transform,\n        gradientUnits = props.gradientUnits;\n\n    if (!id) {\n      return null;\n    }\n\n    var stops = [];\n    var childArray = children ? _react.Children.map(children, function (child) {\n      return _react.default.cloneElement(child, {\n        parent: parent\n      });\n    }) : [];\n    var l = childArray.length;\n\n    for (var i = 0; i < l; i++) {\n      var _childArray$i$props = childArray[i].props,\n          style = _childArray$i$props.style,\n          _childArray$i$props$o = _childArray$i$props.offset,\n          offset = _childArray$i$props$o === void 0 ? style && style.offset : _childArray$i$props$o,\n          _childArray$i$props$s = _childArray$i$props.stopColor,\n          stopColor = _childArray$i$props$s === void 0 ? style && style.stopColor || '#000' : _childArray$i$props$s,\n          _childArray$i$props$s2 = _childArray$i$props.stopOpacity,\n          stopOpacity = _childArray$i$props$s2 === void 0 ? style && style.stopOpacity : _childArray$i$props$s2;\n      var offsetNumber = percentToFloat(offset || 0);\n      var color = stopColor && (0, _extractColor.default)(stopColor);\n\n      if (typeof color !== 'number' || isNaN(offsetNumber)) {\n        console.warn(\"\\\"\" + stopColor + \"\\\" is not a valid color or \\\"\" + offset + \"\\\" is not a valid offset\");\n        continue;\n      }\n\n      var alpha = Math.round((0, _extractOpacity.default)(stopOpacity) * 255);\n      stops.push([offsetNumber, color & 0x00ffffff | alpha << 24]);\n    }\n\n    stops.sort(offsetComparator);\n    var gradient = [];\n    var k = stops.length;\n\n    for (var j = 0; j < k; j++) {\n      var s = stops[j];\n      gradient.push(s[0], s[1]);\n    }\n\n    return {\n      name: id,\n      gradient: gradient,\n      children: childArray,\n      gradientUnits: gradientUnits && _units.default[gradientUnits] || 0,\n      gradientTransform: (0, _extractTransform.default)(gradientTransform || transform || props)\n    };\n  }\n});","map":[[11,0,1,0],[13,0,3,0],[15,0,4,0],[17,0,5,0],[19,0,7,0],[21,0,9,0],[21,6,9,6,"percentReg"],[21,16,9,16],[21,19,9,19],[21,66,9,0],[23,0,11,0],[23,11,11,9,"percentToFloat"],[23,25,11,0],[23,26,12,2,"percent"],[23,33,11,0],[23,35,18,10],[24,0,19,2],[24,8,19,6],[24,15,19,13,"percent"],[24,22,19,6],[24,27,19,25],[24,35,19,2],[24,37,19,35],[25,0,20,4],[25,13,20,11,"percent"],[25,20,20,4],[26,0,21,3],[28,0,22,2],[28,8,23,4],[28,15,23,11,"percent"],[28,22,23,4],[28,27,23,23],[28,35,23,4],[28,39,24,4],[28,46,24,11,"percent"],[28,53,24,18],[28,54,24,19,"__getAnimatedValue"],[28,72,24,4],[28,77,24,42],[28,87,22,2],[28,89,25,4],[29,0,26,4],[29,13,26,11,"percent"],[29,20,26,18],[29,21,26,19,"__getAnimatedValue"],[29,39,26,11],[29,41,26,4],[30,0,27,3],[32,0,28,2],[32,8,28,8,"matched"],[32,15,28,15],[32,18,28,18],[32,25,28,25,"percent"],[32,32,28,18],[32,37,28,37],[32,45,28,18],[32,49,28,49,"percent"],[32,56,28,56],[32,57,28,57,"match"],[32,62,28,49],[32,63,28,63,"percentReg"],[32,73,28,49],[32,74,28,2],[34,0,29,2],[34,8,29,6],[34,9,29,7,"matched"],[34,16,29,2],[34,18,29,16],[35,0,30,4,"console"],[35,6,30,4,"console"],[35,13,30,11],[35,14,30,12,"warn"],[35,18,30,4],[35,26,30,21,"percent"],[35,33,30,4],[36,0,31,4],[36,13,31,11],[36,14,31,4],[37,0,32,3],[39,0,34,2],[39,11,34,9,"matched"],[39,18,34,16],[39,19,34,17],[39,20,34,16],[39,21,34,9],[39,24,34,22],[39,25,34,23,"matched"],[39,32,34,30],[39,33,34,31],[39,34,34,30],[39,35,34,22],[39,38,34,36],[39,41,34,9],[39,44,34,42],[39,45,34,43,"matched"],[39,52,34,50],[39,53,34,51],[39,54,34,50],[39,55,34,2],[40,0,35,1],[42,0,37,0],[42,6,37,6,"offsetComparator"],[42,22,37,22],[42,25,37,25],[42,34,37,6,"offsetComparator"],[42,50,37,25],[42,51,37,26,"object"],[42,57,37,25],[42,59,37,44,"other"],[42,64,37,25],[43,0,37,25],[43,11,38,2,"object"],[43,17,38,8],[43,18,38,9],[43,19,38,8],[43,20,38,2],[43,23,38,14,"other"],[43,28,38,19],[43,29,38,20],[43,30,38,19],[43,31,37,25],[44,0,37,25],[44,3,37,0],[46,0,40,15],[46,11,40,24,"extractGradient"],[46,26,40,15],[46,27,41,2,"props"],[46,32,40,15],[46,34,48,2,"parent"],[46,40,40,15],[46,42,49,2],[47,0,49,2],[47,8,50,10,"id"],[47,10,49,2],[47,13,50,72,"props"],[47,18,49,2],[47,19,50,10,"id"],[47,21,49,2],[48,0,49,2],[48,8,50,14,"children"],[48,16,49,2],[48,19,50,72,"props"],[48,24,49,2],[48,25,50,14,"children"],[48,33,49,2],[49,0,49,2],[49,8,50,24,"gradientTransform"],[49,25,49,2],[49,28,50,72,"props"],[49,33,49,2],[49,34,50,24,"gradientTransform"],[49,51,49,2],[50,0,49,2],[50,8,50,43,"transform"],[50,17,49,2],[50,20,50,72,"props"],[50,25,49,2],[50,26,50,43,"transform"],[50,35,49,2],[51,0,49,2],[51,8,50,54,"gradientUnits"],[51,21,49,2],[51,24,50,72,"props"],[51,29,49,2],[51,30,50,54,"gradientUnits"],[51,43,49,2],[53,0,51,2],[53,8,51,6],[53,9,51,7,"id"],[53,11,51,2],[53,13,51,11],[54,0,52,4],[54,13,52,11],[54,17,52,4],[55,0,53,3],[57,0,55,2],[57,8,55,8,"stops"],[57,13,55,13],[57,16,55,16],[57,18,55,2],[58,0,56,2],[58,8,56,8,"childArray"],[58,18,56,18],[58,21,56,21,"children"],[58,29,56,29],[58,32,57,6,"Children"],[58,48,57,15,"map"],[58,51,57,6],[58,52,57,19,"children"],[58,60,57,6],[58,62,57,29],[58,72,57,29,"child"],[58,77,57,34],[59,0,57,34],[59,13,58,8,"React"],[59,28,58,14,"cloneElement"],[59,40,58,8],[59,41,58,27,"child"],[59,46,58,8],[59,48,58,34],[60,0,59,10,"parent"],[60,8,59,10,"parent"],[60,14,59,16],[60,16,59,10,"parent"],[61,0,58,34],[61,7,58,8],[61,8,57,34],[62,0,57,34],[62,5,57,6],[62,6,56,29],[62,9,62,6],[62,11,56,2],[63,0,63,2],[63,8,63,8,"l"],[63,9,63,9],[63,12,63,12,"childArray"],[63,22,63,22],[63,23,63,23,"length"],[63,29,63,2],[65,0,64,2],[65,9,64,7],[65,13,64,11,"i"],[65,14,64,12],[65,17,64,15],[65,18,64,2],[65,20,64,18,"i"],[65,21,64,19],[65,24,64,22,"l"],[65,25,64,2],[65,27,64,25,"i"],[65,28,64,26],[65,30,64,2],[65,32,64,30],[66,0,64,30],[66,32,72,8,"childArray"],[66,42,72,18],[66,43,72,19,"i"],[66,44,72,18],[66,45,64,30],[66,46,66,6,"props"],[66,51,64,30],[67,0,64,30],[67,10,67,8,"style"],[67,15,64,30],[67,38,67,8,"style"],[67,43,64,30],[68,0,64,30],[68,54,68,8,"offset"],[68,60,64,30],[69,0,64,30],[69,10,68,8,"offset"],[69,16,64,30],[69,54,68,17,"style"],[69,59,68,22],[69,63,68,26,"style"],[69,68,68,31],[69,69,68,32,"offset"],[69,75,64,30],[70,0,64,30],[70,54,69,8,"stopColor"],[70,63,64,30],[71,0,64,30],[71,10,69,8,"stopColor"],[71,19,64,30],[71,57,69,21,"style"],[71,62,69,26],[71,66,69,30,"style"],[71,71,69,35],[71,72,69,36,"stopColor"],[71,81,69,20],[71,85,69,50],[71,91,64,30],[72,0,64,30],[72,55,70,8,"stopOpacity"],[72,66,64,30],[73,0,64,30],[73,10,70,8,"stopOpacity"],[73,21,64,30],[73,60,70,22,"style"],[73,65,70,27],[73,69,70,31,"style"],[73,74,70,36],[73,75,70,37,"stopOpacity"],[73,86,64,30],[74,0,73,4],[74,10,73,10,"offsetNumber"],[74,22,73,22],[74,25,73,25,"percentToFloat"],[74,39,73,39],[74,40,73,40,"offset"],[74,46,73,46],[74,50,73,50],[74,51,73,39],[74,52,73,4],[75,0,74,4],[75,10,74,10,"color"],[75,15,74,15],[75,18,74,18,"stopColor"],[75,27,74,27],[75,31,74,31],[75,58,74,44,"stopColor"],[75,67,74,31],[75,68,74,4],[77,0,75,4],[77,10,75,8],[77,17,75,15,"color"],[77,22,75,8],[77,27,75,25],[77,35,75,8],[77,39,75,37,"isNaN"],[77,44,75,42],[77,45,75,43,"offsetNumber"],[77,57,75,42],[77,58,75,4],[77,60,75,58],[78,0,76,6,"console"],[78,8,76,6,"console"],[78,15,76,13],[78,16,76,14,"warn"],[78,20,76,6],[78,28,77,12,"stopColor"],[78,37,76,6],[78,74,77,51,"offset"],[78,80,76,6],[79,0,79,6],[80,0,80,5],[82,0,81,4],[82,10,81,10,"alpha"],[82,15,81,15],[82,18,81,18,"Math"],[82,22,81,22],[82,23,81,23,"round"],[82,28,81,18],[82,29,81,29],[82,58,81,44,"stopOpacity"],[82,69,81,29],[82,73,81,59],[82,76,81,18],[82,77,81,4],[83,0,82,4,"stops"],[83,6,82,4,"stops"],[83,11,82,9],[83,12,82,10,"push"],[83,16,82,4],[83,17,82,15],[83,18,82,16,"offsetNumber"],[83,30,82,15],[83,32,82,31,"color"],[83,37,82,36],[83,40,82,39],[83,50,82,30],[83,53,82,54,"alpha"],[83,58,82,59],[83,62,82,63],[83,64,82,15],[83,65,82,4],[84,0,83,3],[86,0,84,2,"stops"],[86,4,84,2,"stops"],[86,9,84,7],[86,10,84,8,"sort"],[86,14,84,2],[86,15,84,13,"offsetComparator"],[86,31,84,2],[87,0,86,2],[87,8,86,8,"gradient"],[87,16,86,16],[87,19,86,19],[87,21,86,2],[88,0,87,2],[88,8,87,8,"k"],[88,9,87,9],[88,12,87,12,"stops"],[88,17,87,17],[88,18,87,18,"length"],[88,24,87,2],[90,0,88,2],[90,9,88,7],[90,13,88,11,"j"],[90,14,88,12],[90,17,88,15],[90,18,88,2],[90,20,88,18,"j"],[90,21,88,19],[90,24,88,22,"k"],[90,25,88,2],[90,27,88,25,"j"],[90,28,88,26],[90,30,88,2],[90,32,88,30],[91,0,89,4],[91,10,89,10,"s"],[91,11,89,11],[91,14,89,14,"stops"],[91,19,89,19],[91,20,89,20,"j"],[91,21,89,19],[91,22,89,4],[92,0,90,4,"gradient"],[92,6,90,4,"gradient"],[92,14,90,12],[92,15,90,13,"push"],[92,19,90,4],[92,20,90,18,"s"],[92,21,90,19],[92,22,90,20],[92,23,90,19],[92,24,90,4],[92,26,90,24,"s"],[92,27,90,25],[92,28,90,26],[92,29,90,25],[92,30,90,4],[93,0,91,3],[95,0,93,2],[95,11,93,9],[96,0,94,4,"name"],[96,6,94,4,"name"],[96,10,94,8],[96,12,94,10,"id"],[96,14,93,9],[97,0,95,4,"gradient"],[97,6,95,4,"gradient"],[97,14,95,12],[97,16,95,4,"gradient"],[97,24,93,9],[98,0,96,4,"children"],[98,6,96,4,"children"],[98,14,96,12],[98,16,96,14,"childArray"],[98,26,93,9],[99,0,97,4,"gradientUnits"],[99,6,97,4,"gradientUnits"],[99,19,97,17],[99,21,97,20,"gradientUnits"],[99,34,97,33],[99,38,97,37,"units"],[99,53,97,43,"gradientUnits"],[99,66,97,37],[99,67,97,19],[99,71,97,62],[99,72,93,9],[100,0,98,4,"gradientTransform"],[100,6,98,4,"gradientTransform"],[100,23,98,21],[100,25,98,23],[100,56,99,6,"gradientTransform"],[100,73,99,23],[100,77,99,27,"transform"],[100,86,99,6],[100,90,99,40,"props"],[100,95,98,23],[101,0,93,9],[101,5,93,2],[102,0,102,1]]},"type":"js/module"}]}