{"dependencies":[{"name":"../../tokenizer","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var isHexDigit = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").isHexDigit;\n\n  var cmpChar = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").cmpChar;\n\n  var TYPE = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE;\n\n  var NAME = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").NAME;\n\n  var IDENT = TYPE.Ident;\n  var NUMBER = TYPE.Number;\n  var DIMENSION = TYPE.Dimension;\n  var PLUSSIGN = 0x002B;\n  var HYPHENMINUS = 0x002D;\n  var QUESTIONMARK = 0x003F;\n  var U = 0x0075;\n\n  function eatHexSequence(offset, allowDash) {\n    for (var pos = this.scanner.tokenStart + offset, len = 0; pos < this.scanner.tokenEnd; pos++) {\n      var code = this.scanner.source.charCodeAt(pos);\n\n      if (code === HYPHENMINUS && allowDash && len !== 0) {\n        if (eatHexSequence.call(this, offset + len + 1, false) === 0) {\n          this.error();\n        }\n\n        return -1;\n      }\n\n      if (!isHexDigit(code)) {\n        this.error(allowDash && len !== 0 ? 'HyphenMinus' + (len < 6 ? ' or hex digit' : '') + ' is expected' : len < 6 ? 'Hex digit is expected' : 'Unexpected input', pos);\n      }\n\n      if (++len > 6) {\n        this.error('Too many hex digits', pos);\n      }\n\n      ;\n    }\n\n    this.scanner.next();\n    return len;\n  }\n\n  function eatQuestionMarkSequence(max) {\n    var count = 0;\n\n    while (this.scanner.isDelim(QUESTIONMARK)) {\n      if (++count > max) {\n        this.error('Too many question marks');\n      }\n\n      this.scanner.next();\n    }\n  }\n\n  function startsWith(code) {\n    if (this.scanner.source.charCodeAt(this.scanner.tokenStart) !== code) {\n      this.error(NAME[code] + ' is expected');\n    }\n  }\n\n  function scanUnicodeRange() {\n    var hexLength = 0;\n\n    if (this.scanner.isDelim(PLUSSIGN)) {\n      this.scanner.next();\n\n      if (this.scanner.tokenType === IDENT) {\n        hexLength = eatHexSequence.call(this, 0, true);\n\n        if (hexLength > 0) {\n          eatQuestionMarkSequence.call(this, 6 - hexLength);\n        }\n\n        return;\n      }\n\n      if (this.scanner.isDelim(QUESTIONMARK)) {\n        this.scanner.next();\n        eatQuestionMarkSequence.call(this, 5);\n        return;\n      }\n\n      this.error('Hex digit or question mark is expected');\n      return;\n    }\n\n    if (this.scanner.tokenType === NUMBER) {\n      startsWith.call(this, PLUSSIGN);\n      hexLength = eatHexSequence.call(this, 1, true);\n\n      if (this.scanner.isDelim(QUESTIONMARK)) {\n        eatQuestionMarkSequence.call(this, 6 - hexLength);\n        return;\n      }\n\n      if (this.scanner.tokenType === DIMENSION || this.scanner.tokenType === NUMBER) {\n        startsWith.call(this, HYPHENMINUS);\n        eatHexSequence.call(this, 1, false);\n        return;\n      }\n\n      return;\n    }\n\n    if (this.scanner.tokenType === DIMENSION) {\n      startsWith.call(this, PLUSSIGN);\n      hexLength = eatHexSequence.call(this, 1, true);\n\n      if (hexLength > 0) {\n        eatQuestionMarkSequence.call(this, 6 - hexLength);\n      }\n\n      return;\n    }\n\n    this.error();\n  }\n\n  module.exports = {\n    name: 'UnicodeRange',\n    structure: {\n      value: String\n    },\n    parse: function parse() {\n      var start = this.scanner.tokenStart;\n\n      if (!cmpChar(this.scanner.source, start, U)) {\n        this.error('U is expected');\n      }\n\n      if (!cmpChar(this.scanner.source, start + 1, PLUSSIGN)) {\n        this.error('Plus sign is expected');\n      }\n\n      this.scanner.next();\n      scanUnicodeRange.call(this);\n      return {\n        type: 'UnicodeRange',\n        loc: this.getLocation(start, this.scanner.tokenStart),\n        value: this.scanner.substrToCursor(start)\n      };\n    },\n    generate: function generate(node) {\n      this.chunk(node.value);\n    }\n  };\n});","map":[[2,0,1,0],[2,6,1,4,"isHexDigit"],[2,16,1,14],[2,19,1,17,"require"],[2,30,1,24],[2,68,1,17],[2,69,1,44,"isHexDigit"],[2,79,1,0],[4,0,2,0],[4,6,2,4,"cmpChar"],[4,13,2,11],[4,16,2,14,"require"],[4,27,2,21],[4,65,2,14],[4,66,2,41,"cmpChar"],[4,73,2,0],[6,0,3,0],[6,6,3,4,"TYPE"],[6,10,3,8],[6,13,3,11,"require"],[6,24,3,18],[6,62,3,11],[6,63,3,38,"TYPE"],[6,67,3,0],[8,0,4,0],[8,6,4,4,"NAME"],[8,10,4,8],[8,13,4,11,"require"],[8,24,4,18],[8,62,4,11],[8,63,4,38,"NAME"],[8,67,4,0],[10,0,6,0],[10,6,6,4,"IDENT"],[10,11,6,9],[10,14,6,12,"TYPE"],[10,18,6,16],[10,19,6,17,"Ident"],[10,24,6,0],[11,0,7,0],[11,6,7,4,"NUMBER"],[11,12,7,10],[11,15,7,13,"TYPE"],[11,19,7,17],[11,20,7,18,"Number"],[11,26,7,0],[12,0,8,0],[12,6,8,4,"DIMENSION"],[12,15,8,13],[12,18,8,16,"TYPE"],[12,22,8,20],[12,23,8,21,"Dimension"],[12,32,8,0],[13,0,9,0],[13,6,9,4,"PLUSSIGN"],[13,14,9,12],[13,17,9,15],[13,23,9,0],[14,0,10,0],[14,6,10,4,"HYPHENMINUS"],[14,17,10,15],[14,20,10,18],[14,26,10,0],[15,0,11,0],[15,6,11,4,"QUESTIONMARK"],[15,18,11,16],[15,21,11,19],[15,27,11,0],[16,0,12,0],[16,6,12,4,"U"],[16,7,12,5],[16,10,12,8],[16,16,12,0],[18,0,14,0],[18,11,14,9,"eatHexSequence"],[18,25,14,0],[18,26,14,24,"offset"],[18,32,14,0],[18,34,14,32,"allowDash"],[18,43,14,0],[18,45,14,43],[19,0,15,4],[19,9,15,9],[19,13,15,13,"pos"],[19,16,15,16],[19,19,15,19],[19,24,15,24,"scanner"],[19,31,15,19],[19,32,15,32,"tokenStart"],[19,42,15,19],[19,45,15,45,"offset"],[19,51,15,9],[19,53,15,53,"len"],[19,56,15,56],[19,59,15,59],[19,60,15,4],[19,62,15,62,"pos"],[19,65,15,65],[19,68,15,68],[19,73,15,73,"scanner"],[19,80,15,68],[19,81,15,81,"tokenEnd"],[19,89,15,4],[19,91,15,91,"pos"],[19,94,15,94],[19,96,15,4],[19,98,15,98],[20,0,16,8],[20,10,16,12,"code"],[20,14,16,16],[20,17,16,19],[20,22,16,24,"scanner"],[20,29,16,19],[20,30,16,32,"source"],[20,36,16,19],[20,37,16,39,"charCodeAt"],[20,47,16,19],[20,48,16,50,"pos"],[20,51,16,19],[20,52,16,8],[22,0,18,8],[22,10,18,12,"code"],[22,14,18,16],[22,19,18,21,"HYPHENMINUS"],[22,30,18,12],[22,34,18,36,"allowDash"],[22,43,18,12],[22,47,18,49,"len"],[22,50,18,52],[22,55,18,57],[22,56,18,8],[22,58,18,60],[23,0,19,12],[23,12,19,16,"eatHexSequence"],[23,26,19,30],[23,27,19,31,"call"],[23,31,19,16],[23,32,19,36],[23,36,19,16],[23,38,19,42,"offset"],[23,44,19,48],[23,47,19,51,"len"],[23,50,19,42],[23,53,19,57],[23,54,19,16],[23,56,19,60],[23,61,19,16],[23,67,19,71],[23,68,19,12],[23,70,19,74],[24,0,20,16],[24,15,20,21,"error"],[24,20,20,16],[25,0,21,13],[27,0,23,12],[27,15,23,19],[27,16,23,20],[27,17,23,12],[28,0,24,9],[30,0,26,8],[30,10,26,12],[30,11,26,13,"isHexDigit"],[30,21,26,23],[30,22,26,24,"code"],[30,26,26,23],[30,27,26,8],[30,29,26,31],[31,0,27,12],[31,13,27,17,"error"],[31,18,27,12],[31,19,28,16,"allowDash"],[31,28,28,25],[31,32,28,29,"len"],[31,35,28,32],[31,40,28,37],[31,41,28,16],[31,44,29,22],[31,61,29,39,"len"],[31,64,29,42],[31,67,29,45],[31,68,29,39],[31,71,29,49],[31,86,29,39],[31,89,29,67],[31,91,29,22],[31,95,29,73],[31,109,28,16],[31,112,30,23,"len"],[31,115,30,26],[31,118,30,29],[31,119,30,23],[31,122,30,33],[31,145,30,23],[31,148,30,59],[31,166,27,12],[31,168,31,16,"pos"],[31,171,27,12],[32,0,33,9],[34,0,35,8],[34,10,35,12],[34,12,35,14,"len"],[34,15,35,12],[34,18,35,20],[34,19,35,8],[34,21,35,23],[35,0,36,12],[35,13,36,17,"error"],[35,18,36,12],[35,19,36,23],[35,40,36,12],[35,42,36,46,"pos"],[35,45,36,12],[36,0,37,9],[38,0,37,9],[39,0,38,5],[41,0,40,4],[41,9,40,9,"scanner"],[41,16,40,4],[41,17,40,17,"next"],[41,21,40,4],[42,0,41,4],[42,11,41,11,"len"],[42,14,41,4],[43,0,42,1],[45,0,44,0],[45,11,44,9,"eatQuestionMarkSequence"],[45,34,44,0],[45,35,44,33,"max"],[45,38,44,0],[45,40,44,38],[46,0,45,4],[46,8,45,8,"count"],[46,13,45,13],[46,16,45,16],[46,17,45,4],[48,0,47,4],[48,11,47,11],[48,16,47,16,"scanner"],[48,23,47,11],[48,24,47,24,"isDelim"],[48,31,47,11],[48,32,47,32,"QUESTIONMARK"],[48,44,47,11],[48,45,47,4],[48,47,47,47],[49,0,48,8],[49,10,48,12],[49,12,48,14,"count"],[49,17,48,12],[49,20,48,22,"max"],[49,23,48,8],[49,25,48,27],[50,0,49,12],[50,13,49,17,"error"],[50,18,49,12],[50,19,49,23],[50,44,49,12],[51,0,50,9],[53,0,52,8],[53,11,52,13,"scanner"],[53,18,52,8],[53,19,52,21,"next"],[53,23,52,8],[54,0,53,5],[55,0,54,1],[57,0,56,0],[57,11,56,9,"startsWith"],[57,21,56,0],[57,22,56,20,"code"],[57,26,56,0],[57,28,56,26],[58,0,57,4],[58,8,57,8],[58,13,57,13,"scanner"],[58,20,57,8],[58,21,57,21,"source"],[58,27,57,8],[58,28,57,28,"charCodeAt"],[58,38,57,8],[58,39,57,39],[58,44,57,44,"scanner"],[58,51,57,39],[58,52,57,52,"tokenStart"],[58,62,57,8],[58,68,57,68,"code"],[58,72,57,4],[58,74,57,74],[59,0,58,8],[59,11,58,13,"error"],[59,16,58,8],[59,17,58,19,"NAME"],[59,21,58,23],[59,22,58,24,"code"],[59,26,58,23],[59,27,58,19],[59,30,58,32],[59,44,58,8],[60,0,59,5],[61,0,60,1],[63,0,81,0],[63,11,81,9,"scanUnicodeRange"],[63,27,81,0],[63,30,81,28],[64,0,82,4],[64,8,82,8,"hexLength"],[64,17,82,17],[64,20,82,20],[64,21,82,4],[66,0,86,4],[66,8,86,8],[66,13,86,13,"scanner"],[66,20,86,8],[66,21,86,21,"isDelim"],[66,28,86,8],[66,29,86,29,"PLUSSIGN"],[66,37,86,8],[66,38,86,4],[66,40,86,40],[67,0,87,8],[67,11,87,13,"scanner"],[67,18,87,8],[67,19,87,21,"next"],[67,23,87,8],[69,0,89,8],[69,10,89,12],[69,15,89,17,"scanner"],[69,22,89,12],[69,23,89,25,"tokenType"],[69,32,89,12],[69,37,89,39,"IDENT"],[69,42,89,8],[69,44,89,46],[70,0,90,12,"hexLength"],[70,8,90,12,"hexLength"],[70,17,90,21],[70,20,90,24,"eatHexSequence"],[70,34,90,38],[70,35,90,39,"call"],[70,39,90,24],[70,40,90,44],[70,44,90,24],[70,46,90,50],[70,47,90,24],[70,49,90,53],[70,53,90,24],[70,54,90,12],[72,0,91,12],[72,12,91,16,"hexLength"],[72,21,91,25],[72,24,91,28],[72,25,91,12],[72,27,91,31],[73,0,92,16,"eatQuestionMarkSequence"],[73,10,92,16,"eatQuestionMarkSequence"],[73,33,92,39],[73,34,92,40,"call"],[73,38,92,16],[73,39,92,45],[73,43,92,16],[73,45,92,51],[73,49,92,55,"hexLength"],[73,58,92,16],[74,0,93,13],[76,0,94,12],[77,0,95,9],[79,0,97,8],[79,10,97,12],[79,15,97,17,"scanner"],[79,22,97,12],[79,23,97,25,"isDelim"],[79,30,97,12],[79,31,97,33,"QUESTIONMARK"],[79,43,97,12],[79,44,97,8],[79,46,97,48],[80,0,98,12],[80,13,98,17,"scanner"],[80,20,98,12],[80,21,98,25,"next"],[80,25,98,12],[81,0,99,12,"eatQuestionMarkSequence"],[81,8,99,12,"eatQuestionMarkSequence"],[81,31,99,35],[81,32,99,36,"call"],[81,36,99,12],[81,37,99,41],[81,41,99,12],[81,43,99,47],[81,44,99,12],[82,0,100,12],[83,0,101,9],[85,0,103,8],[85,11,103,13,"error"],[85,16,103,8],[85,17,103,19],[85,57,103,8],[86,0,104,8],[87,0,105,5],[89,0,110,4],[89,8,110,8],[89,13,110,13,"scanner"],[89,20,110,8],[89,21,110,21,"tokenType"],[89,30,110,8],[89,35,110,35,"NUMBER"],[89,41,110,4],[89,43,110,43],[90,0,111,8,"startsWith"],[90,6,111,8,"startsWith"],[90,16,111,18],[90,17,111,19,"call"],[90,21,111,8],[90,22,111,24],[90,26,111,8],[90,28,111,30,"PLUSSIGN"],[90,36,111,8],[91,0,112,8,"hexLength"],[91,6,112,8,"hexLength"],[91,15,112,17],[91,18,112,20,"eatHexSequence"],[91,32,112,34],[91,33,112,35,"call"],[91,37,112,20],[91,38,112,40],[91,42,112,20],[91,44,112,46],[91,45,112,20],[91,47,112,49],[91,51,112,20],[91,52,112,8],[93,0,114,8],[93,10,114,12],[93,15,114,17,"scanner"],[93,22,114,12],[93,23,114,25,"isDelim"],[93,30,114,12],[93,31,114,33,"QUESTIONMARK"],[93,43,114,12],[93,44,114,8],[93,46,114,48],[94,0,115,12,"eatQuestionMarkSequence"],[94,8,115,12,"eatQuestionMarkSequence"],[94,31,115,35],[94,32,115,36,"call"],[94,36,115,12],[94,37,115,41],[94,41,115,12],[94,43,115,47],[94,47,115,51,"hexLength"],[94,56,115,12],[95,0,116,12],[96,0,117,9],[98,0,119,8],[98,10,119,12],[98,15,119,17,"scanner"],[98,22,119,12],[98,23,119,25,"tokenType"],[98,32,119,12],[98,37,119,39,"DIMENSION"],[98,46,119,12],[98,50,120,12],[98,55,120,17,"scanner"],[98,62,120,12],[98,63,120,25,"tokenType"],[98,72,120,12],[98,77,120,39,"NUMBER"],[98,83,119,8],[98,85,120,47],[99,0,121,12,"startsWith"],[99,8,121,12,"startsWith"],[99,18,121,22],[99,19,121,23,"call"],[99,23,121,12],[99,24,121,28],[99,28,121,12],[99,30,121,34,"HYPHENMINUS"],[99,41,121,12],[100,0,122,12,"eatHexSequence"],[100,8,122,12,"eatHexSequence"],[100,22,122,26],[100,23,122,27,"call"],[100,27,122,12],[100,28,122,32],[100,32,122,12],[100,34,122,38],[100,35,122,12],[100,37,122,41],[100,42,122,12],[101,0,123,12],[102,0,124,9],[104,0,126,8],[105,0,127,5],[107,0,130,4],[107,8,130,8],[107,13,130,13,"scanner"],[107,20,130,8],[107,21,130,21,"tokenType"],[107,30,130,8],[107,35,130,35,"DIMENSION"],[107,44,130,4],[107,46,130,46],[108,0,131,8,"startsWith"],[108,6,131,8,"startsWith"],[108,16,131,18],[108,17,131,19,"call"],[108,21,131,8],[108,22,131,24],[108,26,131,8],[108,28,131,30,"PLUSSIGN"],[108,36,131,8],[109,0,132,8,"hexLength"],[109,6,132,8,"hexLength"],[109,15,132,17],[109,18,132,20,"eatHexSequence"],[109,32,132,34],[109,33,132,35,"call"],[109,37,132,20],[109,38,132,40],[109,42,132,20],[109,44,132,46],[109,45,132,20],[109,47,132,49],[109,51,132,20],[109,52,132,8],[111,0,134,8],[111,10,134,12,"hexLength"],[111,19,134,21],[111,22,134,24],[111,23,134,8],[111,25,134,27],[112,0,135,12,"eatQuestionMarkSequence"],[112,8,135,12,"eatQuestionMarkSequence"],[112,31,135,35],[112,32,135,36,"call"],[112,36,135,12],[112,37,135,41],[112,41,135,12],[112,43,135,47],[112,47,135,51,"hexLength"],[112,56,135,12],[113,0,136,9],[115,0,138,8],[116,0,139,5],[118,0,141,4],[118,9,141,9,"error"],[118,14,141,4],[119,0,142,1],[121,0,144,0,"module"],[121,2,144,0,"module"],[121,8,144,6],[121,9,144,7,"exports"],[121,16,144,0],[121,19,144,17],[122,0,145,4,"name"],[122,4,145,4,"name"],[122,8,145,8],[122,10,145,10],[122,24,144,17],[123,0,146,4,"structure"],[123,4,146,4,"structure"],[123,13,146,13],[123,15,146,15],[124,0,147,8,"value"],[124,6,147,8,"value"],[124,11,147,13],[124,13,147,15,"String"],[125,0,146,15],[125,5,144,17],[126,0,149,4,"parse"],[126,4,149,4,"parse"],[126,9,149,9],[126,11,149,11],[126,28,149,22],[127,0,150,8],[127,10,150,12,"start"],[127,15,150,17],[127,18,150,20],[127,23,150,25,"scanner"],[127,30,150,20],[127,31,150,33,"tokenStart"],[127,41,150,8],[129,0,153,8],[129,10,153,12],[129,11,153,13,"cmpChar"],[129,18,153,20],[129,19,153,21],[129,24,153,26,"scanner"],[129,31,153,21],[129,32,153,34,"source"],[129,38,153,20],[129,40,153,42,"start"],[129,45,153,20],[129,47,153,49,"U"],[129,48,153,20],[129,49,153,8],[129,51,153,53],[130,0,154,12],[130,13,154,17,"error"],[130,18,154,12],[130,19,154,23],[130,34,154,12],[131,0,155,9],[133,0,157,8],[133,10,157,12],[133,11,157,13,"cmpChar"],[133,18,157,20],[133,19,157,21],[133,24,157,26,"scanner"],[133,31,157,21],[133,32,157,34,"source"],[133,38,157,20],[133,40,157,42,"start"],[133,45,157,47],[133,48,157,50],[133,49,157,20],[133,51,157,53,"PLUSSIGN"],[133,59,157,20],[133,60,157,8],[133,62,157,64],[134,0,158,12],[134,13,158,17,"error"],[134,18,158,12],[134,19,158,23],[134,42,158,12],[135,0,159,9],[137,0,161,8],[137,11,161,13,"scanner"],[137,18,161,8],[137,19,161,21,"next"],[137,23,161,8],[138,0,162,8,"scanUnicodeRange"],[138,6,162,8,"scanUnicodeRange"],[138,22,162,24],[138,23,162,25,"call"],[138,27,162,8],[138,28,162,30],[138,32,162,8],[139,0,164,8],[139,13,164,15],[140,0,165,12,"type"],[140,8,165,12,"type"],[140,12,165,16],[140,14,165,18],[140,28,164,15],[141,0,166,12,"loc"],[141,8,166,12,"loc"],[141,11,166,15],[141,13,166,17],[141,18,166,22,"getLocation"],[141,29,166,17],[141,30,166,34,"start"],[141,35,166,17],[141,37,166,41],[141,42,166,46,"scanner"],[141,49,166,41],[141,50,166,54,"tokenStart"],[141,60,166,17],[141,61,164,15],[142,0,167,12,"value"],[142,8,167,12,"value"],[142,13,167,17],[142,15,167,19],[142,20,167,24,"scanner"],[142,27,167,19],[142,28,167,32,"substrToCursor"],[142,42,167,19],[142,43,167,47,"start"],[142,48,167,19],[143,0,164,15],[143,7,164,8],[144,0,169,5],[144,5,144,17],[145,0,170,4,"generate"],[145,4,170,4,"generate"],[145,12,170,12],[145,14,170,14],[145,32,170,23,"node"],[145,36,170,14],[145,38,170,29],[146,0,171,8],[146,11,171,13,"chunk"],[146,16,171,8],[146,17,171,19,"node"],[146,21,171,23],[146,22,171,24,"value"],[146,27,171,8],[147,0,172,5],[148,0,144,17],[148,3,144,0]]},"type":"js/module"}]}