{"dependencies":[{"name":"../../tokenizer","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var TYPE = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE;\n\n  var SEMICOLON = TYPE.Semicolon;\n  var LEFTCURLYBRACKET = TYPE.LeftCurlyBracket;\n  module.exports = {\n    name: 'AtrulePrelude',\n    structure: {\n      children: [[]]\n    },\n    parse: function parse(name) {\n      var children = null;\n\n      if (name !== null) {\n        name = name.toLowerCase();\n      }\n\n      this.scanner.skipSC();\n\n      if (this.atrule.hasOwnProperty(name) && typeof this.atrule[name].prelude === 'function') {\n        children = this.atrule[name].prelude.call(this);\n      } else {\n        children = this.readSequence(this.scope.AtrulePrelude);\n      }\n\n      this.scanner.skipSC();\n\n      if (this.scanner.eof !== true && this.scanner.tokenType !== LEFTCURLYBRACKET && this.scanner.tokenType !== SEMICOLON) {\n        this.error('Semicolon or block is expected');\n      }\n\n      if (children === null) {\n        children = this.createList();\n      }\n\n      return {\n        type: 'AtrulePrelude',\n        loc: this.getLocationFromList(children),\n        children: children\n      };\n    },\n    generate: function generate(node) {\n      this.children(node);\n    },\n    walkContext: 'atrulePrelude'\n  };\n});","map":[[2,0,1,0],[2,6,1,4,"TYPE"],[2,10,1,8],[2,13,1,11,"require"],[2,24,1,18],[2,62,1,11],[2,63,1,38,"TYPE"],[2,67,1,0],[4,0,3,0],[4,6,3,4,"SEMICOLON"],[4,15,3,13],[4,18,3,16,"TYPE"],[4,22,3,20],[4,23,3,21,"Semicolon"],[4,32,3,0],[5,0,4,0],[5,6,4,4,"LEFTCURLYBRACKET"],[5,22,4,20],[5,25,4,23,"TYPE"],[5,29,4,27],[5,30,4,28,"LeftCurlyBracket"],[5,46,4,0],[6,0,6,0,"module"],[6,2,6,0,"module"],[6,8,6,6],[6,9,6,7,"exports"],[6,16,6,0],[6,19,6,17],[7,0,7,4,"name"],[7,4,7,4,"name"],[7,8,7,8],[7,10,7,10],[7,25,6,17],[8,0,8,4,"structure"],[8,4,8,4,"structure"],[8,13,8,13],[8,15,8,15],[9,0,9,8,"children"],[9,6,9,8,"children"],[9,14,9,16],[9,16,9,18],[9,17,9,19],[9,19,9,18],[10,0,8,15],[10,5,6,17],[11,0,11,4,"parse"],[11,4,11,4,"parse"],[11,9,11,9],[11,11,11,11],[11,26,11,20,"name"],[11,30,11,11],[11,32,11,26],[12,0,12,8],[12,10,12,12,"children"],[12,18,12,20],[12,21,12,23],[12,25,12,8],[14,0,14,8],[14,10,14,12,"name"],[14,14,14,16],[14,19,14,21],[14,23,14,8],[14,25,14,27],[15,0,15,12,"name"],[15,8,15,12,"name"],[15,12,15,16],[15,15,15,19,"name"],[15,19,15,23],[15,20,15,24,"toLowerCase"],[15,31,15,19],[15,33,15,12],[16,0,16,9],[18,0,18,8],[18,11,18,13,"scanner"],[18,18,18,8],[18,19,18,21,"skipSC"],[18,25,18,8],[20,0,20,8],[20,10,20,12],[20,15,20,17,"atrule"],[20,21,20,12],[20,22,20,24,"hasOwnProperty"],[20,36,20,12],[20,37,20,39,"name"],[20,41,20,12],[20,46,21,12],[20,53,21,19],[20,58,21,24,"atrule"],[20,64,21,19],[20,65,21,31,"name"],[20,69,21,19],[20,71,21,37,"prelude"],[20,78,21,12],[20,83,21,49],[20,93,20,8],[20,95,21,61],[21,0,23,12,"children"],[21,8,23,12,"children"],[21,16,23,20],[21,19,23,23],[21,24,23,28,"atrule"],[21,30,23,23],[21,31,23,35,"name"],[21,35,23,23],[21,37,23,41,"prelude"],[21,44,23,23],[21,45,23,49,"call"],[21,49,23,23],[21,50,23,54],[21,54,23,23],[21,55,23,12],[22,0,24,9],[22,7,20,8],[22,13,24,15],[23,0,26,12,"children"],[23,8,26,12,"children"],[23,16,26,20],[23,19,26,23],[23,24,26,28,"readSequence"],[23,36,26,23],[23,37,26,41],[23,42,26,46,"scope"],[23,47,26,41],[23,48,26,52,"AtrulePrelude"],[23,61,26,23],[23,62,26,12],[24,0,27,9],[26,0,29,8],[26,11,29,13,"scanner"],[26,18,29,8],[26,19,29,21,"skipSC"],[26,25,29,8],[28,0,31,8],[28,10,31,12],[28,15,31,17,"scanner"],[28,22,31,12],[28,23,31,25,"eof"],[28,26,31,12],[28,31,31,33],[28,35,31,12],[28,39,32,12],[28,44,32,17,"scanner"],[28,51,32,12],[28,52,32,25,"tokenType"],[28,61,32,12],[28,66,32,39,"LEFTCURLYBRACKET"],[28,82,31,12],[28,86,33,12],[28,91,33,17,"scanner"],[28,98,33,12],[28,99,33,25,"tokenType"],[28,108,33,12],[28,113,33,39,"SEMICOLON"],[28,122,31,8],[28,124,33,50],[29,0,34,12],[29,13,34,17,"error"],[29,18,34,12],[29,19,34,23],[29,51,34,12],[30,0,35,9],[32,0,37,8],[32,10,37,12,"children"],[32,18,37,20],[32,23,37,25],[32,27,37,8],[32,29,37,31],[33,0,38,12,"children"],[33,8,38,12,"children"],[33,16,38,20],[33,19,38,23],[33,24,38,28,"createList"],[33,34,38,23],[33,36,38,12],[34,0,39,9],[36,0,41,8],[36,13,41,15],[37,0,42,12,"type"],[37,8,42,12,"type"],[37,12,42,16],[37,14,42,18],[37,29,41,15],[38,0,43,12,"loc"],[38,8,43,12,"loc"],[38,11,43,15],[38,13,43,17],[38,18,43,22,"getLocationFromList"],[38,37,43,17],[38,38,43,42,"children"],[38,46,43,17],[38,47,41,15],[39,0,44,12,"children"],[39,8,44,12,"children"],[39,16,44,20],[39,18,44,22,"children"],[40,0,41,15],[40,7,41,8],[41,0,46,5],[41,5,6,17],[42,0,47,4,"generate"],[42,4,47,4,"generate"],[42,12,47,12],[42,14,47,14],[42,32,47,23,"node"],[42,36,47,14],[42,38,47,29],[43,0,48,8],[43,11,48,13,"children"],[43,19,48,8],[43,20,48,22,"node"],[43,24,48,8],[44,0,49,5],[44,5,6,17],[45,0,50,4,"walkContext"],[45,4,50,4,"walkContext"],[45,15,50,15],[45,17,50,17],[46,0,6,17],[46,3,6,0]]},"type":"js/module"}]}