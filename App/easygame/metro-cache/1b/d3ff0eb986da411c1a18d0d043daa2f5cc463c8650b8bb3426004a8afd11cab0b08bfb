{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  function noop(value) {\n    return value;\n  }\n\n  function generateMultiplier(multiplier) {\n    if (multiplier.min === 0 && multiplier.max === 0) {\n      return '*';\n    }\n\n    if (multiplier.min === 0 && multiplier.max === 1) {\n      return '?';\n    }\n\n    if (multiplier.min === 1 && multiplier.max === 0) {\n      return multiplier.comma ? '#' : '+';\n    }\n\n    if (multiplier.min === 1 && multiplier.max === 1) {\n      return '';\n    }\n\n    return (multiplier.comma ? '#' : '') + (multiplier.min === multiplier.max ? '{' + multiplier.min + '}' : '{' + multiplier.min + ',' + (multiplier.max !== 0 ? multiplier.max : '') + '}');\n  }\n\n  function generateTypeOpts(node) {\n    switch (node.type) {\n      case 'Range':\n        return ' [' + (node.min === null ? '-∞' : node.min) + ',' + (node.max === null ? '∞' : node.max) + ']';\n\n      default:\n        throw new Error('Unknown node type `' + node.type + '`');\n    }\n  }\n\n  function generateSequence(node, decorate, forceBraces, compact) {\n    var combinator = node.combinator === ' ' || compact ? node.combinator : ' ' + node.combinator + ' ';\n    var result = node.terms.map(function (term) {\n      return generate(term, decorate, forceBraces, compact);\n    }).join(combinator);\n\n    if (node.explicit || forceBraces) {\n      result = (compact || result[0] === ',' ? '[' : '[ ') + result + (compact ? ']' : ' ]');\n    }\n\n    return result;\n  }\n\n  function generate(node, decorate, forceBraces, compact) {\n    var result;\n\n    switch (node.type) {\n      case 'Group':\n        result = generateSequence(node, decorate, forceBraces, compact) + (node.disallowEmpty ? '!' : '');\n        break;\n\n      case 'Multiplier':\n        return generate(node.term, decorate, forceBraces, compact) + decorate(generateMultiplier(node), node);\n\n      case 'Type':\n        result = '<' + node.name + (node.opts ? decorate(generateTypeOpts(node.opts), node.opts) : '') + '>';\n        break;\n\n      case 'Property':\n        result = '<\\'' + node.name + '\\'>';\n        break;\n\n      case 'Keyword':\n        result = node.name;\n        break;\n\n      case 'AtKeyword':\n        result = '@' + node.name;\n        break;\n\n      case 'Function':\n        result = node.name + '(';\n        break;\n\n      case 'String':\n      case 'Token':\n        result = node.value;\n        break;\n\n      case 'Comma':\n        result = ',';\n        break;\n\n      default:\n        throw new Error('Unknown node type `' + node.type + '`');\n    }\n\n    return decorate(result, node);\n  }\n\n  module.exports = function (node, options) {\n    var decorate = noop;\n    var forceBraces = false;\n    var compact = false;\n\n    if (typeof options === 'function') {\n      decorate = options;\n    } else if (options) {\n      forceBraces = Boolean(options.forceBraces);\n      compact = Boolean(options.compact);\n\n      if (typeof options.decorate === 'function') {\n        decorate = options.decorate;\n      }\n    }\n\n    return generate(node, decorate, forceBraces, compact);\n  };\n});","map":[[2,0,1,0],[2,11,1,9,"noop"],[2,15,1,0],[2,16,1,14,"value"],[2,21,1,0],[2,23,1,21],[3,0,2,4],[3,11,2,11,"value"],[3,16,2,4],[4,0,3,1],[6,0,5,0],[6,11,5,9,"generateMultiplier"],[6,29,5,0],[6,30,5,28,"multiplier"],[6,40,5,0],[6,42,5,40],[7,0,6,4],[7,8,6,8,"multiplier"],[7,18,6,18],[7,19,6,19,"min"],[7,22,6,8],[7,27,6,27],[7,28,6,8],[7,32,6,32,"multiplier"],[7,42,6,42],[7,43,6,43,"max"],[7,46,6,32],[7,51,6,51],[7,52,6,4],[7,54,6,54],[8,0,7,8],[8,13,7,15],[8,16,7,8],[9,0,8,5],[11,0,10,4],[11,8,10,8,"multiplier"],[11,18,10,18],[11,19,10,19,"min"],[11,22,10,8],[11,27,10,27],[11,28,10,8],[11,32,10,32,"multiplier"],[11,42,10,42],[11,43,10,43,"max"],[11,46,10,32],[11,51,10,51],[11,52,10,4],[11,54,10,54],[12,0,11,8],[12,13,11,15],[12,16,11,8],[13,0,12,5],[15,0,14,4],[15,8,14,8,"multiplier"],[15,18,14,18],[15,19,14,19,"min"],[15,22,14,8],[15,27,14,27],[15,28,14,8],[15,32,14,32,"multiplier"],[15,42,14,42],[15,43,14,43,"max"],[15,46,14,32],[15,51,14,51],[15,52,14,4],[15,54,14,54],[16,0,15,8],[16,13,15,15,"multiplier"],[16,23,15,25],[16,24,15,26,"comma"],[16,29,15,15],[16,32,15,34],[16,35,15,15],[16,38,15,40],[16,41,15,8],[17,0,16,5],[19,0,18,4],[19,8,18,8,"multiplier"],[19,18,18,18],[19,19,18,19,"min"],[19,22,18,8],[19,27,18,27],[19,28,18,8],[19,32,18,32,"multiplier"],[19,42,18,42],[19,43,18,43,"max"],[19,46,18,32],[19,51,18,51],[19,52,18,4],[19,54,18,54],[20,0,19,8],[20,13,19,15],[20,15,19,8],[21,0,20,5],[23,0,22,4],[23,11,23,8],[23,12,23,9,"multiplier"],[23,22,23,19],[23,23,23,20,"comma"],[23,28,23,9],[23,31,23,28],[23,34,23,9],[23,37,23,34],[23,39,23,8],[23,44,24,9,"multiplier"],[23,54,24,19],[23,55,24,20,"min"],[23,58,24,9],[23,63,24,28,"multiplier"],[23,73,24,38],[23,74,24,39,"max"],[23,77,24,9],[23,80,25,14],[23,86,25,20,"multiplier"],[23,96,25,30],[23,97,25,31,"min"],[23,100,25,14],[23,103,25,37],[23,106,24,9],[23,109,26,14],[23,115,26,20,"multiplier"],[23,125,26,30],[23,126,26,31,"min"],[23,129,26,14],[23,132,26,37],[23,135,26,14],[23,139,26,44,"multiplier"],[23,149,26,54],[23,150,26,55,"max"],[23,153,26,44],[23,158,26,63],[23,159,26,44],[23,162,26,67,"multiplier"],[23,172,26,77],[23,173,26,78,"max"],[23,176,26,44],[23,179,26,84],[23,181,26,14],[23,185,26,90],[23,188,23,8],[23,189,22,4],[24,0,29,1],[26,0,31,0],[26,11,31,9,"generateTypeOpts"],[26,27,31,0],[26,28,31,26,"node"],[26,32,31,0],[26,34,31,32],[27,0,32,4],[27,12,32,12,"node"],[27,16,32,16],[27,17,32,17,"type"],[27,21,32,4],[28,0,33,8],[28,11,33,13],[28,18,33,8],[29,0,34,12],[29,15,35,16],[29,23,36,17,"node"],[29,27,36,21],[29,28,36,22,"min"],[29,31,36,17],[29,36,36,30],[29,40,36,17],[29,43,36,37],[29,47,36,17],[29,50,36,44,"node"],[29,54,36,48],[29,55,36,49,"min"],[29,58,35,16],[29,62,37,16],[29,65,35,16],[29,69,38,17,"node"],[29,73,38,21],[29,74,38,22,"max"],[29,77,38,17],[29,82,38,30],[29,86,38,17],[29,89,38,37],[29,92,38,17],[29,95,38,43,"node"],[29,99,38,47],[29,100,38,48,"max"],[29,103,35,16],[29,107,39,16],[29,110,34,12],[31,0,42,8],[32,0,43,12],[32,14,43,18],[32,18,43,22,"Error"],[32,23,43,18],[32,24,43,28],[32,48,43,52,"node"],[32,52,43,56],[32,53,43,57,"type"],[32,57,43,28],[32,60,43,64],[32,63,43,18],[32,64,43,12],[33,0,32,4],[34,0,45,1],[36,0,47,0],[36,11,47,9,"generateSequence"],[36,27,47,0],[36,28,47,26,"node"],[36,32,47,0],[36,34,47,32,"decorate"],[36,42,47,0],[36,44,47,42,"forceBraces"],[36,55,47,0],[36,57,47,55,"compact"],[36,64,47,0],[36,66,47,64],[37,0,48,4],[37,8,48,8,"combinator"],[37,18,48,18],[37,21,48,21,"node"],[37,25,48,25],[37,26,48,26,"combinator"],[37,36,48,21],[37,41,48,41],[37,44,48,21],[37,48,48,48,"compact"],[37,55,48,21],[37,58,48,58,"node"],[37,62,48,62],[37,63,48,63,"combinator"],[37,73,48,21],[37,76,48,76],[37,82,48,82,"node"],[37,86,48,86],[37,87,48,87,"combinator"],[37,97,48,76],[37,100,48,100],[37,103,48,4],[38,0,49,4],[38,8,49,8,"result"],[38,14,49,14],[38,17,49,17,"node"],[38,21,49,21],[38,22,49,22,"terms"],[38,27,49,17],[38,28,49,28,"map"],[38,31,49,17],[38,32,49,32],[38,42,49,41,"term"],[38,46,49,32],[38,48,49,47],[39,0,50,8],[39,13,50,15,"generate"],[39,21,50,23],[39,22,50,24,"term"],[39,26,50,23],[39,28,50,30,"decorate"],[39,36,50,23],[39,38,50,40,"forceBraces"],[39,49,50,23],[39,51,50,53,"compact"],[39,58,50,23],[39,59,50,8],[40,0,51,5],[40,5,49,17],[40,7,51,7,"join"],[40,11,49,17],[40,12,51,12,"combinator"],[40,22,49,17],[40,23,49,4],[42,0,53,4],[42,8,53,8,"node"],[42,12,53,12],[42,13,53,13,"explicit"],[42,21,53,8],[42,25,53,25,"forceBraces"],[42,36,53,4],[42,38,53,38],[43,0,54,8,"result"],[43,6,54,8,"result"],[43,12,54,14],[43,15,54,17],[43,16,54,18,"compact"],[43,23,54,25],[43,27,54,29,"result"],[43,33,54,35],[43,34,54,36],[43,35,54,35],[43,36,54,29],[43,41,54,43],[43,44,54,18],[43,47,54,49],[43,50,54,18],[43,53,54,55],[43,57,54,17],[43,61,54,63,"result"],[43,67,54,17],[43,71,54,73,"compact"],[43,78,54,80],[43,81,54,83],[43,84,54,80],[43,87,54,89],[43,91,54,17],[43,92,54,8],[44,0,55,5],[46,0,57,4],[46,11,57,11,"result"],[46,17,57,4],[47,0,58,1],[49,0,60,0],[49,11,60,9,"generate"],[49,19,60,0],[49,20,60,18,"node"],[49,24,60,0],[49,26,60,24,"decorate"],[49,34,60,0],[49,36,60,34,"forceBraces"],[49,47,60,0],[49,49,60,47,"compact"],[49,56,60,0],[49,58,60,56],[50,0,61,4],[50,8,61,8,"result"],[50,14,61,4],[52,0,63,4],[52,12,63,12,"node"],[52,16,63,16],[52,17,63,17,"type"],[52,21,63,4],[53,0,64,8],[53,11,64,13],[53,18,64,8],[54,0,65,12,"result"],[54,8,65,12,"result"],[54,14,65,18],[54,17,66,16,"generateSequence"],[54,33,66,32],[54,34,66,33,"node"],[54,38,66,32],[54,40,66,39,"decorate"],[54,48,66,32],[54,50,66,49,"forceBraces"],[54,61,66,32],[54,63,66,62,"compact"],[54,70,66,32],[54,71,66,16],[54,75,67,17,"node"],[54,79,67,21],[54,80,67,22,"disallowEmpty"],[54,93,67,17],[54,96,67,38],[54,99,67,17],[54,102,67,44],[54,104,66,16],[54,105,65,12],[55,0,68,12],[57,0,70,8],[57,11,70,13],[57,23,70,8],[58,0,72,12],[58,15,73,16,"generate"],[58,23,73,24],[58,24,73,25,"node"],[58,28,73,29],[58,29,73,30,"term"],[58,33,73,24],[58,35,73,36,"decorate"],[58,43,73,24],[58,45,73,46,"forceBraces"],[58,56,73,24],[58,58,73,59,"compact"],[58,65,73,24],[58,66,73,16],[58,69,74,16,"decorate"],[58,77,74,24],[58,78,74,25,"generateMultiplier"],[58,96,74,43],[58,97,74,44,"node"],[58,101,74,43],[58,102,74,24],[58,104,74,51,"node"],[58,108,74,24],[58,109,72,12],[60,0,77,8],[60,11,77,13],[60,17,77,8],[61,0,78,12,"result"],[61,8,78,12,"result"],[61,14,78,18],[61,17,78,21],[61,23,78,27,"node"],[61,27,78,31],[61,28,78,32,"name"],[61,32,78,21],[61,36,78,40,"node"],[61,40,78,44],[61,41,78,45,"opts"],[61,45,78,40],[61,48,78,52,"decorate"],[61,56,78,60],[61,57,78,61,"generateTypeOpts"],[61,73,78,77],[61,74,78,78,"node"],[61,78,78,82],[61,79,78,83,"opts"],[61,83,78,77],[61,84,78,60],[61,86,78,90,"node"],[61,90,78,94],[61,91,78,95,"opts"],[61,95,78,60],[61,96,78,40],[61,99,78,103],[61,101,78,21],[61,105,78,109],[61,108,78,12],[62,0,79,12],[64,0,81,8],[64,11,81,13],[64,21,81,8],[65,0,82,12,"result"],[65,8,82,12,"result"],[65,14,82,18],[65,17,82,21],[65,25,82,29,"node"],[65,29,82,33],[65,30,82,34,"name"],[65,34,82,21],[65,37,82,41],[65,42,82,12],[66,0,83,12],[68,0,85,8],[68,11,85,13],[68,20,85,8],[69,0,86,12,"result"],[69,8,86,12,"result"],[69,14,86,18],[69,17,86,21,"node"],[69,21,86,25],[69,22,86,26,"name"],[69,26,86,12],[70,0,87,12],[72,0,89,8],[72,11,89,13],[72,22,89,8],[73,0,90,12,"result"],[73,8,90,12,"result"],[73,14,90,18],[73,17,90,21],[73,23,90,27,"node"],[73,27,90,31],[73,28,90,32,"name"],[73,32,90,12],[74,0,91,12],[76,0,93,8],[76,11,93,13],[76,21,93,8],[77,0,94,12,"result"],[77,8,94,12,"result"],[77,14,94,18],[77,17,94,21,"node"],[77,21,94,25],[77,22,94,26,"name"],[77,26,94,21],[77,29,94,33],[77,32,94,12],[78,0,95,12],[80,0,97,8],[80,11,97,13],[80,19,97,8],[81,0,98,8],[81,11,98,13],[81,18,98,8],[82,0,99,12,"result"],[82,8,99,12,"result"],[82,14,99,18],[82,17,99,21,"node"],[82,21,99,25],[82,22,99,26,"value"],[82,27,99,12],[83,0,100,12],[85,0,102,8],[85,11,102,13],[85,18,102,8],[86,0,103,12,"result"],[86,8,103,12,"result"],[86,14,103,18],[86,17,103,21],[86,20,103,12],[87,0,104,12],[89,0,106,8],[90,0,107,12],[90,14,107,18],[90,18,107,22,"Error"],[90,23,107,18],[90,24,107,28],[90,48,107,52,"node"],[90,52,107,56],[90,53,107,57,"type"],[90,57,107,28],[90,60,107,64],[90,63,107,18],[90,64,107,12],[91,0,63,4],[93,0,110,4],[93,11,110,11,"decorate"],[93,19,110,19],[93,20,110,20,"result"],[93,26,110,19],[93,28,110,28,"node"],[93,32,110,19],[93,33,110,4],[94,0,111,1],[96,0,113,0,"module"],[96,2,113,0,"module"],[96,8,113,6],[96,9,113,7,"exports"],[96,16,113,0],[96,19,113,17],[96,29,113,26,"node"],[96,33,113,17],[96,35,113,32,"options"],[96,42,113,17],[96,44,113,41],[97,0,114,4],[97,8,114,8,"decorate"],[97,16,114,16],[97,19,114,19,"noop"],[97,23,114,4],[98,0,115,4],[98,8,115,8,"forceBraces"],[98,19,115,19],[98,22,115,22],[98,27,115,4],[99,0,116,4],[99,8,116,8,"compact"],[99,15,116,15],[99,18,116,18],[99,23,116,4],[101,0,118,4],[101,8,118,8],[101,15,118,15,"options"],[101,22,118,8],[101,27,118,27],[101,37,118,4],[101,39,118,39],[102,0,119,8,"decorate"],[102,6,119,8,"decorate"],[102,14,119,16],[102,17,119,19,"options"],[102,24,119,8],[103,0,120,5],[103,5,118,4],[103,11,120,11],[103,15,120,15,"options"],[103,22,120,11],[103,24,120,24],[104,0,121,8,"forceBraces"],[104,6,121,8,"forceBraces"],[104,17,121,19],[104,20,121,22,"Boolean"],[104,27,121,29],[104,28,121,30,"options"],[104,35,121,37],[104,36,121,38,"forceBraces"],[104,47,121,29],[104,48,121,8],[105,0,122,8,"compact"],[105,6,122,8,"compact"],[105,13,122,15],[105,16,122,18,"Boolean"],[105,23,122,25],[105,24,122,26,"options"],[105,31,122,33],[105,32,122,34,"compact"],[105,39,122,25],[105,40,122,8],[107,0,123,8],[107,10,123,12],[107,17,123,19,"options"],[107,24,123,26],[107,25,123,27,"decorate"],[107,33,123,12],[107,38,123,40],[107,48,123,8],[107,50,123,52],[108,0,124,12,"decorate"],[108,8,124,12,"decorate"],[108,16,124,20],[108,19,124,23,"options"],[108,26,124,30],[108,27,124,31,"decorate"],[108,35,124,12],[109,0,125,9],[110,0,126,5],[112,0,128,4],[112,11,128,11,"generate"],[112,19,128,19],[112,20,128,20,"node"],[112,24,128,19],[112,26,128,26,"decorate"],[112,34,128,19],[112,36,128,36,"forceBraces"],[112,47,128,19],[112,49,128,49,"compact"],[112,56,128,19],[112,57,128,4],[113,0,129,1],[113,3,113,0]]},"type":"js/module"}]}