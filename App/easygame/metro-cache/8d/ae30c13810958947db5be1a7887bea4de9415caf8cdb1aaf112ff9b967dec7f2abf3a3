{"dependencies":[{"name":"../tokenizer","data":{"isAsync":false}},{"name":"../common/TokenStream","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var tokenize = _$$_REQUIRE(_dependencyMap[0], \"../tokenizer\");\n\n  var TokenStream = _$$_REQUIRE(_dependencyMap[1], \"../common/TokenStream\");\n\n  var tokenStream = new TokenStream();\n  var astToTokens = {\n    decorator: function decorator(handlers) {\n      var curNode = null;\n      var prev = {\n        len: 0,\n        node: null\n      };\n      var nodes = [prev];\n      var buffer = '';\n      return {\n        children: handlers.children,\n        node: function node(_node) {\n          var tmp = curNode;\n          curNode = _node;\n          handlers.node.call(this, _node);\n          curNode = tmp;\n        },\n        chunk: function chunk(_chunk) {\n          buffer += _chunk;\n\n          if (prev.node !== curNode) {\n            nodes.push({\n              len: _chunk.length,\n              node: curNode\n            });\n          } else {\n            prev.len += _chunk.length;\n          }\n        },\n        result: function result() {\n          return prepareTokens(buffer, nodes);\n        }\n      };\n    }\n  };\n\n  function prepareTokens(str, nodes) {\n    var tokens = [];\n    var nodesOffset = 0;\n    var nodesIndex = 0;\n    var currentNode = nodes ? nodes[nodesIndex].node : null;\n    tokenize(str, tokenStream);\n\n    while (!tokenStream.eof) {\n      if (nodes) {\n        while (nodesIndex < nodes.length && nodesOffset + nodes[nodesIndex].len <= tokenStream.tokenStart) {\n          nodesOffset += nodes[nodesIndex++].len;\n          currentNode = nodes[nodesIndex].node;\n        }\n      }\n\n      tokens.push({\n        type: tokenStream.tokenType,\n        value: tokenStream.getTokenValue(),\n        index: tokenStream.tokenIndex,\n        balance: tokenStream.balance[tokenStream.tokenIndex],\n        node: currentNode\n      });\n      tokenStream.next();\n    }\n\n    return tokens;\n  }\n\n  module.exports = function (value, syntax) {\n    if (typeof value === 'string') {\n      return prepareTokens(value, null);\n    }\n\n    return syntax.generate(value, astToTokens);\n  };\n});","map":[[2,0,1,0],[2,6,1,4,"tokenize"],[2,14,1,12],[2,17,1,15,"require"],[2,28,1,22],[2,63,1,0],[4,0,2,0],[4,6,2,4,"TokenStream"],[4,17,2,15],[4,20,2,18,"require"],[4,31,2,25],[4,75,2,0],[6,0,3,0],[6,6,3,4,"tokenStream"],[6,17,3,15],[6,20,3,18],[6,24,3,22,"TokenStream"],[6,35,3,18],[6,37,3,0],[7,0,4,0],[7,6,4,4,"astToTokens"],[7,17,4,15],[7,20,4,18],[8,0,5,4,"decorator"],[8,4,5,4,"decorator"],[8,13,5,13],[8,15,5,15],[8,34,5,24,"handlers"],[8,42,5,15],[8,44,5,34],[9,0,6,8],[9,10,6,12,"curNode"],[9,17,6,19],[9,20,6,22],[9,24,6,8],[10,0,7,8],[10,10,7,12,"prev"],[10,14,7,16],[10,17,7,19],[11,0,7,21,"len"],[11,8,7,21,"len"],[11,11,7,24],[11,13,7,26],[11,14,7,19],[12,0,7,29,"node"],[12,8,7,29,"node"],[12,12,7,33],[12,14,7,35],[13,0,7,19],[13,7,7,8],[14,0,8,8],[14,10,8,12,"nodes"],[14,15,8,17],[14,18,8,20],[14,19,8,21,"prev"],[14,23,8,20],[14,24,8,8],[15,0,9,8],[15,10,9,12,"buffer"],[15,16,9,18],[15,19,9,21],[15,21,9,8],[16,0,11,8],[16,13,11,15],[17,0,12,12,"children"],[17,8,12,12,"children"],[17,16,12,20],[17,18,12,22,"handlers"],[17,26,12,30],[17,27,12,31,"children"],[17,35,11,15],[18,0,13,12,"node"],[18,8,13,12,"node"],[18,12,13,16],[18,14,13,18],[18,28,13,27,"node"],[18,33,13,18],[18,35,13,33],[19,0,14,16],[19,14,14,20,"tmp"],[19,17,14,23],[19,20,14,26,"curNode"],[19,27,14,16],[20,0,15,16,"curNode"],[20,10,15,16,"curNode"],[20,17,15,23],[20,20,15,26,"node"],[20,25,15,16],[21,0,16,16,"handlers"],[21,10,16,16,"handlers"],[21,18,16,24],[21,19,16,25,"node"],[21,23,16,16],[21,24,16,30,"call"],[21,28,16,16],[21,29,16,35],[21,33,16,16],[21,35,16,41,"node"],[21,40,16,16],[22,0,17,16,"curNode"],[22,10,17,16,"curNode"],[22,17,17,23],[22,20,17,26,"tmp"],[22,23,17,16],[23,0,18,13],[23,9,11,15],[24,0,19,12,"chunk"],[24,8,19,12,"chunk"],[24,13,19,17],[24,15,19,19],[24,30,19,28,"chunk"],[24,36,19,19],[24,38,19,35],[25,0,20,16,"buffer"],[25,10,20,16,"buffer"],[25,16,20,22],[25,20,20,26,"chunk"],[25,26,20,16],[27,0,21,16],[27,14,21,20,"prev"],[27,18,21,24],[27,19,21,25,"node"],[27,23,21,20],[27,28,21,34,"curNode"],[27,35,21,16],[27,37,21,43],[28,0,22,20,"nodes"],[28,12,22,20,"nodes"],[28,17,22,25],[28,18,22,26,"push"],[28,22,22,20],[28,23,22,31],[29,0,23,24,"len"],[29,14,23,24,"len"],[29,17,23,27],[29,19,23,29,"chunk"],[29,25,23,34],[29,26,23,35,"length"],[29,32,22,31],[30,0,24,24,"node"],[30,14,24,24,"node"],[30,18,24,28],[30,20,24,30,"curNode"],[31,0,22,31],[31,13,22,20],[32,0,26,17],[32,11,21,16],[32,17,26,23],[33,0,27,20,"prev"],[33,12,27,20,"prev"],[33,16,27,24],[33,17,27,25,"len"],[33,20,27,20],[33,24,27,32,"chunk"],[33,30,27,37],[33,31,27,38,"length"],[33,37,27,20],[34,0,28,17],[35,0,29,13],[35,9,11,15],[36,0,30,12,"result"],[36,8,30,12,"result"],[36,14,30,18],[36,16,30,20],[36,34,30,31],[37,0,31,16],[37,17,31,23,"prepareTokens"],[37,30,31,36],[37,31,31,37,"buffer"],[37,37,31,36],[37,39,31,45,"nodes"],[37,44,31,36],[37,45,31,16],[38,0,32,13],[39,0,11,15],[39,7,11,8],[40,0,34,5],[41,0,4,18],[41,3,4,0],[43,0,37,0],[43,11,37,9,"prepareTokens"],[43,24,37,0],[43,25,37,23,"str"],[43,28,37,0],[43,30,37,28,"nodes"],[43,35,37,0],[43,37,37,35],[44,0,38,4],[44,8,38,8,"tokens"],[44,14,38,14],[44,17,38,17],[44,19,38,4],[45,0,39,4],[45,8,39,8,"nodesOffset"],[45,19,39,19],[45,22,39,22],[45,23,39,4],[46,0,40,4],[46,8,40,8,"nodesIndex"],[46,18,40,18],[46,21,40,21],[46,22,40,4],[47,0,41,4],[47,8,41,8,"currentNode"],[47,19,41,19],[47,22,41,22,"nodes"],[47,27,41,27],[47,30,41,30,"nodes"],[47,35,41,35],[47,36,41,36,"nodesIndex"],[47,46,41,35],[47,47,41,30],[47,48,41,48,"node"],[47,52,41,27],[47,55,41,55],[47,59,41,4],[48,0,43,4,"tokenize"],[48,4,43,4,"tokenize"],[48,12,43,12],[48,13,43,13,"str"],[48,16,43,12],[48,18,43,18,"tokenStream"],[48,29,43,12],[48,30,43,4],[50,0,45,4],[50,11,45,11],[50,12,45,12,"tokenStream"],[50,23,45,23],[50,24,45,24,"eof"],[50,27,45,4],[50,29,45,29],[51,0,46,8],[51,10,46,12,"nodes"],[51,15,46,8],[51,17,46,19],[52,0,47,12],[52,15,47,19,"nodesIndex"],[52,25,47,29],[52,28,47,32,"nodes"],[52,33,47,37],[52,34,47,38,"length"],[52,40,47,19],[52,44,47,48,"nodesOffset"],[52,55,47,59],[52,58,47,62,"nodes"],[52,63,47,67],[52,64,47,68,"nodesIndex"],[52,74,47,67],[52,75,47,62],[52,76,47,80,"len"],[52,79,47,48],[52,83,47,87,"tokenStream"],[52,94,47,98],[52,95,47,99,"tokenStart"],[52,105,47,12],[52,107,47,111],[53,0,48,16,"nodesOffset"],[53,10,48,16,"nodesOffset"],[53,21,48,27],[53,25,48,31,"nodes"],[53,30,48,36],[53,31,48,37,"nodesIndex"],[53,41,48,47],[53,43,48,36],[53,44,48,31],[53,45,48,51,"len"],[53,48,48,16],[54,0,49,16,"currentNode"],[54,10,49,16,"currentNode"],[54,21,49,27],[54,24,49,30,"nodes"],[54,29,49,35],[54,30,49,36,"nodesIndex"],[54,40,49,35],[54,41,49,30],[54,42,49,48,"node"],[54,46,49,16],[55,0,50,13],[56,0,51,9],[58,0,53,8,"tokens"],[58,6,53,8,"tokens"],[58,12,53,14],[58,13,53,15,"push"],[58,17,53,8],[58,18,53,20],[59,0,54,12,"type"],[59,8,54,12,"type"],[59,12,54,16],[59,14,54,18,"tokenStream"],[59,25,54,29],[59,26,54,30,"tokenType"],[59,35,53,20],[60,0,55,12,"value"],[60,8,55,12,"value"],[60,13,55,17],[60,15,55,19,"tokenStream"],[60,26,55,30],[60,27,55,31,"getTokenValue"],[60,40,55,19],[60,42,53,20],[61,0,56,12,"index"],[61,8,56,12,"index"],[61,13,56,17],[61,15,56,19,"tokenStream"],[61,26,56,30],[61,27,56,31,"tokenIndex"],[61,37,53,20],[62,0,57,12,"balance"],[62,8,57,12,"balance"],[62,15,57,19],[62,17,57,21,"tokenStream"],[62,28,57,32],[62,29,57,33,"balance"],[62,36,57,21],[62,37,57,41,"tokenStream"],[62,48,57,52],[62,49,57,53,"tokenIndex"],[62,59,57,21],[62,60,53,20],[63,0,58,12,"node"],[63,8,58,12,"node"],[63,12,58,16],[63,14,58,18,"currentNode"],[64,0,53,20],[64,7,53,8],[65,0,60,8,"tokenStream"],[65,6,60,8,"tokenStream"],[65,17,60,19],[65,18,60,20,"next"],[65,22,60,8],[66,0,62,5],[68,0,64,4],[68,11,64,11,"tokens"],[68,17,64,4],[69,0,65,1],[71,0,67,0,"module"],[71,2,67,0,"module"],[71,8,67,6],[71,9,67,7,"exports"],[71,16,67,0],[71,19,67,17],[71,29,67,26,"value"],[71,34,67,17],[71,36,67,33,"syntax"],[71,42,67,17],[71,44,67,41],[72,0,68,4],[72,8,68,8],[72,15,68,15,"value"],[72,20,68,8],[72,25,68,25],[72,33,68,4],[72,35,68,35],[73,0,69,8],[73,13,69,15,"prepareTokens"],[73,26,69,28],[73,27,69,29,"value"],[73,32,69,28],[73,34,69,36],[73,38,69,28],[73,39,69,8],[74,0,70,5],[76,0,72,4],[76,11,72,11,"syntax"],[76,17,72,17],[76,18,72,18,"generate"],[76,26,72,11],[76,27,72,27,"value"],[76,32,72,11],[76,34,72,34,"astToTokens"],[76,45,72,11],[76,46,72,4],[77,0,73,1],[77,3,67,0]]},"type":"js/module"}]}