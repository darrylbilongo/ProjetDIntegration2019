{"dependencies":[{"name":"../common/OffsetToLocation","data":{"isAsync":false}},{"name":"../common/SyntaxError","data":{"isAsync":false}},{"name":"../common/TokenStream","data":{"isAsync":false}},{"name":"../common/List","data":{"isAsync":false}},{"name":"../tokenizer","data":{"isAsync":false}},{"name":"../tokenizer/const","data":{"isAsync":false}},{"name":"../tokenizer/utils","data":{"isAsync":false}},{"name":"./sequence","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var OffsetToLocation = _$$_REQUIRE(_dependencyMap[0], \"../common/OffsetToLocation\");\n\n  var SyntaxError = _$$_REQUIRE(_dependencyMap[1], \"../common/SyntaxError\");\n\n  var TokenStream = _$$_REQUIRE(_dependencyMap[2], \"../common/TokenStream\");\n\n  var List = _$$_REQUIRE(_dependencyMap[3], \"../common/List\");\n\n  var tokenize = _$$_REQUIRE(_dependencyMap[4], \"../tokenizer\");\n\n  var constants = _$$_REQUIRE(_dependencyMap[5], \"../tokenizer/const\");\n\n  var findWhiteSpaceStart = _$$_REQUIRE(_dependencyMap[6], \"../tokenizer/utils\").findWhiteSpaceStart;\n\n  var sequence = _$$_REQUIRE(_dependencyMap[7], \"./sequence\");\n\n  var noop = function noop() {};\n\n  var TYPE = constants.TYPE;\n  var NAME = constants.NAME;\n  var WHITESPACE = TYPE.WhiteSpace;\n  var IDENT = TYPE.Ident;\n  var FUNCTION = TYPE.Function;\n  var URL = TYPE.Url;\n  var HASH = TYPE.Hash;\n  var PERCENTAGE = TYPE.Percentage;\n  var NUMBER = TYPE.Number;\n  var NUMBERSIGN = 0x0023;\n  var NULL = 0;\n\n  function createParseContext(name) {\n    return function () {\n      return this[name]();\n    };\n  }\n\n  function processConfig(config) {\n    var parserConfig = {\n      context: {},\n      scope: {},\n      atrule: {},\n      pseudo: {}\n    };\n\n    if (config.parseContext) {\n      for (var name in config.parseContext) {\n        switch (typeof config.parseContext[name]) {\n          case 'function':\n            parserConfig.context[name] = config.parseContext[name];\n            break;\n\n          case 'string':\n            parserConfig.context[name] = createParseContext(config.parseContext[name]);\n            break;\n        }\n      }\n    }\n\n    if (config.scope) {\n      for (var name in config.scope) {\n        parserConfig.scope[name] = config.scope[name];\n      }\n    }\n\n    if (config.atrule) {\n      for (var name in config.atrule) {\n        var atrule = config.atrule[name];\n\n        if (atrule.parse) {\n          parserConfig.atrule[name] = atrule.parse;\n        }\n      }\n    }\n\n    if (config.pseudo) {\n      for (var name in config.pseudo) {\n        var pseudo = config.pseudo[name];\n\n        if (pseudo.parse) {\n          parserConfig.pseudo[name] = pseudo.parse;\n        }\n      }\n    }\n\n    if (config.node) {\n      for (var name in config.node) {\n        parserConfig[name] = config.node[name].parse;\n      }\n    }\n\n    return parserConfig;\n  }\n\n  module.exports = function createParser(config) {\n    var parser = {\n      scanner: new TokenStream(),\n      locationMap: new OffsetToLocation(),\n      filename: '<unknown>',\n      needPositions: false,\n      onParseError: noop,\n      onParseErrorThrow: false,\n      parseAtrulePrelude: true,\n      parseRulePrelude: true,\n      parseValue: true,\n      parseCustomProperty: false,\n      readSequence: sequence,\n      createList: function createList() {\n        return new List();\n      },\n      createSingleNodeList: function createSingleNodeList(node) {\n        return new List().appendData(node);\n      },\n      getFirstListNode: function getFirstListNode(list) {\n        return list && list.first();\n      },\n      getLastListNode: function getLastListNode(list) {\n        return list.last();\n      },\n      parseWithFallback: function parseWithFallback(consumer, fallback) {\n        var startToken = this.scanner.tokenIndex;\n\n        try {\n          return consumer.call(this);\n        } catch (e) {\n          if (this.onParseErrorThrow) {\n            throw e;\n          }\n\n          var fallbackNode = fallback.call(this, startToken);\n          this.onParseErrorThrow = true;\n          this.onParseError(e, fallbackNode);\n          this.onParseErrorThrow = false;\n          return fallbackNode;\n        }\n      },\n      lookupNonWSType: function lookupNonWSType(offset) {\n        do {\n          var type = this.scanner.lookupType(offset++);\n\n          if (type !== WHITESPACE) {\n            return type;\n          }\n        } while (type !== NULL);\n\n        return NULL;\n      },\n      eat: function eat(tokenType) {\n        if (this.scanner.tokenType !== tokenType) {\n          var offset = this.scanner.tokenStart;\n          var message = NAME[tokenType] + ' is expected';\n\n          switch (tokenType) {\n            case IDENT:\n              if (this.scanner.tokenType === FUNCTION || this.scanner.tokenType === URL) {\n                offset = this.scanner.tokenEnd - 1;\n                message = 'Identifier is expected but function found';\n              } else {\n                message = 'Identifier is expected';\n              }\n\n              break;\n\n            case HASH:\n              if (this.scanner.isDelim(NUMBERSIGN)) {\n                this.scanner.next();\n                offset++;\n                message = 'Name is expected';\n              }\n\n              break;\n\n            case PERCENTAGE:\n              if (this.scanner.tokenType === NUMBER) {\n                offset = this.scanner.tokenEnd;\n                message = 'Percent sign is expected';\n              }\n\n              break;\n\n            default:\n              if (this.scanner.source.charCodeAt(this.scanner.tokenStart) === tokenType) {\n                offset = offset + 1;\n              }\n\n          }\n\n          this.error(message, offset);\n        }\n\n        this.scanner.next();\n      },\n      consume: function consume(tokenType) {\n        var value = this.scanner.getTokenValue();\n        this.eat(tokenType);\n        return value;\n      },\n      consumeFunctionName: function consumeFunctionName() {\n        var name = this.scanner.source.substring(this.scanner.tokenStart, this.scanner.tokenEnd - 1);\n        this.eat(FUNCTION);\n        return name;\n      },\n      getLocation: function getLocation(start, end) {\n        if (this.needPositions) {\n          return this.locationMap.getLocationRange(start, end, this.filename);\n        }\n\n        return null;\n      },\n      getLocationFromList: function getLocationFromList(list) {\n        if (this.needPositions) {\n          var head = this.getFirstListNode(list);\n          var tail = this.getLastListNode(list);\n          return this.locationMap.getLocationRange(head !== null ? head.loc.start.offset - this.locationMap.startOffset : this.scanner.tokenStart, tail !== null ? tail.loc.end.offset - this.locationMap.startOffset : this.scanner.tokenStart, this.filename);\n        }\n\n        return null;\n      },\n      error: function error(message, offset) {\n        var location = typeof offset !== 'undefined' && offset < this.scanner.source.length ? this.locationMap.getLocation(offset) : this.scanner.eof ? this.locationMap.getLocation(findWhiteSpaceStart(this.scanner.source, this.scanner.source.length - 1)) : this.locationMap.getLocation(this.scanner.tokenStart);\n        throw new SyntaxError(message || 'Unexpected input', this.scanner.source, location.offset, location.line, location.column);\n      }\n    };\n    config = processConfig(config || {});\n\n    for (var key in config) {\n      parser[key] = config[key];\n    }\n\n    return function (source, options) {\n      options = options || {};\n      var context = options.context || 'default';\n      var ast;\n      tokenize(source, parser.scanner);\n      parser.locationMap.setSource(source, options.offset, options.line, options.column);\n      parser.filename = options.filename || '<unknown>';\n      parser.needPositions = Boolean(options.positions);\n      parser.onParseError = typeof options.onParseError === 'function' ? options.onParseError : noop;\n      parser.onParseErrorThrow = false;\n      parser.parseAtrulePrelude = 'parseAtrulePrelude' in options ? Boolean(options.parseAtrulePrelude) : true;\n      parser.parseRulePrelude = 'parseRulePrelude' in options ? Boolean(options.parseRulePrelude) : true;\n      parser.parseValue = 'parseValue' in options ? Boolean(options.parseValue) : true;\n      parser.parseCustomProperty = 'parseCustomProperty' in options ? Boolean(options.parseCustomProperty) : false;\n\n      if (!parser.context.hasOwnProperty(context)) {\n        throw new Error('Unknown context `' + context + '`');\n      }\n\n      ast = parser.context[context].call(parser, options);\n\n      if (!parser.scanner.eof) {\n        parser.error();\n      }\n\n      return ast;\n    };\n  };\n});","map":[[2,0,1,0],[2,6,1,4,"OffsetToLocation"],[2,22,1,20],[2,25,1,23,"require"],[2,36,1,30],[2,85,1,0],[4,0,2,0],[4,6,2,4,"SyntaxError"],[4,17,2,15],[4,20,2,18,"require"],[4,31,2,25],[4,75,2,0],[6,0,3,0],[6,6,3,4,"TokenStream"],[6,17,3,15],[6,20,3,18,"require"],[6,31,3,25],[6,75,3,0],[8,0,4,0],[8,6,4,4,"List"],[8,10,4,8],[8,13,4,11,"require"],[8,24,4,18],[8,61,4,0],[10,0,5,0],[10,6,5,4,"tokenize"],[10,14,5,12],[10,17,5,15,"require"],[10,28,5,22],[10,63,5,0],[12,0,6,0],[12,6,6,4,"constants"],[12,15,6,13],[12,18,6,16,"require"],[12,29,6,23],[12,70,6,0],[14,0,7,0],[14,6,7,4,"findWhiteSpaceStart"],[14,25,7,23],[14,28,7,26,"require"],[14,39,7,33],[14,80,7,26],[14,81,7,56,"findWhiteSpaceStart"],[14,100,7,0],[16,0,8,0],[16,6,8,4,"sequence"],[16,14,8,12],[16,17,8,15,"require"],[16,28,8,22],[16,61,8,0],[18,0,9,0],[18,6,9,4,"noop"],[18,10,9,8],[18,13,9,11],[18,22,9,4,"noop"],[18,26,9,11],[18,29,9,22],[18,30,9,24],[18,31,9,0],[20,0,11,0],[20,6,11,4,"TYPE"],[20,10,11,8],[20,13,11,11,"constants"],[20,22,11,20],[20,23,11,21,"TYPE"],[20,27,11,0],[21,0,12,0],[21,6,12,4,"NAME"],[21,10,12,8],[21,13,12,11,"constants"],[21,22,12,20],[21,23,12,21,"NAME"],[21,27,12,0],[22,0,13,0],[22,6,13,4,"WHITESPACE"],[22,16,13,14],[22,19,13,17,"TYPE"],[22,23,13,21],[22,24,13,22,"WhiteSpace"],[22,34,13,0],[23,0,14,0],[23,6,14,4,"IDENT"],[23,11,14,9],[23,14,14,12,"TYPE"],[23,18,14,16],[23,19,14,17,"Ident"],[23,24,14,0],[24,0,15,0],[24,6,15,4,"FUNCTION"],[24,14,15,12],[24,17,15,15,"TYPE"],[24,21,15,19],[24,22,15,20,"Function"],[24,30,15,0],[25,0,16,0],[25,6,16,4,"URL"],[25,9,16,7],[25,12,16,10,"TYPE"],[25,16,16,14],[25,17,16,15,"Url"],[25,20,16,0],[26,0,17,0],[26,6,17,4,"HASH"],[26,10,17,8],[26,13,17,11,"TYPE"],[26,17,17,15],[26,18,17,16,"Hash"],[26,22,17,0],[27,0,18,0],[27,6,18,4,"PERCENTAGE"],[27,16,18,14],[27,19,18,17,"TYPE"],[27,23,18,21],[27,24,18,22,"Percentage"],[27,34,18,0],[28,0,19,0],[28,6,19,4,"NUMBER"],[28,12,19,10],[28,15,19,13,"TYPE"],[28,19,19,17],[28,20,19,18,"Number"],[28,26,19,0],[29,0,20,0],[29,6,20,4,"NUMBERSIGN"],[29,16,20,14],[29,19,20,17],[29,25,20,0],[30,0,21,0],[30,6,21,4,"NULL"],[30,10,21,8],[30,13,21,11],[30,14,21,0],[32,0,23,0],[32,11,23,9,"createParseContext"],[32,29,23,0],[32,30,23,28,"name"],[32,34,23,0],[32,36,23,34],[33,0,24,4],[33,11,24,11],[33,23,24,22],[34,0,25,8],[34,13,25,15],[34,18,25,20,"name"],[34,22,25,15],[34,25,25,8],[35,0,26,5],[35,5,24,4],[36,0,27,1],[38,0,29,0],[38,11,29,9,"processConfig"],[38,24,29,0],[38,25,29,23,"config"],[38,31,29,0],[38,33,29,31],[39,0,30,4],[39,8,30,8,"parserConfig"],[39,20,30,20],[39,23,30,23],[40,0,31,8,"context"],[40,6,31,8,"context"],[40,13,31,15],[40,15,31,17],[40,17,30,23],[41,0,32,8,"scope"],[41,6,32,8,"scope"],[41,11,32,13],[41,13,32,15],[41,15,30,23],[42,0,33,8,"atrule"],[42,6,33,8,"atrule"],[42,12,33,14],[42,14,33,16],[42,16,30,23],[43,0,34,8,"pseudo"],[43,6,34,8,"pseudo"],[43,12,34,14],[43,14,34,16],[44,0,30,23],[44,5,30,4],[46,0,37,4],[46,8,37,8,"config"],[46,14,37,14],[46,15,37,15,"parseContext"],[46,27,37,4],[46,29,37,29],[47,0,38,8],[47,11,38,13],[47,15,38,17,"name"],[47,19,38,8],[47,23,38,25,"config"],[47,29,38,31],[47,30,38,32,"parseContext"],[47,42,38,8],[47,44,38,46],[48,0,39,12],[48,16,39,20],[48,23,39,27,"config"],[48,29,39,33],[48,30,39,34,"parseContext"],[48,42,39,27],[48,43,39,47,"name"],[48,47,39,27],[48,48,39,12],[49,0,40,16],[49,15,40,21],[49,25,40,16],[50,0,41,20,"parserConfig"],[50,12,41,20,"parserConfig"],[50,24,41,32],[50,25,41,33,"context"],[50,32,41,20],[50,33,41,41,"name"],[50,37,41,20],[50,41,41,49,"config"],[50,47,41,55],[50,48,41,56,"parseContext"],[50,60,41,49],[50,61,41,69,"name"],[50,65,41,49],[50,66,41,20],[51,0,42,20],[53,0,44,16],[53,15,44,21],[53,23,44,16],[54,0,45,20,"parserConfig"],[54,12,45,20,"parserConfig"],[54,24,45,32],[54,25,45,33,"context"],[54,32,45,20],[54,33,45,41,"name"],[54,37,45,20],[54,41,45,49,"createParseContext"],[54,59,45,67],[54,60,45,68,"config"],[54,66,45,74],[54,67,45,75,"parseContext"],[54,79,45,68],[54,80,45,88,"name"],[54,84,45,68],[54,85,45,67],[54,86,45,20],[55,0,46,20],[56,0,39,12],[57,0,48,9],[58,0,49,5],[60,0,51,4],[60,8,51,8,"config"],[60,14,51,14],[60,15,51,15,"scope"],[60,20,51,4],[60,22,51,22],[61,0,52,8],[61,11,52,13],[61,15,52,17,"name"],[61,19,52,8],[61,23,52,25,"config"],[61,29,52,31],[61,30,52,32,"scope"],[61,35,52,8],[61,37,52,39],[62,0,53,12,"parserConfig"],[62,8,53,12,"parserConfig"],[62,20,53,24],[62,21,53,25,"scope"],[62,26,53,12],[62,27,53,31,"name"],[62,31,53,12],[62,35,53,39,"config"],[62,41,53,45],[62,42,53,46,"scope"],[62,47,53,39],[62,48,53,52,"name"],[62,52,53,39],[62,53,53,12],[63,0,54,9],[64,0,55,5],[66,0,57,4],[66,8,57,8,"config"],[66,14,57,14],[66,15,57,15,"atrule"],[66,21,57,4],[66,23,57,23],[67,0,58,8],[67,11,58,13],[67,15,58,17,"name"],[67,19,58,8],[67,23,58,25,"config"],[67,29,58,31],[67,30,58,32,"atrule"],[67,36,58,8],[67,38,58,40],[68,0,59,12],[68,12,59,16,"atrule"],[68,18,59,22],[68,21,59,25,"config"],[68,27,59,31],[68,28,59,32,"atrule"],[68,34,59,25],[68,35,59,39,"name"],[68,39,59,25],[68,40,59,12],[70,0,61,12],[70,12,61,16,"atrule"],[70,18,61,22],[70,19,61,23,"parse"],[70,24,61,12],[70,26,61,30],[71,0,62,16,"parserConfig"],[71,10,62,16,"parserConfig"],[71,22,62,28],[71,23,62,29,"atrule"],[71,29,62,16],[71,30,62,36,"name"],[71,34,62,16],[71,38,62,44,"atrule"],[71,44,62,50],[71,45,62,51,"parse"],[71,50,62,16],[72,0,63,13],[73,0,64,9],[74,0,65,5],[76,0,67,4],[76,8,67,8,"config"],[76,14,67,14],[76,15,67,15,"pseudo"],[76,21,67,4],[76,23,67,23],[77,0,68,8],[77,11,68,13],[77,15,68,17,"name"],[77,19,68,8],[77,23,68,25,"config"],[77,29,68,31],[77,30,68,32,"pseudo"],[77,36,68,8],[77,38,68,40],[78,0,69,12],[78,12,69,16,"pseudo"],[78,18,69,22],[78,21,69,25,"config"],[78,27,69,31],[78,28,69,32,"pseudo"],[78,34,69,25],[78,35,69,39,"name"],[78,39,69,25],[78,40,69,12],[80,0,71,12],[80,12,71,16,"pseudo"],[80,18,71,22],[80,19,71,23,"parse"],[80,24,71,12],[80,26,71,30],[81,0,72,16,"parserConfig"],[81,10,72,16,"parserConfig"],[81,22,72,28],[81,23,72,29,"pseudo"],[81,29,72,16],[81,30,72,36,"name"],[81,34,72,16],[81,38,72,44,"pseudo"],[81,44,72,50],[81,45,72,51,"parse"],[81,50,72,16],[82,0,73,13],[83,0,74,9],[84,0,75,5],[86,0,77,4],[86,8,77,8,"config"],[86,14,77,14],[86,15,77,15,"node"],[86,19,77,4],[86,21,77,21],[87,0,78,8],[87,11,78,13],[87,15,78,17,"name"],[87,19,78,8],[87,23,78,25,"config"],[87,29,78,31],[87,30,78,32,"node"],[87,34,78,8],[87,36,78,38],[88,0,79,12,"parserConfig"],[88,8,79,12,"parserConfig"],[88,20,79,24],[88,21,79,25,"name"],[88,25,79,24],[88,26,79,12],[88,29,79,33,"config"],[88,35,79,39],[88,36,79,40,"node"],[88,40,79,33],[88,41,79,45,"name"],[88,45,79,33],[88,47,79,51,"parse"],[88,52,79,12],[89,0,80,9],[90,0,81,5],[92,0,83,4],[92,11,83,11,"parserConfig"],[92,23,83,4],[93,0,84,1],[95,0,86,0,"module"],[95,2,86,0,"module"],[95,8,86,6],[95,9,86,7,"exports"],[95,16,86,0],[95,19,86,17],[95,28,86,26,"createParser"],[95,40,86,17],[95,41,86,39,"config"],[95,47,86,17],[95,49,86,47],[96,0,87,4],[96,8,87,8,"parser"],[96,14,87,14],[96,17,87,17],[97,0,88,8,"scanner"],[97,6,88,8,"scanner"],[97,13,88,15],[97,15,88,17],[97,19,88,21,"TokenStream"],[97,30,88,17],[97,32,87,17],[98,0,89,8,"locationMap"],[98,6,89,8,"locationMap"],[98,17,89,19],[98,19,89,21],[98,23,89,25,"OffsetToLocation"],[98,39,89,21],[98,41,87,17],[99,0,91,8,"filename"],[99,6,91,8,"filename"],[99,14,91,16],[99,16,91,18],[99,27,87,17],[100,0,92,8,"needPositions"],[100,6,92,8,"needPositions"],[100,19,92,21],[100,21,92,23],[100,26,87,17],[101,0,93,8,"onParseError"],[101,6,93,8,"onParseError"],[101,18,93,20],[101,20,93,22,"noop"],[101,24,87,17],[102,0,94,8,"onParseErrorThrow"],[102,6,94,8,"onParseErrorThrow"],[102,23,94,25],[102,25,94,27],[102,30,87,17],[103,0,95,8,"parseAtrulePrelude"],[103,6,95,8,"parseAtrulePrelude"],[103,24,95,26],[103,26,95,28],[103,30,87,17],[104,0,96,8,"parseRulePrelude"],[104,6,96,8,"parseRulePrelude"],[104,22,96,24],[104,24,96,26],[104,28,87,17],[105,0,97,8,"parseValue"],[105,6,97,8,"parseValue"],[105,16,97,18],[105,18,97,20],[105,22,87,17],[106,0,98,8,"parseCustomProperty"],[106,6,98,8,"parseCustomProperty"],[106,25,98,27],[106,27,98,29],[106,32,87,17],[107,0,100,8,"readSequence"],[107,6,100,8,"readSequence"],[107,18,100,20],[107,20,100,22,"sequence"],[107,28,87,17],[108,0,102,8,"createList"],[108,6,102,8,"createList"],[108,16,102,18],[108,18,102,20],[108,40,102,31],[109,0,103,12],[109,15,103,19],[109,19,103,23,"List"],[109,23,103,19],[109,25,103,12],[110,0,104,9],[110,7,87,17],[111,0,105,8,"createSingleNodeList"],[111,6,105,8,"createSingleNodeList"],[111,26,105,28],[111,28,105,30],[111,58,105,39,"node"],[111,62,105,30],[111,64,105,45],[112,0,106,12],[112,15,106,19],[112,19,106,23,"List"],[112,23,106,19],[112,26,106,30,"appendData"],[112,36,106,19],[112,37,106,41,"node"],[112,41,106,19],[112,42,106,12],[113,0,107,9],[113,7,87,17],[114,0,108,8,"getFirstListNode"],[114,6,108,8,"getFirstListNode"],[114,22,108,24],[114,24,108,26],[114,50,108,35,"list"],[114,54,108,26],[114,56,108,41],[115,0,109,12],[115,15,109,19,"list"],[115,19,109,23],[115,23,109,27,"list"],[115,27,109,31],[115,28,109,32,"first"],[115,33,109,27],[115,35,109,12],[116,0,110,9],[116,7,87,17],[117,0,111,8,"getLastListNode"],[117,6,111,8,"getLastListNode"],[117,21,111,23],[117,23,111,25],[117,48,111,34,"list"],[117,52,111,25],[117,54,111,40],[118,0,112,12],[118,15,112,19,"list"],[118,19,112,23],[118,20,112,24,"last"],[118,24,112,19],[118,26,112,12],[119,0,113,9],[119,7,87,17],[120,0,115,8,"parseWithFallback"],[120,6,115,8,"parseWithFallback"],[120,23,115,25],[120,25,115,27],[120,52,115,36,"consumer"],[120,60,115,27],[120,62,115,46,"fallback"],[120,70,115,27],[120,72,115,56],[121,0,116,12],[121,12,116,16,"startToken"],[121,22,116,26],[121,25,116,29],[121,30,116,34,"scanner"],[121,37,116,29],[121,38,116,42,"tokenIndex"],[121,48,116,12],[123,0,118,12],[123,12,118,16],[124,0,119,16],[124,17,119,23,"consumer"],[124,25,119,31],[124,26,119,32,"call"],[124,30,119,23],[124,31,119,37],[124,35,119,23],[124,36,119,16],[125,0,120,13],[125,9,118,12],[125,10,120,14],[125,17,120,21,"e"],[125,18,120,14],[125,20,120,24],[126,0,121,16],[126,14,121,20],[126,19,121,25,"onParseErrorThrow"],[126,36,121,16],[126,38,121,44],[127,0,122,20],[127,18,122,26,"e"],[127,19,122,20],[128,0,123,17],[130,0,125,16],[130,14,125,20,"fallbackNode"],[130,26,125,32],[130,29,125,35,"fallback"],[130,37,125,43],[130,38,125,44,"call"],[130,42,125,35],[130,43,125,49],[130,47,125,35],[130,49,125,55,"startToken"],[130,59,125,35],[130,60,125,16],[131,0,127,16],[131,15,127,21,"onParseErrorThrow"],[131,32,127,16],[131,35,127,41],[131,39,127,16],[132,0,128,16],[132,15,128,21,"onParseError"],[132,27,128,16],[132,28,128,34,"e"],[132,29,128,16],[132,31,128,37,"fallbackNode"],[132,43,128,16],[133,0,129,16],[133,15,129,21,"onParseErrorThrow"],[133,32,129,16],[133,35,129,41],[133,40,129,16],[134,0,131,16],[134,17,131,23,"fallbackNode"],[134,29,131,16],[135,0,132,13],[136,0,133,9],[136,7,87,17],[137,0,135,8,"lookupNonWSType"],[137,6,135,8,"lookupNonWSType"],[137,21,135,23],[137,23,135,25],[137,48,135,34,"offset"],[137,54,135,25],[137,56,135,42],[138,0,136,12],[138,11,136,15],[139,0,137,16],[139,14,137,20,"type"],[139,18,137,24],[139,21,137,27],[139,26,137,32,"scanner"],[139,33,137,27],[139,34,137,40,"lookupType"],[139,44,137,27],[139,45,137,51,"offset"],[139,51,137,57],[139,53,137,27],[139,54,137,16],[141,0,138,16],[141,14,138,20,"type"],[141,18,138,24],[141,23,138,29,"WHITESPACE"],[141,33,138,16],[141,35,138,41],[142,0,139,20],[142,19,139,27,"type"],[142,23,139,20],[143,0,140,17],[144,0,141,13],[144,9,136,12],[144,17,141,21,"type"],[144,21,141,25],[144,26,141,30,"NULL"],[144,30,136,12],[146,0,143,12],[146,15,143,19,"NULL"],[146,19,143,12],[147,0,144,9],[147,7,87,17],[148,0,146,8,"eat"],[148,6,146,8,"eat"],[148,9,146,11],[148,11,146,13],[148,24,146,22,"tokenType"],[148,33,146,13],[148,35,146,33],[149,0,147,12],[149,12,147,16],[149,17,147,21,"scanner"],[149,24,147,16],[149,25,147,29,"tokenType"],[149,34,147,16],[149,39,147,43,"tokenType"],[149,48,147,12],[149,50,147,54],[150,0,148,16],[150,14,148,20,"offset"],[150,20,148,26],[150,23,148,29],[150,28,148,34,"scanner"],[150,35,148,29],[150,36,148,42,"tokenStart"],[150,46,148,16],[151,0,149,16],[151,14,149,20,"message"],[151,21,149,27],[151,24,149,30,"NAME"],[151,28,149,34],[151,29,149,35,"tokenType"],[151,38,149,34],[151,39,149,30],[151,42,149,48],[151,56,149,16],[153,0,152,16],[153,18,152,24,"tokenType"],[153,27,152,16],[154,0,153,20],[154,17,153,25,"IDENT"],[154,22,153,20],[155,0,155,24],[155,18,155,28],[155,23,155,33,"scanner"],[155,30,155,28],[155,31,155,41,"tokenType"],[155,40,155,28],[155,45,155,55,"FUNCTION"],[155,53,155,28],[155,57,155,67],[155,62,155,72,"scanner"],[155,69,155,67],[155,70,155,80,"tokenType"],[155,79,155,67],[155,84,155,94,"URL"],[155,87,155,24],[155,89,155,99],[156,0,156,28,"offset"],[156,16,156,28,"offset"],[156,22,156,34],[156,25,156,37],[156,30,156,42,"scanner"],[156,37,156,37],[156,38,156,50,"tokenEnd"],[156,46,156,37],[156,49,156,61],[156,50,156,28],[157,0,157,28,"message"],[157,16,157,28,"message"],[157,23,157,35],[157,26,157,38],[157,69,157,28],[158,0,158,25],[158,15,155,24],[158,21,158,31],[159,0,159,28,"message"],[159,16,159,28,"message"],[159,23,159,35],[159,26,159,38],[159,50,159,28],[160,0,160,25],[162,0,161,24],[164,0,163,20],[164,17,163,25,"HASH"],[164,21,163,20],[165,0,164,24],[165,18,164,28],[165,23,164,33,"scanner"],[165,30,164,28],[165,31,164,41,"isDelim"],[165,38,164,28],[165,39,164,49,"NUMBERSIGN"],[165,49,164,28],[165,50,164,24],[165,52,164,62],[166,0,165,28],[166,21,165,33,"scanner"],[166,28,165,28],[166,29,165,41,"next"],[166,33,165,28],[167,0,166,28,"offset"],[167,16,166,28,"offset"],[167,22,166,34],[168,0,167,28,"message"],[168,16,167,28,"message"],[168,23,167,35],[168,26,167,38],[168,44,167,28],[169,0,168,25],[171,0,169,24],[173,0,171,20],[173,17,171,25,"PERCENTAGE"],[173,27,171,20],[174,0,172,24],[174,18,172,28],[174,23,172,33,"scanner"],[174,30,172,28],[174,31,172,41,"tokenType"],[174,40,172,28],[174,45,172,55,"NUMBER"],[174,51,172,24],[174,53,172,63],[175,0,173,28,"offset"],[175,16,173,28,"offset"],[175,22,173,34],[175,25,173,37],[175,30,173,42,"scanner"],[175,37,173,37],[175,38,173,50,"tokenEnd"],[175,46,173,28],[176,0,174,28,"message"],[176,16,174,28,"message"],[176,23,174,35],[176,26,174,38],[176,52,174,28],[177,0,175,25],[179,0,176,24],[181,0,178,20],[182,0,181,24],[182,18,181,28],[182,23,181,33,"scanner"],[182,30,181,28],[182,31,181,41,"source"],[182,37,181,28],[182,38,181,48,"charCodeAt"],[182,48,181,28],[182,49,181,59],[182,54,181,64,"scanner"],[182,61,181,59],[182,62,181,72,"tokenStart"],[182,72,181,28],[182,78,181,88,"tokenType"],[182,87,181,24],[182,89,181,99],[183,0,182,28,"offset"],[183,16,182,28,"offset"],[183,22,182,34],[183,25,182,37,"offset"],[183,31,182,43],[183,34,182,46],[183,35,182,28],[184,0,183,25],[186,0,152,16],[188,0,186,16],[188,15,186,21,"error"],[188,20,186,16],[188,21,186,27,"message"],[188,28,186,16],[188,30,186,36,"offset"],[188,36,186,16],[189,0,187,13],[191,0,189,12],[191,13,189,17,"scanner"],[191,20,189,12],[191,21,189,25,"next"],[191,25,189,12],[192,0,190,9],[192,7,87,17],[193,0,192,8,"consume"],[193,6,192,8,"consume"],[193,13,192,15],[193,15,192,17],[193,32,192,26,"tokenType"],[193,41,192,17],[193,43,192,37],[194,0,193,12],[194,12,193,16,"value"],[194,17,193,21],[194,20,193,24],[194,25,193,29,"scanner"],[194,32,193,24],[194,33,193,37,"getTokenValue"],[194,46,193,24],[194,48,193,12],[195,0,195,12],[195,13,195,17,"eat"],[195,16,195,12],[195,17,195,21,"tokenType"],[195,26,195,12],[196,0,197,12],[196,15,197,19,"value"],[196,20,197,12],[197,0,198,9],[197,7,87,17],[198,0,199,8,"consumeFunctionName"],[198,6,199,8,"consumeFunctionName"],[198,25,199,27],[198,27,199,29],[198,58,199,40],[199,0,200,12],[199,12,200,16,"name"],[199,16,200,20],[199,19,200,23],[199,24,200,28,"scanner"],[199,31,200,23],[199,32,200,36,"source"],[199,38,200,23],[199,39,200,43,"substring"],[199,48,200,23],[199,49,200,53],[199,54,200,58,"scanner"],[199,61,200,53],[199,62,200,66,"tokenStart"],[199,72,200,23],[199,74,200,78],[199,79,200,83,"scanner"],[199,86,200,78],[199,87,200,91,"tokenEnd"],[199,95,200,78],[199,98,200,102],[199,99,200,23],[199,100,200,12],[200,0,202,12],[200,13,202,17,"eat"],[200,16,202,12],[200,17,202,21,"FUNCTION"],[200,25,202,12],[201,0,204,12],[201,15,204,19,"name"],[201,19,204,12],[202,0,205,9],[202,7,87,17],[203,0,207,8,"getLocation"],[203,6,207,8,"getLocation"],[203,17,207,19],[203,19,207,21],[203,40,207,30,"start"],[203,45,207,21],[203,47,207,37,"end"],[203,50,207,21],[203,52,207,42],[204,0,208,12],[204,12,208,16],[204,17,208,21,"needPositions"],[204,30,208,12],[204,32,208,36],[205,0,209,16],[205,17,209,23],[205,22,209,28,"locationMap"],[205,33,209,23],[205,34,209,40,"getLocationRange"],[205,50,209,23],[205,51,210,20,"start"],[205,56,209,23],[205,58,211,20,"end"],[205,61,209,23],[205,63,212,20],[205,68,212,25,"filename"],[205,76,209,23],[205,77,209,16],[206,0,214,13],[208,0,216,12],[208,15,216,19],[208,19,216,12],[209,0,217,9],[209,7,87,17],[210,0,218,8,"getLocationFromList"],[210,6,218,8,"getLocationFromList"],[210,25,218,27],[210,27,218,29],[210,56,218,38,"list"],[210,60,218,29],[210,62,218,44],[211,0,219,12],[211,12,219,16],[211,17,219,21,"needPositions"],[211,30,219,12],[211,32,219,36],[212,0,220,16],[212,14,220,20,"head"],[212,18,220,24],[212,21,220,27],[212,26,220,32,"getFirstListNode"],[212,42,220,27],[212,43,220,49,"list"],[212,47,220,27],[212,48,220,16],[213,0,221,16],[213,14,221,20,"tail"],[213,18,221,24],[213,21,221,27],[213,26,221,32,"getLastListNode"],[213,41,221,27],[213,42,221,48,"list"],[213,46,221,27],[213,47,221,16],[214,0,222,16],[214,17,222,23],[214,22,222,28,"locationMap"],[214,33,222,23],[214,34,222,40,"getLocationRange"],[214,50,222,23],[214,51,223,20,"head"],[214,55,223,24],[214,60,223,29],[214,64,223,20],[214,67,223,36,"head"],[214,71,223,40],[214,72,223,41,"loc"],[214,75,223,36],[214,76,223,45,"start"],[214,81,223,36],[214,82,223,51,"offset"],[214,88,223,36],[214,91,223,60],[214,96,223,65,"locationMap"],[214,107,223,60],[214,108,223,77,"startOffset"],[214,119,223,20],[214,122,223,91],[214,127,223,96,"scanner"],[214,134,223,91],[214,135,223,104,"tokenStart"],[214,145,222,23],[214,147,224,20,"tail"],[214,151,224,24],[214,156,224,29],[214,160,224,20],[214,163,224,36,"tail"],[214,167,224,40],[214,168,224,41,"loc"],[214,171,224,36],[214,172,224,45,"end"],[214,175,224,36],[214,176,224,49,"offset"],[214,182,224,36],[214,185,224,58],[214,190,224,63,"locationMap"],[214,201,224,58],[214,202,224,75,"startOffset"],[214,213,224,20],[214,216,224,89],[214,221,224,94,"scanner"],[214,228,224,89],[214,229,224,102,"tokenStart"],[214,239,222,23],[214,241,225,20],[214,246,225,25,"filename"],[214,254,222,23],[214,255,222,16],[215,0,227,13],[217,0,229,12],[217,15,229,19],[217,19,229,12],[218,0,230,9],[218,7,87,17],[219,0,232,8,"error"],[219,6,232,8,"error"],[219,11,232,13],[219,13,232,15],[219,28,232,24,"message"],[219,35,232,15],[219,37,232,33,"offset"],[219,43,232,15],[219,45,232,41],[220,0,233,12],[220,12,233,16,"location"],[220,20,233,24],[220,23,233,27],[220,30,233,34,"offset"],[220,36,233,27],[220,41,233,45],[220,52,233,27],[220,56,233,60,"offset"],[220,62,233,66],[220,65,233,69],[220,70,233,74,"scanner"],[220,77,233,69],[220,78,233,82,"source"],[220,84,233,69],[220,85,233,89,"length"],[220,91,233,27],[220,94,234,18],[220,99,234,23,"locationMap"],[220,110,234,18],[220,111,234,35,"getLocation"],[220,122,234,18],[220,123,234,47,"offset"],[220,129,234,18],[220,130,233,27],[220,133,235,18],[220,138,235,23,"scanner"],[220,145,235,18],[220,146,235,31,"eof"],[220,149,235,18],[220,152,236,22],[220,157,236,27,"locationMap"],[220,168,236,22],[220,169,236,39,"getLocation"],[220,180,236,22],[220,181,236,51,"findWhiteSpaceStart"],[220,200,236,70],[220,201,236,71],[220,206,236,76,"scanner"],[220,213,236,71],[220,214,236,84,"source"],[220,220,236,70],[220,222,236,92],[220,227,236,97,"scanner"],[220,234,236,92],[220,235,236,105,"source"],[220,241,236,92],[220,242,236,112,"length"],[220,248,236,92],[220,251,236,121],[220,252,236,70],[220,253,236,22],[220,254,235,18],[220,257,237,22],[220,262,237,27,"locationMap"],[220,273,237,22],[220,274,237,39,"getLocation"],[220,285,237,22],[220,286,237,51],[220,291,237,56,"scanner"],[220,298,237,51],[220,299,237,64,"tokenStart"],[220,309,237,22],[220,310,233,12],[221,0,239,12],[221,14,239,18],[221,18,239,22,"SyntaxError"],[221,29,239,18],[221,30,240,16,"message"],[221,37,240,23],[221,41,240,27],[221,59,239,18],[221,61,241,16],[221,66,241,21,"scanner"],[221,73,241,16],[221,74,241,29,"source"],[221,80,239,18],[221,82,242,16,"location"],[221,90,242,24],[221,91,242,25,"offset"],[221,97,239,18],[221,99,243,16,"location"],[221,107,243,24],[221,108,243,25,"line"],[221,112,239,18],[221,114,244,16,"location"],[221,122,244,24],[221,123,244,25,"column"],[221,129,239,18],[221,130,239,12],[222,0,246,9],[223,0,87,17],[223,5,87,4],[224,0,249,4,"config"],[224,4,249,4,"config"],[224,10,249,10],[224,13,249,13,"processConfig"],[224,26,249,26],[224,27,249,27,"config"],[224,33,249,33],[224,37,249,37],[224,39,249,26],[224,40,249,4],[226,0,250,4],[226,9,250,9],[226,13,250,13,"key"],[226,16,250,4],[226,20,250,20,"config"],[226,26,250,4],[226,28,250,28],[227,0,251,8,"parser"],[227,6,251,8,"parser"],[227,12,251,14],[227,13,251,15,"key"],[227,16,251,14],[227,17,251,8],[227,20,251,22,"config"],[227,26,251,28],[227,27,251,29,"key"],[227,30,251,28],[227,31,251,8],[228,0,252,5],[230,0,254,4],[230,11,254,11],[230,21,254,20,"source"],[230,27,254,11],[230,29,254,28,"options"],[230,36,254,11],[230,38,254,37],[231,0,255,8,"options"],[231,6,255,8,"options"],[231,13,255,15],[231,16,255,18,"options"],[231,23,255,25],[231,27,255,29],[231,29,255,8],[232,0,257,8],[232,10,257,12,"context"],[232,17,257,19],[232,20,257,22,"options"],[232,27,257,29],[232,28,257,30,"context"],[232,35,257,22],[232,39,257,41],[232,48,257,8],[233,0,258,8],[233,10,258,12,"ast"],[233,13,258,8],[234,0,260,8,"tokenize"],[234,6,260,8,"tokenize"],[234,14,260,16],[234,15,260,17,"source"],[234,21,260,16],[234,23,260,25,"parser"],[234,29,260,31],[234,30,260,32,"scanner"],[234,37,260,16],[234,38,260,8],[235,0,261,8,"parser"],[235,6,261,8,"parser"],[235,12,261,14],[235,13,261,15,"locationMap"],[235,24,261,8],[235,25,261,27,"setSource"],[235,34,261,8],[235,35,262,12,"source"],[235,41,261,8],[235,43,263,12,"options"],[235,50,263,19],[235,51,263,20,"offset"],[235,57,261,8],[235,59,264,12,"options"],[235,66,264,19],[235,67,264,20,"line"],[235,71,261,8],[235,73,265,12,"options"],[235,80,265,19],[235,81,265,20,"column"],[235,87,261,8],[236,0,268,8,"parser"],[236,6,268,8,"parser"],[236,12,268,14],[236,13,268,15,"filename"],[236,21,268,8],[236,24,268,26,"options"],[236,31,268,33],[236,32,268,34,"filename"],[236,40,268,26],[236,44,268,46],[236,55,268,8],[237,0,269,8,"parser"],[237,6,269,8,"parser"],[237,12,269,14],[237,13,269,15,"needPositions"],[237,26,269,8],[237,29,269,31,"Boolean"],[237,36,269,38],[237,37,269,39,"options"],[237,44,269,46],[237,45,269,47,"positions"],[237,54,269,38],[237,55,269,8],[238,0,270,8,"parser"],[238,6,270,8,"parser"],[238,12,270,14],[238,13,270,15,"onParseError"],[238,25,270,8],[238,28,270,30],[238,35,270,37,"options"],[238,42,270,44],[238,43,270,45,"onParseError"],[238,55,270,30],[238,60,270,62],[238,70,270,30],[238,73,270,75,"options"],[238,80,270,82],[238,81,270,83,"onParseError"],[238,93,270,30],[238,96,270,98,"noop"],[238,100,270,8],[239,0,271,8,"parser"],[239,6,271,8,"parser"],[239,12,271,14],[239,13,271,15,"onParseErrorThrow"],[239,30,271,8],[239,33,271,35],[239,38,271,8],[240,0,272,8,"parser"],[240,6,272,8,"parser"],[240,12,272,14],[240,13,272,15,"parseAtrulePrelude"],[240,31,272,8],[240,34,272,36],[240,58,272,60,"options"],[240,65,272,36],[240,68,272,70,"Boolean"],[240,75,272,77],[240,76,272,78,"options"],[240,83,272,85],[240,84,272,86,"parseAtrulePrelude"],[240,102,272,77],[240,103,272,36],[240,106,272,108],[240,110,272,8],[241,0,273,8,"parser"],[241,6,273,8,"parser"],[241,12,273,14],[241,13,273,15,"parseRulePrelude"],[241,29,273,8],[241,32,273,34],[241,54,273,56,"options"],[241,61,273,34],[241,64,273,66,"Boolean"],[241,71,273,73],[241,72,273,74,"options"],[241,79,273,81],[241,80,273,82,"parseRulePrelude"],[241,96,273,73],[241,97,273,34],[241,100,273,102],[241,104,273,8],[242,0,274,8,"parser"],[242,6,274,8,"parser"],[242,12,274,14],[242,13,274,15,"parseValue"],[242,23,274,8],[242,26,274,28],[242,42,274,44,"options"],[242,49,274,28],[242,52,274,54,"Boolean"],[242,59,274,61],[242,60,274,62,"options"],[242,67,274,69],[242,68,274,70,"parseValue"],[242,78,274,61],[242,79,274,28],[242,82,274,84],[242,86,274,8],[243,0,275,8,"parser"],[243,6,275,8,"parser"],[243,12,275,14],[243,13,275,15,"parseCustomProperty"],[243,32,275,8],[243,35,275,37],[243,60,275,62,"options"],[243,67,275,37],[243,70,275,72,"Boolean"],[243,77,275,79],[243,78,275,80,"options"],[243,85,275,87],[243,86,275,88,"parseCustomProperty"],[243,105,275,79],[243,106,275,37],[243,109,275,111],[243,114,275,8],[245,0,277,8],[245,10,277,12],[245,11,277,13,"parser"],[245,17,277,19],[245,18,277,20,"context"],[245,25,277,13],[245,26,277,28,"hasOwnProperty"],[245,40,277,13],[245,41,277,43,"context"],[245,48,277,13],[245,49,277,8],[245,51,277,53],[246,0,278,12],[246,14,278,18],[246,18,278,22,"Error"],[246,23,278,18],[246,24,278,28],[246,46,278,50,"context"],[246,53,278,28],[246,56,278,60],[246,59,278,18],[246,60,278,12],[247,0,279,9],[249,0,281,8,"ast"],[249,6,281,8,"ast"],[249,9,281,11],[249,12,281,14,"parser"],[249,18,281,20],[249,19,281,21,"context"],[249,26,281,14],[249,27,281,29,"context"],[249,34,281,14],[249,36,281,38,"call"],[249,40,281,14],[249,41,281,43,"parser"],[249,47,281,14],[249,49,281,51,"options"],[249,56,281,14],[249,57,281,8],[251,0,283,8],[251,10,283,12],[251,11,283,13,"parser"],[251,17,283,19],[251,18,283,20,"scanner"],[251,25,283,13],[251,26,283,28,"eof"],[251,29,283,8],[251,31,283,33],[252,0,284,12,"parser"],[252,8,284,12,"parser"],[252,14,284,18],[252,15,284,19,"error"],[252,20,284,12],[253,0,285,9],[255,0,287,8],[255,13,287,15,"ast"],[255,16,287,8],[256,0,288,5],[256,5,254,4],[257,0,289,1],[257,3,86,0]]},"type":"js/module"}]}