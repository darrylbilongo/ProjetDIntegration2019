{"dependencies":[{"name":"./util","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var util = _$$_REQUIRE(_dependencyMap[0], \"./util\");\n\n  function generatedPositionAfter(mappingA, mappingB) {\n    var lineA = mappingA.generatedLine;\n    var lineB = mappingB.generatedLine;\n    var columnA = mappingA.generatedColumn;\n    var columnB = mappingB.generatedColumn;\n    return lineB > lineA || lineB == lineA && columnB >= columnA || util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n  }\n\n  function MappingList() {\n    this._array = [];\n    this._sorted = true;\n    this._last = {\n      generatedLine: -1,\n      generatedColumn: 0\n    };\n  }\n\n  MappingList.prototype.unsortedForEach = function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n  MappingList.prototype.add = function MappingList_add(aMapping) {\n    if (generatedPositionAfter(this._last, aMapping)) {\n      this._last = aMapping;\n\n      this._array.push(aMapping);\n    } else {\n      this._sorted = false;\n\n      this._array.push(aMapping);\n    }\n  };\n\n  MappingList.prototype.toArray = function MappingList_toArray() {\n    if (!this._sorted) {\n      this._array.sort(util.compareByGeneratedPositionsInflated);\n\n      this._sorted = true;\n    }\n\n    return this._array;\n  };\n\n  exports.MappingList = MappingList;\n});","map":[[2,0,8,0],[2,6,8,4,"util"],[2,10,8,8],[2,13,8,11,"require"],[2,24,8,18],[2,53,8,0],[4,0,14,0],[4,11,14,9,"generatedPositionAfter"],[4,33,14,0],[4,34,14,32,"mappingA"],[4,42,14,0],[4,44,14,42,"mappingB"],[4,52,14,0],[4,54,14,52],[5,0,16,2],[5,8,16,6,"lineA"],[5,13,16,11],[5,16,16,14,"mappingA"],[5,24,16,22],[5,25,16,23,"generatedLine"],[5,38,16,2],[6,0,17,2],[6,8,17,6,"lineB"],[6,13,17,11],[6,16,17,14,"mappingB"],[6,24,17,22],[6,25,17,23,"generatedLine"],[6,38,17,2],[7,0,18,2],[7,8,18,6,"columnA"],[7,15,18,13],[7,18,18,16,"mappingA"],[7,26,18,24],[7,27,18,25,"generatedColumn"],[7,42,18,2],[8,0,19,2],[8,8,19,6,"columnB"],[8,15,19,13],[8,18,19,16,"mappingB"],[8,26,19,24],[8,27,19,25,"generatedColumn"],[8,42,19,2],[9,0,20,2],[9,11,20,9,"lineB"],[9,16,20,14],[9,19,20,17,"lineA"],[9,24,20,9],[9,28,20,26,"lineB"],[9,33,20,31],[9,37,20,35,"lineA"],[9,42,20,26],[9,46,20,44,"columnB"],[9,53,20,51],[9,57,20,55,"columnA"],[9,64,20,9],[9,68,21,9,"util"],[9,72,21,13],[9,73,21,14,"compareByGeneratedPositionsInflated"],[9,108,21,9],[9,109,21,50,"mappingA"],[9,117,21,9],[9,119,21,60,"mappingB"],[9,127,21,9],[9,132,21,73],[9,133,20,2],[10,0,22,1],[12,0,29,0],[12,11,29,9,"MappingList"],[12,22,29,0],[12,25,29,23],[13,0,30,2],[13,9,30,7,"_array"],[13,15,30,2],[13,18,30,16],[13,20,30,2],[14,0,31,2],[14,9,31,7,"_sorted"],[14,16,31,2],[14,19,31,17],[14,23,31,2],[15,0,33,2],[15,9,33,7,"_last"],[15,14,33,2],[15,17,33,15],[16,0,33,16,"generatedLine"],[16,6,33,16,"generatedLine"],[16,19,33,29],[16,21,33,31],[16,22,33,32],[16,23,33,15],[17,0,33,35,"generatedColumn"],[17,6,33,35,"generatedColumn"],[17,21,33,50],[17,23,33,52],[18,0,33,15],[18,5,33,2],[19,0,34,1],[21,0,42,0,"MappingList"],[21,2,42,0,"MappingList"],[21,13,42,11],[21,14,42,12,"prototype"],[21,23,42,0],[21,24,42,22,"unsortedForEach"],[21,39,42,0],[21,42,43,2],[21,51,43,11,"MappingList_forEach"],[21,70,43,2],[21,71,43,31,"aCallback"],[21,80,43,2],[21,82,43,42,"aThisArg"],[21,90,43,2],[21,92,43,52],[22,0,44,4],[22,9,44,9,"_array"],[22,15,44,4],[22,16,44,16,"forEach"],[22,23,44,4],[22,24,44,24,"aCallback"],[22,33,44,4],[22,35,44,35,"aThisArg"],[22,43,44,4],[23,0,45,3],[23,3,42,0],[25,0,52,0,"MappingList"],[25,2,52,0,"MappingList"],[25,13,52,11],[25,14,52,12,"prototype"],[25,23,52,0],[25,24,52,22,"add"],[25,27,52,0],[25,30,52,28],[25,39,52,37,"MappingList_add"],[25,54,52,28],[25,55,52,53,"aMapping"],[25,63,52,28],[25,65,52,63],[26,0,53,2],[26,8,53,6,"generatedPositionAfter"],[26,30,53,28],[26,31,53,29],[26,36,53,34,"_last"],[26,41,53,28],[26,43,53,41,"aMapping"],[26,51,53,28],[26,52,53,2],[26,54,53,52],[27,0,54,4],[27,11,54,9,"_last"],[27,16,54,4],[27,19,54,17,"aMapping"],[27,27,54,4],[29,0,55,4],[29,11,55,9,"_array"],[29,17,55,4],[29,18,55,16,"push"],[29,22,55,4],[29,23,55,21,"aMapping"],[29,31,55,4],[30,0,56,3],[30,5,53,2],[30,11,56,9],[31,0,57,4],[31,11,57,9,"_sorted"],[31,18,57,4],[31,21,57,19],[31,26,57,4],[33,0,58,4],[33,11,58,9,"_array"],[33,17,58,4],[33,18,58,16,"push"],[33,22,58,4],[33,23,58,21,"aMapping"],[33,31,58,4],[34,0,59,3],[35,0,60,1],[35,3,52,0],[37,0,71,0,"MappingList"],[37,2,71,0,"MappingList"],[37,13,71,11],[37,14,71,12,"prototype"],[37,23,71,0],[37,24,71,22,"toArray"],[37,31,71,0],[37,34,71,32],[37,43,71,41,"MappingList_toArray"],[37,62,71,32],[37,65,71,63],[38,0,72,2],[38,8,72,6],[38,9,72,7],[38,14,72,12,"_sorted"],[38,21,72,2],[38,23,72,21],[39,0,73,4],[39,11,73,9,"_array"],[39,17,73,4],[39,18,73,16,"sort"],[39,22,73,4],[39,23,73,21,"util"],[39,27,73,25],[39,28,73,26,"compareByGeneratedPositionsInflated"],[39,63,73,4],[41,0,74,4],[41,11,74,9,"_sorted"],[41,18,74,4],[41,21,74,19],[41,25,74,4],[42,0,75,3],[44,0,76,2],[44,11,76,9],[44,16,76,14,"_array"],[44,22,76,2],[45,0,77,1],[45,3,71,0],[47,0,79,0,"exports"],[47,2,79,0,"exports"],[47,9,79,7],[47,10,79,8,"MappingList"],[47,21,79,0],[47,24,79,22,"MappingList"],[47,35,79,0]]},"type":"js/module"}]}