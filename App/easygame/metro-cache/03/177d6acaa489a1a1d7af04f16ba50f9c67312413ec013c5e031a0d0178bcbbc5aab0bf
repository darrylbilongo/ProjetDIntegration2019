{"dependencies":[{"name":"./maps/xml.json","data":{"isAsync":false}},{"name":"./maps/entities.json","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var __importDefault = this && this.__importDefault || function (mod) {\n    return mod && mod.__esModule ? mod : {\n      \"default\": mod\n    };\n  };\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var xml_json_1 = __importDefault(_$$_REQUIRE(_dependencyMap[0], \"./maps/xml.json\"));\n\n  var inverseXML = getInverseObj(xml_json_1.default);\n  var xmlReplacer = getInverseReplacer(inverseXML);\n  exports.encodeXML = getInverse(inverseXML, xmlReplacer);\n\n  var entities_json_1 = __importDefault(_$$_REQUIRE(_dependencyMap[1], \"./maps/entities.json\"));\n\n  var inverseHTML = getInverseObj(entities_json_1.default);\n  var htmlReplacer = getInverseReplacer(inverseHTML);\n  exports.encodeHTML = getInverse(inverseHTML, htmlReplacer);\n\n  function getInverseObj(obj) {\n    return Object.keys(obj).sort().reduce(function (inverse, name) {\n      inverse[obj[name]] = \"&\" + name + \";\";\n      return inverse;\n    }, {});\n  }\n\n  function getInverseReplacer(inverse) {\n    var single = [];\n    var multiple = [];\n    Object.keys(inverse).forEach(function (k) {\n      return k.length === 1 ? single.push(\"\\\\\" + k) : multiple.push(k);\n    });\n    multiple.unshift(\"[\" + single.join(\"\") + \"]\");\n    return new RegExp(multiple.join(\"|\"), \"g\");\n  }\n\n  var reNonASCII = /[^\\0-\\x7F]/g;\n  var reAstralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\n  function singleCharReplacer(c) {\n    return \"&#x\" + c.charCodeAt(0).toString(16).toUpperCase() + \";\";\n  }\n\n  function astralReplacer(c, _) {\n    var high = c.charCodeAt(0);\n    var low = c.charCodeAt(1);\n    var codePoint = (high - 0xd800) * 0x400 + low - 0xdc00 + 0x10000;\n    return \"&#x\" + codePoint.toString(16).toUpperCase() + \";\";\n  }\n\n  function getInverse(inverse, re) {\n    return function (data) {\n      return data.replace(re, function (name) {\n        return inverse[name];\n      }).replace(reAstralSymbols, astralReplacer).replace(reNonASCII, singleCharReplacer);\n    };\n  }\n\n  var reXmlChars = getInverseReplacer(inverseXML);\n\n  function escape(data) {\n    return data.replace(reXmlChars, singleCharReplacer).replace(reAstralSymbols, astralReplacer).replace(reNonASCII, singleCharReplacer);\n  }\n\n  exports.escape = escape;\n});","map":[[2,0,1,0],[4,0,2,0],[4,6,2,4,"__importDefault"],[4,21,2,19],[4,24,2,23],[4,32,2,31],[4,37,2,36,"__importDefault"],[4,52,2,22],[4,56,2,56],[4,66,2,66,"mod"],[4,69,2,56],[4,71,2,71],[5,0,3,4],[5,11,3,12,"mod"],[5,14,3,15],[5,18,3,19,"mod"],[5,21,3,22],[5,22,3,23,"__esModule"],[5,32,3,11],[5,35,3,37,"mod"],[5,38,3,11],[5,41,3,43],[6,0,3,45],[6,17,3,56,"mod"],[7,0,3,43],[7,5,3,4],[8,0,4,1],[8,3,2,0],[10,0,5,0,"Object"],[10,2,5,0,"Object"],[10,8,5,6],[10,9,5,7,"defineProperty"],[10,23,5,0],[10,24,5,22,"exports"],[10,31,5,0],[10,33,5,31],[10,45,5,0],[10,47,5,45],[11,0,5,47,"value"],[11,4,5,47,"value"],[11,9,5,52],[11,11,5,54],[12,0,5,45],[12,3,5,0],[14,0,6,0],[14,6,6,4,"xml_json_1"],[14,16,6,14],[14,19,6,17,"__importDefault"],[14,34,6,32],[14,35,6,33,"require"],[14,46,6,40],[14,84,6,32],[14,85,6,0],[16,0,7,0],[16,6,7,4,"inverseXML"],[16,16,7,14],[16,19,7,17,"getInverseObj"],[16,32,7,30],[16,33,7,31,"xml_json_1"],[16,43,7,41],[16,44,7,42,"default"],[16,51,7,30],[16,52,7,0],[17,0,8,0],[17,6,8,4,"xmlReplacer"],[17,17,8,15],[17,20,8,18,"getInverseReplacer"],[17,38,8,36],[17,39,8,37,"inverseXML"],[17,49,8,36],[17,50,8,0],[18,0,9,0,"exports"],[18,2,9,0,"exports"],[18,9,9,7],[18,10,9,8,"encodeXML"],[18,19,9,0],[18,22,9,20,"getInverse"],[18,32,9,30],[18,33,9,31,"inverseXML"],[18,43,9,30],[18,45,9,43,"xmlReplacer"],[18,56,9,30],[18,57,9,0],[20,0,10,0],[20,6,10,4,"entities_json_1"],[20,21,10,19],[20,24,10,22,"__importDefault"],[20,39,10,37],[20,40,10,38,"require"],[20,51,10,45],[20,94,10,37],[20,95,10,0],[22,0,11,0],[22,6,11,4,"inverseHTML"],[22,17,11,15],[22,20,11,18,"getInverseObj"],[22,33,11,31],[22,34,11,32,"entities_json_1"],[22,49,11,47],[22,50,11,48,"default"],[22,57,11,31],[22,58,11,0],[23,0,12,0],[23,6,12,4,"htmlReplacer"],[23,18,12,16],[23,21,12,19,"getInverseReplacer"],[23,39,12,37],[23,40,12,38,"inverseHTML"],[23,51,12,37],[23,52,12,0],[24,0,13,0,"exports"],[24,2,13,0,"exports"],[24,9,13,7],[24,10,13,8,"encodeHTML"],[24,20,13,0],[24,23,13,21,"getInverse"],[24,33,13,31],[24,34,13,32,"inverseHTML"],[24,45,13,31],[24,47,13,45,"htmlReplacer"],[24,59,13,31],[24,60,13,0],[26,0,14,0],[26,11,14,9,"getInverseObj"],[26,24,14,0],[26,25,14,23,"obj"],[26,28,14,0],[26,30,14,28],[27,0,15,4],[27,11,15,11,"Object"],[27,17,15,17],[27,18,15,18,"keys"],[27,22,15,11],[27,23,15,23,"obj"],[27,26,15,11],[27,28,16,9,"sort"],[27,32,15,11],[27,35,17,9,"reduce"],[27,41,15,11],[27,42,17,16],[27,52,17,26,"inverse"],[27,59,17,16],[27,61,17,35,"name"],[27,65,17,16],[27,67,17,41],[28,0,18,8,"inverse"],[28,6,18,8,"inverse"],[28,13,18,15],[28,14,18,16,"obj"],[28,17,18,19],[28,18,18,20,"name"],[28,22,18,19],[28,23,18,15],[28,24,18,8],[28,27,18,29],[28,33,18,35,"name"],[28,37,18,29],[28,40,18,42],[28,43,18,8],[29,0,19,8],[29,13,19,15,"inverse"],[29,20,19,8],[30,0,20,5],[30,5,15,11],[30,7,20,7],[30,9,15,11],[30,10,15,4],[31,0,21,1],[33,0,22,0],[33,11,22,9,"getInverseReplacer"],[33,29,22,0],[33,30,22,28,"inverse"],[33,37,22,0],[33,39,22,37],[34,0,23,4],[34,8,23,8,"single"],[34,14,23,14],[34,17,23,17],[34,19,23,4],[35,0,24,4],[35,8,24,8,"multiple"],[35,16,24,16],[35,19,24,19],[35,21,24,4],[36,0,25,4,"Object"],[36,4,25,4,"Object"],[36,10,25,10],[36,11,25,11,"keys"],[36,15,25,4],[36,16,25,16,"inverse"],[36,23,25,4],[36,25,25,25,"forEach"],[36,32,25,4],[36,33,25,33],[36,43,25,43,"k"],[36,44,25,33],[36,46,25,46],[37,0,26,8],[37,13,26,15,"k"],[37,14,26,16],[37,15,26,17,"length"],[37,21,26,15],[37,26,26,28],[37,27,26,15],[37,30,28,16,"single"],[37,36,28,22],[37,37,28,23,"push"],[37,41,28,16],[37,42,28,28],[37,49,28,35,"k"],[37,50,28,16],[37,51,26,15],[37,54,30,16,"multiple"],[37,62,30,24],[37,63,30,25,"push"],[37,67,30,16],[37,68,30,30,"k"],[37,69,30,16],[37,70,26,8],[38,0,31,5],[38,5,25,4],[39,0,33,4,"multiple"],[39,4,33,4,"multiple"],[39,12,33,12],[39,13,33,13,"unshift"],[39,20,33,4],[39,21,33,21],[39,27,33,27,"single"],[39,33,33,33],[39,34,33,34,"join"],[39,38,33,27],[39,39,33,39],[39,41,33,27],[39,42,33,21],[39,45,33,45],[39,48,33,4],[40,0,34,4],[40,11,34,11],[40,15,34,15,"RegExp"],[40,21,34,11],[40,22,34,22,"multiple"],[40,30,34,30],[40,31,34,31,"join"],[40,35,34,22],[40,36,34,36],[40,39,34,22],[40,40,34,11],[40,42,34,42],[40,45,34,11],[40,46,34,4],[41,0,35,1],[43,0,36,0],[43,6,36,4,"reNonASCII"],[43,16,36,14],[43,19,36,17],[43,32,36,0],[44,0,37,0],[44,6,37,4,"reAstralSymbols"],[44,21,37,19],[44,24,37,22],[44,57,37,0],[46,0,38,0],[46,11,38,9,"singleCharReplacer"],[46,29,38,0],[46,30,38,28,"c"],[46,31,38,0],[46,33,38,31],[47,0,39,4],[47,11,39,11],[47,19,39,19,"c"],[47,20,39,20],[47,21,40,9,"charCodeAt"],[47,31,39,19],[47,32,40,20],[47,33,39,19],[47,35,41,9,"toString"],[47,43,39,19],[47,44,41,18],[47,46,39,19],[47,48,42,9,"toUpperCase"],[47,59,39,19],[47,61,39,11],[47,64,42,25],[47,67,39,4],[48,0,43,1],[50,0,45,0],[50,11,45,9,"astralReplacer"],[50,25,45,0],[50,26,45,24,"c"],[50,27,45,0],[50,29,45,27,"_"],[50,30,45,0],[50,32,45,30],[51,0,47,4],[51,8,47,8,"high"],[51,12,47,12],[51,15,47,15,"c"],[51,16,47,16],[51,17,47,17,"charCodeAt"],[51,27,47,15],[51,28,47,28],[51,29,47,15],[51,30,47,4],[52,0,48,4],[52,8,48,8,"low"],[52,11,48,11],[52,14,48,14,"c"],[52,15,48,15],[52,16,48,16,"charCodeAt"],[52,26,48,14],[52,27,48,27],[52,28,48,14],[52,29,48,4],[53,0,49,4],[53,8,49,8,"codePoint"],[53,17,49,17],[53,20,49,20],[53,21,49,21,"high"],[53,25,49,25],[53,28,49,28],[53,34,49,20],[53,38,49,38],[53,43,49,20],[53,46,49,46,"low"],[53,49,49,20],[53,52,49,52],[53,58,49,20],[53,61,49,61],[53,68,49,4],[54,0,50,4],[54,11,50,11],[54,19,50,19,"codePoint"],[54,28,50,28],[54,29,50,29,"toString"],[54,37,50,19],[54,38,50,38],[54,40,50,19],[54,42,50,42,"toUpperCase"],[54,53,50,19],[54,55,50,11],[54,58,50,58],[54,61,50,4],[55,0,51,1],[57,0,52,0],[57,11,52,9,"getInverse"],[57,21,52,0],[57,22,52,20,"inverse"],[57,29,52,0],[57,31,52,29,"re"],[57,33,52,0],[57,35,52,33],[58,0,53,4],[58,11,53,11],[58,21,53,21,"data"],[58,25,53,11],[58,27,53,27],[59,0,54,8],[59,13,54,15,"data"],[59,17,54,19],[59,18,55,13,"replace"],[59,25,54,15],[59,26,55,21,"re"],[59,28,54,15],[59,30,55,25],[59,40,55,35,"name"],[59,44,55,25],[59,46,55,41],[60,0,55,43],[60,15,55,50,"inverse"],[60,22,55,57],[60,23,55,58,"name"],[60,27,55,57],[60,28,55,43],[61,0,55,66],[61,7,54,15],[61,9,56,13,"replace"],[61,16,54,15],[61,17,56,21,"reAstralSymbols"],[61,32,54,15],[61,34,56,38,"astralReplacer"],[61,48,54,15],[61,50,57,13,"replace"],[61,57,54,15],[61,58,57,21,"reNonASCII"],[61,68,54,15],[61,70,57,33,"singleCharReplacer"],[61,88,54,15],[61,89,54,8],[62,0,58,5],[62,5,53,4],[63,0,59,1],[65,0,60,0],[65,6,60,4,"reXmlChars"],[65,16,60,14],[65,19,60,17,"getInverseReplacer"],[65,37,60,35],[65,38,60,36,"inverseXML"],[65,48,60,35],[65,49,60,0],[67,0,61,0],[67,11,61,9,"escape"],[67,17,61,0],[67,18,61,16,"data"],[67,22,61,0],[67,24,61,22],[68,0,62,4],[68,11,62,11,"data"],[68,15,62,15],[68,16,63,9,"replace"],[68,23,62,11],[68,24,63,17,"reXmlChars"],[68,34,62,11],[68,36,63,29,"singleCharReplacer"],[68,54,62,11],[68,56,64,9,"replace"],[68,63,62,11],[68,64,64,17,"reAstralSymbols"],[68,79,62,11],[68,81,64,34,"astralReplacer"],[68,95,62,11],[68,97,65,9,"replace"],[68,104,62,11],[68,105,65,17,"reNonASCII"],[68,115,62,11],[68,117,65,29,"singleCharReplacer"],[68,135,62,11],[68,136,62,4],[69,0,66,1],[71,0,67,0,"exports"],[71,2,67,0,"exports"],[71,9,67,7],[71,10,67,8,"escape"],[71,16,67,0],[71,19,67,17,"escape"],[71,25,67,0]]},"type":"js/module"}]}