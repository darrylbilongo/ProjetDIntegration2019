{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./../react-transform-hmr/lib/index.js","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"fbjs/lib/areEqual","data":{"isAsync":false}},{"name":"./RNGestureHandlerModule","data":{"isAsync":false}},{"name":"./State","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = createHandler;\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/inherits\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"./../react-transform-hmr/lib/index.js\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[9], \"react-native\");\n\n  var _areEqual = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"fbjs/lib/areEqual\"));\n\n  var _RNGestureHandlerModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"./RNGestureHandlerModule\"));\n\n  var _State = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"./State\"));\n\n  var _stateToPropMappings;\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var _components = {\n    Handler: {\n      displayName: \"Handler\",\n      isInFunction: true\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"node_modules/react-native-gesture-handler/createHandler.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var UIManager = _reactNative.NativeModules.UIManager;\n  var oldSetJSResponder = UIManager.setJSResponder,\n      oldClearJSResponder = UIManager.clearJSResponder;\n\n  UIManager.setJSResponder = function (tag, blockNativeResponder) {\n    _RNGestureHandlerModule.default.handleSetJSResponder(tag, blockNativeResponder);\n\n    oldSetJSResponder(tag, blockNativeResponder);\n  };\n\n  UIManager.clearJSResponder = function () {\n    _RNGestureHandlerModule.default.handleClearJSResponder();\n\n    oldClearJSResponder();\n  };\n\n  UIManager.genericDirectEventTypes = _objectSpread({}, UIManager.genericDirectEventTypes, {\n    onGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    onGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    }\n  });\n  var handlerTag = 1;\n  var handlerIDToTag = {};\n\n  function isConfigParam(param, name) {\n    return param !== undefined && (param !== Object(param) || !('__isNative' in param)) && name !== 'onHandlerStateChange' && name !== 'onGestureEvent';\n  }\n\n  function filterConfig(props, validProps) {\n    var defaults = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var res = _objectSpread({}, defaults);\n\n    Object.keys(validProps).forEach(function (key) {\n      var value = props[key];\n\n      if (isConfigParam(value, key)) {\n        var _value = props[key];\n\n        if (key === 'simultaneousHandlers' || key === 'waitFor') {\n          _value = transformIntoHandlerTags(props[key]);\n        } else if (key === 'hitSlop') {\n          if (typeof _value !== 'object') {\n            _value = {\n              top: _value,\n              left: _value,\n              bottom: _value,\n              right: _value\n            };\n          }\n        }\n\n        res[key] = _value;\n      }\n    });\n    return res;\n  }\n\n  function transformIntoHandlerTags(handlerIDs) {\n    if (!Array.isArray(handlerIDs)) {\n      handlerIDs = [handlerIDs];\n    }\n\n    return handlerIDs.map(function (handlerID) {\n      return handlerIDToTag[handlerID] || handlerID.current && handlerID.current._handlerTag || -1;\n    }).filter(function (handlerTag) {\n      return handlerTag > 0;\n    });\n  }\n\n  function hasUnresolvedRefs(props) {\n    var extract = function extract(refs) {\n      if (!Array.isArray(refs)) {\n        return refs && refs.current === null;\n      }\n\n      return refs.some(function (r) {\n        return r && r.current === null;\n      });\n    };\n\n    return extract(props['simultaneousHandlers']) || extract(props['waitFor']);\n  }\n\n  var stateToPropMappings = (_stateToPropMappings = {}, (0, _defineProperty2.default)(_stateToPropMappings, _State.default.BEGAN, 'onBegan'), (0, _defineProperty2.default)(_stateToPropMappings, _State.default.FAILED, 'onFailed'), (0, _defineProperty2.default)(_stateToPropMappings, _State.default.CANCELLED, 'onCancelled'), (0, _defineProperty2.default)(_stateToPropMappings, _State.default.ACTIVE, 'onActivated'), (0, _defineProperty2.default)(_stateToPropMappings, _State.default.END, 'onEnded'), _stateToPropMappings);\n\n  function createHandler(handlerName) {\n    var propTypes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var transformProps = arguments.length > 3 ? arguments[3] : undefined;\n    var customNativeProps = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n    var Handler = function (_React$Component) {\n      (0, _inherits2.default)(Handler, _React$Component);\n\n      function Handler(props) {\n        var _this;\n\n        (0, _classCallCheck2.default)(this, Handler);\n        _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Handler).call(this, props));\n\n        _this._onGestureHandlerEvent = function (event) {\n          if (event.nativeEvent.handlerTag === _this._handlerTag) {\n            _this.props.onGestureEvent && _this.props.onGestureEvent(event);\n          } else {\n            _this.props.onGestureHandlerEvent && _this.props.onGestureHandlerEvent(event);\n          }\n        };\n\n        _this._onGestureHandlerStateChange = function (event) {\n          if (event.nativeEvent.handlerTag === _this._handlerTag) {\n            _this.props.onHandlerStateChange && _this.props.onHandlerStateChange(event);\n            var stateEventName = stateToPropMappings[event.nativeEvent.state];\n\n            if (typeof _this.props[stateEventName] === 'function') {\n              _this.props[stateEventName](event);\n            }\n          } else {\n            _this.props.onGestureHandlerStateChange && _this.props.onGestureHandlerStateChange(event);\n          }\n        };\n\n        _this._refHandler = function (node) {\n          _this._viewNode = node;\n\n          var child = _react.default.Children.only(_this.props.children);\n\n          var ref = child.ref;\n\n          if (ref !== null) {\n            if (typeof ref === 'function') {\n              ref(node);\n            } else {\n              ref.current = node;\n            }\n          }\n        };\n\n        _this._createGestureHandler = function (newConfig) {\n          _this._config = newConfig;\n\n          _RNGestureHandlerModule.default.createGestureHandler(handlerName, _this._handlerTag, newConfig);\n        };\n\n        _this._attachGestureHandler = function (newViewTag) {\n          _this._viewTag = newViewTag;\n\n          _RNGestureHandlerModule.default.attachGestureHandler(_this._handlerTag, newViewTag);\n        };\n\n        _this._updateGestureHandler = function (newConfig) {\n          _this._config = newConfig;\n\n          _RNGestureHandlerModule.default.updateGestureHandler(_this._handlerTag, newConfig);\n        };\n\n        _this._handlerTag = handlerTag++;\n        _this._config = {};\n\n        if (props.id) {\n          if (handlerIDToTag[props.id] !== undefined) {\n            throw new Error(\"Handler with ID \\\"\" + props.id + \"\\\" already registered\");\n          }\n\n          handlerIDToTag[props.id] = _this._handlerTag;\n        }\n\n        return _this;\n      }\n\n      (0, _createClass2.default)(Handler, [{\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          _RNGestureHandlerModule.default.dropGestureHandler(this._handlerTag);\n\n          if (this._updateEnqueued) {\n            clearImmediate(this._updateEnqueued);\n          }\n\n          if (this.props.id) {\n            delete handlerIDToTag[this.props.id];\n          }\n        }\n      }, {\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var _this2 = this;\n\n          if (hasUnresolvedRefs(this.props)) {\n            this._updateEnqueued = setImmediate(function () {\n              _this2._updateEnqueued = null;\n\n              _this2._update();\n            });\n          }\n\n          this._createGestureHandler(filterConfig(transformProps ? transformProps(this.props) : this.props, _objectSpread({}, this.constructor.propTypes, {}, customNativeProps), config));\n\n          this._attachGestureHandler((0, _reactNative.findNodeHandle)(this._viewNode));\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function componentDidUpdate() {\n          var viewTag = (0, _reactNative.findNodeHandle)(this._viewNode);\n\n          if (this._viewTag !== viewTag) {\n            this._attachGestureHandler(viewTag);\n          }\n\n          this._update();\n        }\n      }, {\n        key: \"_update\",\n        value: function _update() {\n          var newConfig = filterConfig(transformProps ? transformProps(this.props) : this.props, _objectSpread({}, this.constructor.propTypes, {}, customNativeProps), config);\n\n          if (!(0, _areEqual.default)(this._config, newConfig)) {\n            this._updateGestureHandler(newConfig);\n          }\n        }\n      }, {\n        key: \"setNativeProps\",\n        value: function setNativeProps(updates) {\n          var mergedProps = _objectSpread({}, this.props, {}, updates);\n\n          var newConfig = filterConfig(transformProps ? transformProps(mergedProps) : mergedProps, _objectSpread({}, this.constructor.propTypes, {}, customNativeProps), config);\n\n          this._updateGestureHandler(newConfig);\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var gestureEventHandler = this._onGestureHandlerEvent;\n          var _this$props = this.props,\n              onGestureEvent = _this$props.onGestureEvent,\n              onGestureHandlerEvent = _this$props.onGestureHandlerEvent;\n\n          if (onGestureEvent && typeof onGestureEvent !== 'function') {\n            if (onGestureHandlerEvent) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n\n            gestureEventHandler = this.props.onGestureEvent;\n          } else {\n            if (onGestureHandlerEvent && typeof onGestureHandlerEvent !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n\n          var gestureStateEventHandler = this._onGestureHandlerStateChange;\n          var _this$props2 = this.props,\n              onHandlerStateChange = _this$props2.onHandlerStateChange,\n              onGestureHandlerStateChange = _this$props2.onGestureHandlerStateChange;\n\n          if (onHandlerStateChange && typeof onHandlerStateChange !== 'function') {\n            if (onGestureHandlerStateChange) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n\n            gestureStateEventHandler = this.props.onHandlerStateChange;\n          } else {\n            if (onGestureHandlerStateChange && typeof onGestureHandlerStateChange !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n\n          var child = _react.default.Children.only(this.props.children);\n\n          var grandChildren = child.props.children;\n\n          if (_reactNative.Touchable.TOUCH_TARGET_DEBUG && child.type && (child.type === 'RNGestureHandlerButton' || child.type.name === 'View' || child.type.displayName === 'View')) {\n            grandChildren = _react.default.Children.toArray(grandChildren);\n            grandChildren.push(_reactNative.Touchable.renderDebugView({\n              color: 'mediumspringgreen',\n              hitSlop: child.props.hitSlop\n            }));\n          }\n\n          return _react.default.cloneElement(child, {\n            ref: this._refHandler,\n            collapsable: false,\n            onGestureHandlerEvent: gestureEventHandler,\n            onGestureHandlerStateChange: gestureStateEventHandler\n          }, grandChildren);\n        }\n      }]);\n      return Handler;\n    }(_react.default.Component);\n\n    Handler.displayName = handlerName;\n    Handler.propTypes = propTypes;\n    Handler = _wrapComponent(\"Handler\")(Handler);\n    return Handler;\n  }\n});","map":[[21,0,1,0],[25,0,2,0],[27,0,3,0],[29,0,4,0],[31,0,6,0],[59,6,8,8,"UIManager"],[59,15],[59,18,8,22,"NativeModules"],[59,44],[59,45,8,8,"UIManager"],[59,54],[60,6,12,18,"oldSetJSResponder"],[60,23],[60,26,14,4,"UIManager"],[60,35],[60,36,12,2,"setJSResponder"],[60,50],[61,6,13,20,"oldClearJSResponder"],[61,25],[61,28,14,4,"UIManager"],[61,37],[61,38,13,2,"clearJSResponder"],[61,54],[63,0,15,0,"UIManager"],[63,2,15,0,"UIManager"],[63,11,15,9],[63,12,15,10,"setJSResponder"],[63,26,15,0],[63,29,15,27],[63,39,15,28,"tag"],[63,42,15,27],[63,44,15,33,"blockNativeResponder"],[63,64,15,27],[63,66,15,58],[64,0,16,2,"RNGestureHandlerModule"],[64,36,16,25,"handleSetJSResponder"],[64,56,16,2],[64,57,16,46,"tag"],[64,60,16,2],[64,62,16,51,"blockNativeResponder"],[64,82,16,2],[66,0,17,2,"oldSetJSResponder"],[66,4,17,2,"oldSetJSResponder"],[66,21,17,19],[66,22,17,20,"tag"],[66,25,17,19],[66,27,17,25,"blockNativeResponder"],[66,47,17,19],[66,48,17,2],[67,0,18,1],[67,3,15,0],[69,0,19,0,"UIManager"],[69,2,19,0,"UIManager"],[69,11,19,9],[69,12,19,10,"clearJSResponder"],[69,28,19,0],[69,31,19,29],[69,43,19,35],[70,0,20,2,"RNGestureHandlerModule"],[70,36,20,25,"handleClearJSResponder"],[70,58,20,2],[72,0,21,2,"oldClearJSResponder"],[72,4,21,2,"oldClearJSResponder"],[72,23,21,21],[73,0,22,1],[73,3,19,0],[75,0,28,0,"UIManager"],[75,2,28,0,"UIManager"],[75,11,28,9],[75,12,28,10,"genericDirectEventTypes"],[75,35,28,0],[75,56,29,5,"UIManager"],[75,65,29,14],[75,66,29,15,"genericDirectEventTypes"],[75,89,28,0],[76,0,30,2,"onGestureHandlerEvent"],[76,4,30,2,"onGestureHandlerEvent"],[76,25,30,23],[76,27,30,25],[77,0,30,27,"registrationName"],[77,6,30,27,"registrationName"],[77,22,30,43],[77,24,30,45],[78,0,30,25],[78,5,28,0],[79,0,31,2,"onGestureHandlerStateChange"],[79,4,31,2,"onGestureHandlerStateChange"],[79,31,31,29],[79,33,31,31],[80,0,32,4,"registrationName"],[80,6,32,4,"registrationName"],[80,22,32,20],[80,24,32,22],[81,0,31,31],[82,0,28,0],[83,0,36,0],[83,6,36,4,"handlerTag"],[83,16,36,14],[83,19,36,17],[83,20,36,0],[84,0,37,0],[84,6,37,6,"handlerIDToTag"],[84,20,37,20],[84,23,37,23],[84,25,37,0],[86,0,39,0],[86,11,39,9,"isConfigParam"],[86,24,39,0],[86,25,39,23,"param"],[86,30,39,0],[86,32,39,30,"name"],[86,36,39,0],[86,38,39,36],[87,0,42,2],[87,11,43,4,"param"],[87,16,43,9],[87,21,43,14,"undefined"],[87,30,43,4],[87,35,44,5,"param"],[87,40,44,10],[87,45,44,15,"Object"],[87,51,44,21],[87,52,44,22,"param"],[87,57,44,21],[87,58,44,5],[87,62,44,32],[87,64,44,34],[87,80,44,50,"param"],[87,85,44,32],[87,86,43,4],[87,91,45,4,"name"],[87,95,45,8],[87,100,45,13],[87,122,43,4],[87,126,46,4,"name"],[87,130,46,8],[87,135,46,13],[87,151,42,2],[88,0,48,1],[90,0,50,0],[90,11,50,9,"filterConfig"],[90,23,50,0],[90,24,50,22,"props"],[90,29,50,0],[90,31,50,29,"validProps"],[90,41,50,0],[90,43,50,56],[91,0,50,56],[91,8,50,41,"defaults"],[91,16,50,56],[91,87,50,52],[91,89,50,56],[93,0,51,2],[93,8,51,8,"res"],[93,11,51,11],[93,32,51,19,"defaults"],[93,40,51,11],[93,41,51,2],[95,0,52,2,"Object"],[95,4,52,2,"Object"],[95,10,52,8],[95,11,52,9,"keys"],[95,15,52,2],[95,16,52,14,"validProps"],[95,26,52,2],[95,28,52,26,"forEach"],[95,35,52,2],[95,36,52,34],[95,46,52,34,"key"],[95,49,52,37],[95,51,52,41],[96,0,53,4],[96,10,53,10,"value"],[96,15,53,15],[96,18,53,18,"props"],[96,23,53,23],[96,24,53,24,"key"],[96,27,53,23],[96,28,53,4],[98,0,54,4],[98,10,54,8,"isConfigParam"],[98,23,54,21],[98,24,54,22,"value"],[98,29,54,21],[98,31,54,29,"key"],[98,34,54,21],[98,35,54,4],[98,37,54,35],[99,0,55,6],[99,12,55,10,"value"],[99,18,55,15],[99,21,55,18,"props"],[99,26,55,23],[99,27,55,24,"key"],[99,30,55,23],[99,31,55,6],[101,0,56,6],[101,12,56,10,"key"],[101,15,56,13],[101,20,56,18],[101,42,56,10],[101,46,56,44,"key"],[101,49,56,47],[101,54,56,52],[101,63,56,6],[101,65,56,63],[102,0,57,8,"value"],[102,10,57,8,"value"],[102,16,57,13],[102,19,57,16,"transformIntoHandlerTags"],[102,43,57,40],[102,44,57,41,"props"],[102,49,57,46],[102,50,57,47,"key"],[102,53,57,46],[102,54,57,40],[102,55,57,8],[103,0,58,7],[103,9,56,6],[103,15,58,13],[103,19,58,17,"key"],[103,22,58,20],[103,27,58,25],[103,36,58,13],[103,38,58,36],[104,0,59,8],[104,14,59,12],[104,21,59,19,"value"],[104,27,59,12],[104,32,59,29],[104,40,59,8],[104,42,59,39],[105,0,60,10,"value"],[105,12,60,10,"value"],[105,18,60,15],[105,21,60,18],[106,0,60,20,"top"],[106,14,60,20,"top"],[106,17,60,23],[106,19,60,25,"value"],[106,25,60,18],[107,0,60,32,"left"],[107,14,60,32,"left"],[107,18,60,36],[107,20,60,38,"value"],[107,26,60,18],[108,0,60,45,"bottom"],[108,14,60,45,"bottom"],[108,20,60,51],[108,22,60,53,"value"],[108,28,60,18],[109,0,60,60,"right"],[109,14,60,60,"right"],[109,19,60,65],[109,21,60,67,"value"],[110,0,60,18],[110,13,60,10],[111,0,61,9],[112,0,62,7],[114,0,63,6,"res"],[114,8,63,6,"res"],[114,11,63,9],[114,12,63,10,"key"],[114,15,63,9],[114,16,63,6],[114,19,63,17,"value"],[114,25,63,6],[115,0,64,5],[116,0,65,3],[116,5,52,2],[117,0,66,2],[117,11,66,9,"res"],[117,14,66,2],[118,0,67,1],[120,0,69,0],[120,11,69,9,"transformIntoHandlerTags"],[120,35,69,0],[120,36,69,34,"handlerIDs"],[120,46,69,0],[120,48,69,46],[121,0,70,2],[121,8,70,6],[121,9,70,7,"Array"],[121,14,70,12],[121,15,70,13,"isArray"],[121,22,70,7],[121,23,70,21,"handlerIDs"],[121,33,70,7],[121,34,70,2],[121,36,70,34],[122,0,71,4,"handlerIDs"],[122,6,71,4,"handlerIDs"],[122,16,71,14],[122,19,71,17],[122,20,71,18,"handlerIDs"],[122,30,71,17],[122,31,71,4],[123,0,72,3],[125,0,75,2],[125,11,75,9,"handlerIDs"],[125,21,75,19],[125,22,76,5,"map"],[125,25,75,9],[125,26,77,6],[125,36,77,6,"handlerID"],[125,45,77,15],[126,0,77,15],[126,13,78,8,"handlerIDToTag"],[126,27,78,22],[126,28,78,23,"handlerID"],[126,37,78,22],[126,38,78,8],[126,42,79,9,"handlerID"],[126,51,79,18],[126,52,79,19,"current"],[126,59,79,9],[126,63,79,30,"handlerID"],[126,72,79,39],[126,73,79,40,"current"],[126,80,79,30],[126,81,79,48,"_handlerTag"],[126,92,78,8],[126,96,80,8],[126,97,80,9],[126,98,77,15],[127,0,77,15],[127,5,75,9],[127,7,82,5,"filter"],[127,13,75,9],[127,14,82,12],[127,24,82,12,"handlerTag"],[127,34,82,22],[128,0,82,22],[128,13,82,26,"handlerTag"],[128,23,82,36],[128,26,82,39],[128,27,82,22],[129,0,82,22],[129,5,75,9],[129,6,75,2],[130,0,83,1],[132,0,85,0],[132,11,85,9,"hasUnresolvedRefs"],[132,28,85,0],[132,29,85,27,"props"],[132,34,85,0],[132,36,85,34],[133,0,86,2],[133,8,86,8,"extract"],[133,15,86,15],[133,18,86,18],[133,27,86,8,"extract"],[133,34,86,18],[133,35,86,18,"refs"],[133,39,86,22],[133,41,86,26],[134,0,87,4],[134,10,87,8],[134,11,87,9,"Array"],[134,16,87,14],[134,17,87,15,"isArray"],[134,24,87,9],[134,25,87,23,"refs"],[134,29,87,9],[134,30,87,4],[134,32,87,30],[135,0,88,6],[135,15,88,13,"refs"],[135,19,88,17],[135,23,88,21,"refs"],[135,27,88,25],[135,28,88,26,"current"],[135,35,88,21],[135,40,88,38],[135,44,88,6],[136,0,89,5],[138,0,90,4],[138,13,90,11,"refs"],[138,17,90,15],[138,18,90,16,"some"],[138,22,90,11],[138,23,90,21],[138,33,90,21,"r"],[138,34,90,22],[139,0,90,22],[139,15,90,26,"r"],[139,16,90,27],[139,20,90,31,"r"],[139,21,90,32],[139,22,90,33,"current"],[139,29,90,31],[139,34,90,45],[139,38,90,22],[140,0,90,22],[140,7,90,11],[140,8,90,4],[141,0,91,3],[141,5,86,2],[143,0,92,2],[143,11,92,9,"extract"],[143,18,92,16],[143,19,92,17,"props"],[143,24,92,22],[143,25,92,23],[143,47,92,22],[143,48,92,16],[143,49,92,9],[143,53,92,51,"extract"],[143,60,92,58],[143,61,92,59,"props"],[143,66,92,64],[143,67,92,65],[143,76,92,64],[143,77,92,58],[143,78,92,2],[144,0,93,1],[146,0,95,0],[146,6,95,6,"stateToPropMappings"],[146,25,95,25],[146,108,96,3,"State"],[146,123,96,9,"BEGAN"],[146,128,95,25],[146,130,96,17],[146,139,95,25],[146,194,97,3,"State"],[146,209,97,9,"FAILED"],[146,215,95,25],[146,217,97,18],[146,227,95,25],[146,282,98,3,"State"],[146,297,98,9,"CANCELLED"],[146,306,95,25],[146,308,98,21],[146,321,95,25],[146,376,99,3,"State"],[146,391,99,9,"ACTIVE"],[146,397,95,25],[146,399,99,18],[146,412,95,25],[146,467,100,3,"State"],[146,482,100,9,"END"],[146,485,95,25],[146,487,100,15],[146,496,95,25],[146,520,95,0],[148,0,103,15],[148,11,103,24,"createHandler"],[148,24,103,15],[148,25,104,2,"handlerName"],[148,36,103,15],[148,38,109,2],[149,0,109,2],[149,8,105,2,"propTypes"],[149,17,109,2],[149,88,105,14],[149,90,109,2],[150,0,109,2],[150,8,106,2,"config"],[150,14,109,2],[150,85,106,11],[150,87,109,2],[151,0,109,2],[151,8,107,2,"transformProps"],[151,22,109,2],[152,0,109,2],[152,8,108,2,"customNativeProps"],[152,25,109,2],[152,96,108,22],[152,98,109,2],[154,0,109,2],[154,8,110,8,"Handler"],[154,15,109,2],[155,0,109,2],[157,0,115,4],[157,23,115,16,"props"],[157,28,115,4],[157,30,115,23],[158,0,115,23],[160,0,115,23],[161,0,116,6],[161,113,116,12,"props"],[161,118,116,6],[163,0,115,23],[163,14,127,4,"_onGestureHandlerEvent"],[163,36,115,23],[163,39,127,29],[163,49,127,29,"event"],[163,54,127,34],[163,56,127,38],[164,0,128,6],[164,14,128,10,"event"],[164,19,128,15],[164,20,128,16,"nativeEvent"],[164,31,128,10],[164,32,128,28,"handlerTag"],[164,42,128,10],[164,47,128,43],[164,53,128,48,"_handlerTag"],[164,64,128,6],[164,66,128,61],[165,0,129,8],[165,18,129,13,"props"],[165,23,129,8],[165,24,129,19,"onGestureEvent"],[165,38,129,8],[165,42,129,37],[165,48,129,42,"props"],[165,53,129,37],[165,54,129,48,"onGestureEvent"],[165,68,129,37],[165,69,129,63,"event"],[165,74,129,37],[165,75,129,8],[166,0,130,7],[166,11,128,6],[166,17,130,13],[167,0,131,8],[167,18,131,13,"props"],[167,23,131,8],[167,24,131,19,"onGestureHandlerEvent"],[167,45,131,8],[167,49,132,10],[167,55,132,15,"props"],[167,60,132,10],[167,61,132,21,"onGestureHandlerEvent"],[167,82,132,10],[167,83,132,43,"event"],[167,88,132,10],[167,89,131,8],[168,0,133,7],[169,0,134,5],[169,9,115,23],[171,0,115,23],[171,14,136,4,"_onGestureHandlerStateChange"],[171,42,115,23],[171,45,136,35],[171,55,136,35,"event"],[171,60,136,40],[171,62,136,44],[172,0,137,6],[172,14,137,10,"event"],[172,19,137,15],[172,20,137,16,"nativeEvent"],[172,31,137,10],[172,32,137,28,"handlerTag"],[172,42,137,10],[172,47,137,43],[172,53,137,48,"_handlerTag"],[172,64,137,6],[172,66,137,61],[173,0,138,8],[173,18,138,13,"props"],[173,23,138,8],[173,24,138,19,"onHandlerStateChange"],[173,44,138,8],[173,48,139,10],[173,54,139,15,"props"],[173,59,139,10],[173,60,139,21,"onHandlerStateChange"],[173,80,139,10],[173,81,139,42,"event"],[173,86,139,10],[173,87,138,8],[174,0,141,8],[174,16,141,14,"stateEventName"],[174,30,141,28],[174,33,141,31,"stateToPropMappings"],[174,52,141,50],[174,53,141,51,"event"],[174,58,141,56],[174,59,141,57,"nativeEvent"],[174,70,141,51],[174,71,141,69,"state"],[174,76,141,50],[174,77,141,8],[176,0,142,8],[176,16,142,12],[176,23,142,19],[176,29,142,24,"props"],[176,34,142,19],[176,35,142,30,"stateEventName"],[176,49,142,19],[176,50,142,12],[176,55,142,50],[176,65,142,8],[176,67,142,62],[177,0,143,10],[177,20,143,15,"props"],[177,25,143,10],[177,26,143,21,"stateEventName"],[177,40,143,10],[177,42,143,37,"event"],[177,47,143,10],[178,0,144,9],[179,0,145,7],[179,11,137,6],[179,17,145,13],[180,0,146,8],[180,18,146,13,"props"],[180,23,146,8],[180,24,146,19,"onGestureHandlerStateChange"],[180,51,146,8],[180,55,147,10],[180,61,147,15,"props"],[180,66,147,10],[180,67,147,21,"onGestureHandlerStateChange"],[180,94,147,10],[180,95,147,49,"event"],[180,100,147,10],[180,101,146,8],[181,0,148,7],[182,0,149,5],[182,9,115,23],[184,0,115,23],[184,14,151,4,"_refHandler"],[184,25,115,23],[184,28,151,18],[184,38,151,18,"node"],[184,42,151,22],[184,44,151,26],[185,0,152,6],[185,16,152,11,"_viewNode"],[185,25,152,6],[185,28,152,23,"node"],[185,32,152,6],[187,0,154,6],[187,14,154,12,"child"],[187,19,154,17],[187,22,154,20,"React"],[187,37,154,26,"Children"],[187,45,154,20],[187,46,154,35,"only"],[187,50,154,20],[187,51,154,40],[187,57,154,45,"props"],[187,62,154,40],[187,63,154,51,"children"],[187,71,154,20],[187,72,154,6],[189,0,151,26],[189,14,155,14,"ref"],[189,17,151,26],[189,20,155,22,"child"],[189,25,151,26],[189,26,155,14,"ref"],[189,29,151,26],[191,0,156,6],[191,14,156,10,"ref"],[191,17,156,13],[191,22,156,18],[191,26,156,6],[191,28,156,24],[192,0,157,8],[192,16,157,12],[192,23,157,19,"ref"],[192,26,157,12],[192,31,157,27],[192,41,157,8],[192,43,157,39],[193,0,158,10,"ref"],[193,14,158,10,"ref"],[193,17,158,13],[193,18,158,14,"node"],[193,22,158,13],[193,23,158,10],[194,0,159,9],[194,13,157,8],[194,19,159,15],[195,0,160,10,"ref"],[195,14,160,10,"ref"],[195,17,160,13],[195,18,160,14,"current"],[195,25,160,10],[195,28,160,24,"node"],[195,32,160,10],[196,0,161,9],[197,0,162,7],[198,0,163,5],[198,9,115,23],[200,0,115,23],[200,14,165,4,"_createGestureHandler"],[200,35,115,23],[200,38,165,28],[200,48,165,28,"newConfig"],[200,57,165,37],[200,59,165,41],[201,0,166,6],[201,16,166,11,"_config"],[201,23,166,6],[201,26,166,21,"newConfig"],[201,35,166,6],[203,0,168,6,"RNGestureHandlerModule"],[203,42,168,29,"createGestureHandler"],[203,62,168,6],[203,63,169,8,"handlerName"],[203,74,168,6],[203,76,170,8],[203,82,170,13,"_handlerTag"],[203,93,168,6],[203,95,171,8,"newConfig"],[203,104,168,6],[204,0,173,5],[204,9,115,23],[206,0,115,23],[206,14,175,4,"_attachGestureHandler"],[206,35,115,23],[206,38,175,28],[206,48,175,28,"newViewTag"],[206,58,175,38],[206,60,175,42],[207,0,176,6],[207,16,176,11,"_viewTag"],[207,24,176,6],[207,27,176,22,"newViewTag"],[207,37,176,6],[209,0,178,6,"RNGestureHandlerModule"],[209,42,178,29,"attachGestureHandler"],[209,62,178,6],[209,63,178,50],[209,69,178,55,"_handlerTag"],[209,80,178,6],[209,82,178,68,"newViewTag"],[209,92,178,6],[210,0,179,5],[210,9,115,23],[212,0,115,23],[212,14,181,4,"_updateGestureHandler"],[212,35,115,23],[212,38,181,28],[212,48,181,28,"newConfig"],[212,57,181,37],[212,59,181,41],[213,0,182,6],[213,16,182,11,"_config"],[213,23,182,6],[213,26,182,21,"newConfig"],[213,35,182,6],[215,0,184,6,"RNGestureHandlerModule"],[215,42,184,29,"updateGestureHandler"],[215,62,184,6],[215,63,184,50],[215,69,184,55,"_handlerTag"],[215,80,184,6],[215,82,184,68,"newConfig"],[215,91,184,6],[216,0,185,5],[216,9,115,23],[218,0,117,6],[218,14,117,11,"_handlerTag"],[218,25,117,6],[218,28,117,25,"handlerTag"],[218,38,117,35],[218,40,117,6],[219,0,118,6],[219,14,118,11,"_config"],[219,21,118,6],[219,24,118,21],[219,26,118,6],[221,0,119,6],[221,12,119,10,"props"],[221,17,119,15],[221,18,119,16,"id"],[221,20,119,6],[221,22,119,20],[222,0,120,8],[222,14,120,12,"handlerIDToTag"],[222,28,120,26],[222,29,120,27,"props"],[222,34,120,32],[222,35,120,33,"id"],[222,37,120,26],[222,38,120,12],[222,43,120,41,"undefined"],[222,52,120,8],[222,54,120,52],[223,0,121,10],[223,18,121,16],[223,22,121,20,"Error"],[223,27,121,16],[223,51,121,46,"props"],[223,56,121,51],[223,57,121,52,"id"],[223,59,121,16],[223,86,121,10],[224,0,122,9],[226,0,123,8,"handlerIDToTag"],[226,10,123,8,"handlerIDToTag"],[226,24,123,22],[226,25,123,23,"props"],[226,30,123,28],[226,31,123,29,"id"],[226,33,123,22],[226,34,123,8],[226,37,123,35],[226,43,123,40,"_handlerTag"],[226,54,123,8],[227,0,124,7],[229,0,115,23],[230,0,125,5],[232,0,109,2],[233,0,109,2],[234,0,109,2],[234,47,187,27],[235,0,188,6,"RNGestureHandlerModule"],[235,42,188,29,"dropGestureHandler"],[235,60,188,6],[235,61,188,48],[235,66,188,53,"_handlerTag"],[235,77,188,6],[237,0,189,6],[237,14,189,10],[237,19,189,15,"_updateEnqueued"],[237,34,189,6],[237,36,189,32],[238,0,190,8,"clearImmediate"],[238,12,190,8,"clearImmediate"],[238,26,190,22],[238,27,190,23],[238,32,190,28,"_updateEnqueued"],[238,47,190,22],[238,48,190,8],[239,0,191,7],[241,0,192,6],[241,14,192,10],[241,19,192,15,"props"],[241,24,192,10],[241,25,192,21,"id"],[241,27,192,6],[241,29,192,25],[242,0,193,8],[242,19,193,15,"handlerIDToTag"],[242,33,193,29],[242,34,193,30],[242,39,193,35,"props"],[242,44,193,30],[242,45,193,41,"id"],[242,47,193,29],[242,48,193,8],[243,0,194,7],[244,0,195,5],[245,0,109,2],[246,0,109,2],[247,0,109,2],[247,44,197,24],[248,0,197,24],[250,0,198,6],[250,14,198,10,"hasUnresolvedRefs"],[250,31,198,27],[250,32,198,28],[250,37,198,33,"props"],[250,42,198,27],[250,43,198,6],[250,45,198,41],[251,0,205,8],[251,17,205,13,"_updateEnqueued"],[251,32,205,8],[251,35,205,31,"setImmediate"],[251,47,205,43],[251,48,205,44],[251,60,205,50],[252,0,206,10],[252,14,206,10],[252,20,206,14],[252,21,206,15,"_updateEnqueued"],[252,36,206,10],[252,39,206,33],[252,43,206,10],[254,0,207,10],[254,14,207,10],[254,20,207,14],[254,21,207,15,"_update"],[254,28,207,10],[255,0,208,9],[255,13,205,43],[255,14,205,8],[256,0,209,7],[258,0,211,6],[258,15,211,11,"_createGestureHandler"],[258,36,211,6],[258,37,212,8,"filterConfig"],[258,49,212,20],[258,50,213,10,"transformProps"],[258,64,213,24],[258,67,213,27,"transformProps"],[258,81,213,41],[258,82,213,42],[258,87,213,47,"props"],[258,92,213,41],[258,93,213,24],[258,96,213,56],[258,101,213,61,"props"],[258,106,212,20],[258,126,214,15],[258,131,214,20,"constructor"],[258,142,214,15],[258,143,214,32,"propTypes"],[258,152,212,20],[258,158,214,46,"customNativeProps"],[258,175,212,20],[258,178,215,10,"config"],[258,184,212,20],[258,185,211,6],[260,0,218,6],[260,15,218,11,"_attachGestureHandler"],[260,36,218,6],[260,37,218,33],[260,70,218,48],[260,75,218,53,"_viewNode"],[260,84,218,33],[260,85,218,6],[261,0,219,5],[262,0,109,2],[263,0,109,2],[264,0,109,2],[264,45,221,25],[265,0,222,6],[265,14,222,12,"viewTag"],[265,21,222,19],[265,24,222,22],[265,57,222,37],[265,62,222,42,"_viewNode"],[265,71,222,22],[265,72,222,6],[267,0,223,6],[267,14,223,10],[267,19,223,15,"_viewTag"],[267,27,223,10],[267,32,223,28,"viewTag"],[267,39,223,6],[267,41,223,37],[268,0,224,8],[268,17,224,13,"_attachGestureHandler"],[268,38,224,8],[268,39,224,35,"viewTag"],[268,46,224,8],[269,0,225,7],[271,0,226,6],[271,15,226,11,"_update"],[271,22,226,6],[272,0,227,5],[273,0,109,2],[274,0,109,2],[275,0,109,2],[275,34,229,14],[276,0,230,6],[276,14,230,12,"newConfig"],[276,23,230,21],[276,26,230,24,"filterConfig"],[276,38,230,36],[276,39,231,8,"transformProps"],[276,53,231,22],[276,56,231,25,"transformProps"],[276,70,231,39],[276,71,231,40],[276,76,231,45,"props"],[276,81,231,39],[276,82,231,22],[276,85,231,54],[276,90,231,59,"props"],[276,95,230,36],[276,115,232,13],[276,120,232,18,"constructor"],[276,131,232,13],[276,132,232,30,"propTypes"],[276,141,230,36],[276,147,232,44,"customNativeProps"],[276,164,230,36],[276,167,233,8,"config"],[276,173,230,36],[276,174,230,6],[278,0,235,6],[278,14,235,10],[278,15,235,11],[278,38,235,21],[278,43,235,26,"_config"],[278,50,235,11],[278,52,235,35,"newConfig"],[278,61,235,11],[278,62,235,6],[278,64,235,47],[279,0,236,8],[279,17,236,13,"_updateGestureHandler"],[279,38,236,8],[279,39,236,35,"newConfig"],[279,48,236,8],[280,0,237,7],[281,0,238,5],[282,0,109,2],[283,0,109,2],[284,0,109,2],[284,39,240,19,"updates"],[284,46,109,2],[284,48,240,28],[285,0,241,6],[285,14,241,12,"mergedProps"],[285,25,241,23],[285,46,241,31],[285,51,241,36,"props"],[285,56,241,23],[285,62,241,46,"updates"],[285,69,241,23],[285,70,241,6],[287,0,242,6],[287,14,242,12,"newConfig"],[287,23,242,21],[287,26,242,24,"filterConfig"],[287,38,242,36],[287,39,243,8,"transformProps"],[287,53,243,22],[287,56,243,25,"transformProps"],[287,70,243,39],[287,71,243,40,"mergedProps"],[287,82,243,39],[287,83,243,22],[287,86,243,55,"mergedProps"],[287,97,242,36],[287,117,244,13],[287,122,244,18,"constructor"],[287,133,244,13],[287,134,244,30,"propTypes"],[287,143,242,36],[287,149,244,44,"customNativeProps"],[287,166,242,36],[287,169,245,8,"config"],[287,175,242,36],[287,176,242,6],[289,0,247,6],[289,15,247,11,"_updateGestureHandler"],[289,36,247,6],[289,37,247,33,"newConfig"],[289,46,247,6],[290,0,248,5],[291,0,109,2],[292,0,109,2],[293,0,109,2],[293,33,250,13],[294,0,251,6],[294,14,251,10,"gestureEventHandler"],[294,33,251,29],[294,36,251,32],[294,41,251,37,"_onGestureHandlerEvent"],[294,63,251,6],[295,0,250,13],[295,28,252,56],[295,33,252,61,"props"],[295,38,250,13],[296,0,250,13],[296,14,252,14,"onGestureEvent"],[296,28,250,13],[296,43,252,14,"onGestureEvent"],[296,57,250,13],[297,0,250,13],[297,14,252,30,"onGestureHandlerEvent"],[297,35,250,13],[297,50,252,30,"onGestureHandlerEvent"],[297,71,250,13],[299,0,253,6],[299,14,253,10,"onGestureEvent"],[299,28,253,24],[299,32,253,28],[299,39,253,35,"onGestureEvent"],[299,53,253,28],[299,58,253,54],[299,68,253,6],[299,70,253,66],[300,0,257,8],[300,16,257,12,"onGestureHandlerEvent"],[300,37,257,8],[300,39,257,35],[301,0,258,10],[301,20,258,16],[301,24,258,20,"Error"],[301,29,258,16],[301,30,259,12],[301,103,258,16],[301,104,258,10],[302,0,261,9],[304,0,262,8,"gestureEventHandler"],[304,12,262,8,"gestureEventHandler"],[304,31,262,27],[304,34,262,30],[304,39,262,35,"props"],[304,44,262,30],[304,45,262,41,"onGestureEvent"],[304,59,262,8],[305,0,263,7],[305,11,253,6],[305,17,263,13],[306,0,264,8],[306,16,265,10,"onGestureHandlerEvent"],[306,37,265,31],[306,41,266,10],[306,48,266,17,"onGestureHandlerEvent"],[306,69,266,10],[306,74,266,43],[306,84,264,8],[306,86,267,10],[307,0,268,10],[307,20,268,16],[307,24,268,20,"Error"],[307,29,268,16],[307,30,269,12],[307,103,268,16],[307,104,268,10],[308,0,271,9],[309,0,272,7],[311,0,274,6],[311,14,274,10,"gestureStateEventHandler"],[311,38,274,34],[311,41,274,37],[311,46,274,42,"_onGestureHandlerStateChange"],[311,74,274,6],[312,0,250,13],[312,29,275,68],[312,34,275,73,"props"],[312,39,250,13],[313,0,250,13],[313,14,275,14,"onHandlerStateChange"],[313,34,250,13],[313,50,275,14,"onHandlerStateChange"],[313,70,250,13],[314,0,250,13],[314,14,275,36,"onGestureHandlerStateChange"],[314,41,250,13],[314,57,275,36,"onGestureHandlerStateChange"],[314,84,250,13],[316,0,276,6],[316,14,276,10,"onHandlerStateChange"],[316,34,276,30],[316,38,276,34],[316,45,276,41,"onHandlerStateChange"],[316,65,276,34],[316,70,276,66],[316,80,276,6],[316,82,276,78],[317,0,280,8],[317,16,280,12,"onGestureHandlerStateChange"],[317,43,280,8],[317,45,280,41],[318,0,281,10],[318,20,281,16],[318,24,281,20,"Error"],[318,29,281,16],[318,30,282,12],[318,103,281,16],[318,104,281,10],[319,0,284,9],[321,0,285,8,"gestureStateEventHandler"],[321,12,285,8,"gestureStateEventHandler"],[321,36,285,32],[321,39,285,35],[321,44,285,40,"props"],[321,49,285,35],[321,50,285,46,"onHandlerStateChange"],[321,70,285,8],[322,0,286,7],[322,11,276,6],[322,17,286,13],[323,0,287,8],[323,16,288,10,"onGestureHandlerStateChange"],[323,43,288,37],[323,47,289,10],[323,54,289,17,"onGestureHandlerStateChange"],[323,81,289,10],[323,86,289,49],[323,96,287,8],[323,98,290,10],[324,0,291,10],[324,20,291,16],[324,24,291,20,"Error"],[324,29,291,16],[324,30,292,12],[324,103,291,16],[324,104,291,10],[325,0,294,9],[326,0,295,7],[328,0,297,6],[328,14,297,12,"child"],[328,19,297,17],[328,22,297,20,"React"],[328,37,297,26,"Children"],[328,45,297,20],[328,46,297,35,"only"],[328,50,297,20],[328,51,297,40],[328,56,297,45,"props"],[328,61,297,40],[328,62,297,51,"children"],[328,70,297,20],[328,71,297,6],[330,0,298,6],[330,14,298,10,"grandChildren"],[330,27,298,23],[330,30,298,26,"child"],[330,35,298,31],[330,36,298,32,"props"],[330,41,298,26],[330,42,298,38,"children"],[330,50,298,6],[332,0,299,6],[332,14,300,8,"Touchable"],[332,37,300,18,"TOUCH_TARGET_DEBUG"],[332,55,300,8],[332,59,301,8,"child"],[332,64,301,13],[332,65,301,14,"type"],[332,69,300,8],[332,74,302,9,"child"],[332,79,302,14],[332,80,302,15,"type"],[332,84,302,9],[332,89,302,24],[332,113,302,9],[332,117,303,10,"child"],[332,122,303,15],[332,123,303,16,"type"],[332,127,303,10],[332,128,303,21,"name"],[332,132,303,10],[332,137,303,30],[332,143,302,9],[332,147,304,10,"child"],[332,152,304,15],[332,153,304,16,"type"],[332,157,304,10],[332,158,304,21,"displayName"],[332,169,304,10],[332,174,304,37],[332,180,300,8],[332,181,299,6],[332,183,305,8],[333,0,306,8,"grandChildren"],[333,12,306,8,"grandChildren"],[333,25,306,21],[333,28,306,24,"React"],[333,43,306,30,"Children"],[333,51,306,24],[333,52,306,39,"toArray"],[333,59,306,24],[333,60,306,47,"grandChildren"],[333,73,306,24],[333,74,306,8],[334,0,307,8,"grandChildren"],[334,12,307,8,"grandChildren"],[334,25,307,21],[334,26,307,22,"push"],[334,30,307,8],[334,31,308,10,"Touchable"],[334,54,308,20,"renderDebugView"],[334,69,308,10],[334,70,308,36],[335,0,309,12,"color"],[335,14,309,12,"color"],[335,19,309,17],[335,21,309,19],[335,40,308,36],[336,0,310,12,"hitSlop"],[336,14,310,12,"hitSlop"],[336,21,310,19],[336,23,310,21,"child"],[336,28,310,26],[336,29,310,27,"props"],[336,34,310,21],[336,35,310,33,"hitSlop"],[337,0,308,36],[337,13,308,10],[337,14,307,8],[338,0,313,7],[340,0,314,6],[340,17,314,13,"React"],[340,32,314,19,"cloneElement"],[340,44,314,13],[340,45,315,8,"child"],[340,50,314,13],[340,52,316,8],[341,0,317,10,"ref"],[341,12,317,10,"ref"],[341,15,317,13],[341,17,317,15],[341,22,317,20,"_refHandler"],[341,33,316,8],[342,0,318,10,"collapsable"],[342,12,318,10,"collapsable"],[342,23,318,21],[342,25,318,23],[342,30,316,8],[343,0,319,10,"onGestureHandlerEvent"],[343,12,319,10,"onGestureHandlerEvent"],[343,33,319,31],[343,35,319,33,"gestureEventHandler"],[343,54,316,8],[344,0,320,10,"onGestureHandlerStateChange"],[344,12,320,10,"onGestureHandlerStateChange"],[344,39,320,37],[344,41,320,39,"gestureStateEventHandler"],[345,0,316,8],[345,11,314,13],[345,13,322,8,"grandChildren"],[345,26,314,13],[345,27,314,6],[346,0,324,5],[347,0,109,2],[348,0,109,2],[349,0,109,2],[349,6,110,24,"React"],[349,21,110,30,"Component"],[349,30,109,2],[351,0,110,8,"Handler"],[351,4,110,8,"Handler"],[351,11,109,2],[351,12,111,11,"displayName"],[351,23,109,2],[351,26,111,25,"handlerName"],[351,37,109,2],[352,0,110,8,"Handler"],[352,4,110,8,"Handler"],[352,11,109,2],[352,12,113,11,"propTypes"],[352,21,109,2],[352,24,113,23,"propTypes"],[352,33,109,2],[353,0,109,2],[354,0,326,2],[354,11,326,9,"Handler"],[354,18,326,2],[355,0,327,1]]},"type":"js/module"}]}