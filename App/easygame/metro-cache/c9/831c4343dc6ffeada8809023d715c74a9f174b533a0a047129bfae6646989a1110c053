{"dependencies":[{"name":"../../tokenizer","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var TYPE = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE;\n\n  var IDENT = TYPE.Ident;\n  var NUMBER = TYPE.Number;\n  var DIMENSION = TYPE.Dimension;\n  var LEFTPARENTHESIS = TYPE.LeftParenthesis;\n  var RIGHTPARENTHESIS = TYPE.RightParenthesis;\n  var COLON = TYPE.Colon;\n  var DELIM = TYPE.Delim;\n  module.exports = {\n    name: 'MediaFeature',\n    structure: {\n      name: String,\n      value: ['Identifier', 'Number', 'Dimension', 'Ratio', null]\n    },\n    parse: function parse() {\n      var start = this.scanner.tokenStart;\n      var name;\n      var value = null;\n      this.eat(LEFTPARENTHESIS);\n      this.scanner.skipSC();\n      name = this.consume(IDENT);\n      this.scanner.skipSC();\n\n      if (this.scanner.tokenType !== RIGHTPARENTHESIS) {\n        this.eat(COLON);\n        this.scanner.skipSC();\n\n        switch (this.scanner.tokenType) {\n          case NUMBER:\n            if (this.lookupNonWSType(1) === DELIM) {\n              value = this.Ratio();\n            } else {\n              value = this.Number();\n            }\n\n            break;\n\n          case DIMENSION:\n            value = this.Dimension();\n            break;\n\n          case IDENT:\n            value = this.Identifier();\n            break;\n\n          default:\n            this.error('Number, dimension, ratio or identifier is expected');\n        }\n\n        this.scanner.skipSC();\n      }\n\n      this.eat(RIGHTPARENTHESIS);\n      return {\n        type: 'MediaFeature',\n        loc: this.getLocation(start, this.scanner.tokenStart),\n        name: name,\n        value: value\n      };\n    },\n    generate: function generate(node) {\n      this.chunk('(');\n      this.chunk(node.name);\n\n      if (node.value !== null) {\n        this.chunk(':');\n        this.node(node.value);\n      }\n\n      this.chunk(')');\n    }\n  };\n});","map":[[2,0,1,0],[2,6,1,4,"TYPE"],[2,10,1,8],[2,13,1,11,"require"],[2,24,1,18],[2,62,1,11],[2,63,1,38,"TYPE"],[2,67,1,0],[4,0,3,0],[4,6,3,4,"IDENT"],[4,11,3,9],[4,14,3,12,"TYPE"],[4,18,3,16],[4,19,3,17,"Ident"],[4,24,3,0],[5,0,4,0],[5,6,4,4,"NUMBER"],[5,12,4,10],[5,15,4,13,"TYPE"],[5,19,4,17],[5,20,4,18,"Number"],[5,26,4,0],[6,0,5,0],[6,6,5,4,"DIMENSION"],[6,15,5,13],[6,18,5,16,"TYPE"],[6,22,5,20],[6,23,5,21,"Dimension"],[6,32,5,0],[7,0,6,0],[7,6,6,4,"LEFTPARENTHESIS"],[7,21,6,19],[7,24,6,22,"TYPE"],[7,28,6,26],[7,29,6,27,"LeftParenthesis"],[7,44,6,0],[8,0,7,0],[8,6,7,4,"RIGHTPARENTHESIS"],[8,22,7,20],[8,25,7,23,"TYPE"],[8,29,7,27],[8,30,7,28,"RightParenthesis"],[8,46,7,0],[9,0,8,0],[9,6,8,4,"COLON"],[9,11,8,9],[9,14,8,12,"TYPE"],[9,18,8,16],[9,19,8,17,"Colon"],[9,24,8,0],[10,0,9,0],[10,6,9,4,"DELIM"],[10,11,9,9],[10,14,9,12,"TYPE"],[10,18,9,16],[10,19,9,17,"Delim"],[10,24,9,0],[11,0,11,0,"module"],[11,2,11,0,"module"],[11,8,11,6],[11,9,11,7,"exports"],[11,16,11,0],[11,19,11,17],[12,0,12,4,"name"],[12,4,12,4,"name"],[12,8,12,8],[12,10,12,10],[12,24,11,17],[13,0,13,4,"structure"],[13,4,13,4,"structure"],[13,13,13,13],[13,15,13,15],[14,0,14,8,"name"],[14,6,14,8,"name"],[14,10,14,12],[14,12,14,14,"String"],[14,18,13,15],[15,0,15,8,"value"],[15,6,15,8,"value"],[15,11,15,13],[15,13,15,15],[15,14,15,16],[15,26,15,15],[15,28,15,30],[15,36,15,15],[15,38,15,40],[15,49,15,15],[15,51,15,53],[15,58,15,15],[15,60,15,62],[15,64,15,15],[16,0,13,15],[16,5,11,17],[17,0,17,4,"parse"],[17,4,17,4,"parse"],[17,9,17,9],[17,11,17,11],[17,28,17,22],[18,0,18,8],[18,10,18,12,"start"],[18,15,18,17],[18,18,18,20],[18,23,18,25,"scanner"],[18,30,18,20],[18,31,18,33,"tokenStart"],[18,41,18,8],[19,0,19,8],[19,10,19,12,"name"],[19,14,19,8],[20,0,20,8],[20,10,20,12,"value"],[20,15,20,17],[20,18,20,20],[20,22,20,8],[21,0,22,8],[21,11,22,13,"eat"],[21,14,22,8],[21,15,22,17,"LEFTPARENTHESIS"],[21,30,22,8],[22,0,23,8],[22,11,23,13,"scanner"],[22,18,23,8],[22,19,23,21,"skipSC"],[22,25,23,8],[23,0,25,8,"name"],[23,6,25,8,"name"],[23,10,25,12],[23,13,25,15],[23,18,25,20,"consume"],[23,25,25,15],[23,26,25,28,"IDENT"],[23,31,25,15],[23,32,25,8],[24,0,26,8],[24,11,26,13,"scanner"],[24,18,26,8],[24,19,26,21,"skipSC"],[24,25,26,8],[26,0,28,8],[26,10,28,12],[26,15,28,17,"scanner"],[26,22,28,12],[26,23,28,25,"tokenType"],[26,32,28,12],[26,37,28,39,"RIGHTPARENTHESIS"],[26,53,28,8],[26,55,28,57],[27,0,29,12],[27,13,29,17,"eat"],[27,16,29,12],[27,17,29,21,"COLON"],[27,22,29,12],[28,0,30,12],[28,13,30,17,"scanner"],[28,20,30,12],[28,21,30,25,"skipSC"],[28,27,30,12],[30,0,32,12],[30,16,32,20],[30,21,32,25,"scanner"],[30,28,32,20],[30,29,32,33,"tokenType"],[30,38,32,12],[31,0,33,16],[31,15,33,21,"NUMBER"],[31,21,33,16],[32,0,34,20],[32,16,34,24],[32,21,34,29,"lookupNonWSType"],[32,36,34,24],[32,37,34,45],[32,38,34,24],[32,44,34,52,"DELIM"],[32,49,34,20],[32,51,34,59],[33,0,35,24,"value"],[33,14,35,24,"value"],[33,19,35,29],[33,22,35,32],[33,27,35,37,"Ratio"],[33,32,35,32],[33,34,35,24],[34,0,36,21],[34,13,34,20],[34,19,36,27],[35,0,37,24,"value"],[35,14,37,24,"value"],[35,19,37,29],[35,22,37,32],[35,27,37,37,"Number"],[35,33,37,32],[35,35,37,24],[36,0,38,21],[38,0,40,20],[40,0,42,16],[40,15,42,21,"DIMENSION"],[40,24,42,16],[41,0,43,20,"value"],[41,12,43,20,"value"],[41,17,43,25],[41,20,43,28],[41,25,43,33,"Dimension"],[41,34,43,28],[41,36,43,20],[42,0,44,20],[44,0,46,16],[44,15,46,21,"IDENT"],[44,20,46,16],[45,0,47,20,"value"],[45,12,47,20,"value"],[45,17,47,25],[45,20,47,28],[45,25,47,33,"Identifier"],[45,35,47,28],[45,37,47,20],[46,0,49,20],[48,0,51,16],[49,0,52,20],[49,17,52,25,"error"],[49,22,52,20],[49,23,52,31],[49,75,52,20],[50,0,32,12],[52,0,55,12],[52,13,55,17,"scanner"],[52,20,55,12],[52,21,55,25,"skipSC"],[52,27,55,12],[53,0,56,9],[55,0,58,8],[55,11,58,13,"eat"],[55,14,58,8],[55,15,58,17,"RIGHTPARENTHESIS"],[55,31,58,8],[56,0,60,8],[56,13,60,15],[57,0,61,12,"type"],[57,8,61,12,"type"],[57,12,61,16],[57,14,61,18],[57,28,60,15],[58,0,62,12,"loc"],[58,8,62,12,"loc"],[58,11,62,15],[58,13,62,17],[58,18,62,22,"getLocation"],[58,29,62,17],[58,30,62,34,"start"],[58,35,62,17],[58,37,62,41],[58,42,62,46,"scanner"],[58,49,62,41],[58,50,62,54,"tokenStart"],[58,60,62,17],[58,61,60,15],[59,0,63,12,"name"],[59,8,63,12,"name"],[59,12,63,16],[59,14,63,18,"name"],[59,18,60,15],[60,0,64,12,"value"],[60,8,64,12,"value"],[60,13,64,17],[60,15,64,19,"value"],[61,0,60,15],[61,7,60,8],[62,0,66,5],[62,5,11,17],[63,0,67,4,"generate"],[63,4,67,4,"generate"],[63,12,67,12],[63,14,67,14],[63,32,67,23,"node"],[63,36,67,14],[63,38,67,29],[64,0,68,8],[64,11,68,13,"chunk"],[64,16,68,8],[64,17,68,19],[64,20,68,8],[65,0,69,8],[65,11,69,13,"chunk"],[65,16,69,8],[65,17,69,19,"node"],[65,21,69,23],[65,22,69,24,"name"],[65,26,69,8],[67,0,70,8],[67,10,70,12,"node"],[67,14,70,16],[67,15,70,17,"value"],[67,20,70,12],[67,25,70,27],[67,29,70,8],[67,31,70,33],[68,0,71,12],[68,13,71,17,"chunk"],[68,18,71,12],[68,19,71,23],[68,22,71,12],[69,0,72,12],[69,13,72,17,"node"],[69,17,72,12],[69,18,72,22,"node"],[69,22,72,26],[69,23,72,27,"value"],[69,28,72,12],[70,0,73,9],[72,0,74,8],[72,11,74,13,"chunk"],[72,16,74,8],[72,17,74,19],[72,20,74,8],[73,0,75,5],[74,0,11,17],[74,3,11,0]]},"type":"js/module"}]}