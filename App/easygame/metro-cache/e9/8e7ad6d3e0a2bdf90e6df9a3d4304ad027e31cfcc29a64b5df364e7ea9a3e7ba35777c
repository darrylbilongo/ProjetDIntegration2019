{"dependencies":[{"name":"../utils/createCustomError","data":{"isAsync":false}},{"name":"../definition-syntax/generate","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var createCustomError = _$$_REQUIRE(_dependencyMap[0], \"../utils/createCustomError\");\n\n  var generate = _$$_REQUIRE(_dependencyMap[1], \"../definition-syntax/generate\");\n\n  function fromMatchResult(matchResult) {\n    var tokens = matchResult.tokens;\n    var longestMatch = matchResult.longestMatch;\n    var node = longestMatch < tokens.length ? tokens[longestMatch].node : null;\n    var mismatchOffset = -1;\n    var entries = 0;\n    var css = '';\n\n    for (var i = 0; i < tokens.length; i++) {\n      if (i === longestMatch) {\n        mismatchOffset = css.length;\n      }\n\n      if (node !== null && tokens[i].node === node) {\n        if (i <= longestMatch) {\n          entries++;\n        } else {\n          entries = 0;\n        }\n      }\n\n      css += tokens[i].value;\n    }\n\n    return {\n      node: node,\n      css: css,\n      mismatchOffset: mismatchOffset === -1 ? css.length : mismatchOffset,\n      last: node === null || entries > 1\n    };\n  }\n\n  function getLocation(node, point) {\n    var loc = node && node.loc && node.loc[point];\n\n    if (loc) {\n      return {\n        offset: loc.offset,\n        line: loc.line,\n        column: loc.column\n      };\n    }\n\n    return null;\n  }\n\n  var SyntaxReferenceError = function SyntaxReferenceError(type, referenceName) {\n    var error = createCustomError('SyntaxReferenceError', type + (referenceName ? ' `' + referenceName + '`' : ''));\n    error.reference = referenceName;\n    return error;\n  };\n\n  var MatchError = function MatchError(message, syntax, node, matchResult) {\n    var error = createCustomError('SyntaxMatchError', message);\n    var details = fromMatchResult(matchResult);\n    var mismatchOffset = details.mismatchOffset || 0;\n    var badNode = details.node || node;\n    var end = getLocation(badNode, 'end');\n    var start = details.last ? end : getLocation(badNode, 'start');\n    var css = details.css;\n    error.rawMessage = message;\n    error.syntax = syntax ? generate(syntax) : '<generic>';\n    error.css = css;\n    error.mismatchOffset = mismatchOffset;\n    error.loc = {\n      source: badNode && badNode.loc && badNode.loc.source || '<unknown>',\n      start: start,\n      end: end\n    };\n    error.line = start ? start.line : undefined;\n    error.column = start ? start.column : undefined;\n    error.offset = start ? start.offset : undefined;\n    error.message = message + '\\n' + '  syntax: ' + error.syntax + '\\n' + '   value: ' + (error.css || '<empty string>') + '\\n' + '  --------' + new Array(error.mismatchOffset + 1).join('-') + '^';\n    return error;\n  };\n\n  module.exports = {\n    SyntaxReferenceError: SyntaxReferenceError,\n    MatchError: MatchError\n  };\n});","map":[[2,0,1,0],[2,6,1,4,"createCustomError"],[2,23,1,21],[2,26,1,24,"require"],[2,37,1,31],[2,86,1,0],[4,0,2,0],[4,6,2,4,"generate"],[4,14,2,12],[4,17,2,15,"require"],[4,28,2,22],[4,80,2,0],[6,0,4,0],[6,11,4,9,"fromMatchResult"],[6,26,4,0],[6,27,4,25,"matchResult"],[6,38,4,0],[6,40,4,38],[7,0,5,4],[7,8,5,8,"tokens"],[7,14,5,14],[7,17,5,17,"matchResult"],[7,28,5,28],[7,29,5,29,"tokens"],[7,35,5,4],[8,0,6,4],[8,8,6,8,"longestMatch"],[8,20,6,20],[8,23,6,23,"matchResult"],[8,34,6,34],[8,35,6,35,"longestMatch"],[8,47,6,4],[9,0,7,4],[9,8,7,8,"node"],[9,12,7,12],[9,15,7,15,"longestMatch"],[9,27,7,27],[9,30,7,30,"tokens"],[9,36,7,36],[9,37,7,37,"length"],[9,43,7,15],[9,46,7,46,"tokens"],[9,52,7,52],[9,53,7,53,"longestMatch"],[9,65,7,52],[9,66,7,46],[9,67,7,67,"node"],[9,71,7,15],[9,74,7,74],[9,78,7,4],[10,0,8,4],[10,8,8,8,"mismatchOffset"],[10,22,8,22],[10,25,8,25],[10,26,8,26],[10,27,8,4],[11,0,9,4],[11,8,9,8,"entries"],[11,15,9,15],[11,18,9,18],[11,19,9,4],[12,0,10,4],[12,8,10,8,"css"],[12,11,10,11],[12,14,10,14],[12,16,10,4],[14,0,12,4],[14,9,12,9],[14,13,12,13,"i"],[14,14,12,14],[14,17,12,17],[14,18,12,4],[14,20,12,20,"i"],[14,21,12,21],[14,24,12,24,"tokens"],[14,30,12,30],[14,31,12,31,"length"],[14,37,12,4],[14,39,12,39,"i"],[14,40,12,40],[14,42,12,4],[14,44,12,44],[15,0,13,8],[15,10,13,12,"i"],[15,11,13,13],[15,16,13,18,"longestMatch"],[15,28,13,8],[15,30,13,32],[16,0,14,12,"mismatchOffset"],[16,8,14,12,"mismatchOffset"],[16,22,14,26],[16,25,14,29,"css"],[16,28,14,32],[16,29,14,33,"length"],[16,35,14,12],[17,0,15,9],[19,0,17,8],[19,10,17,12,"node"],[19,14,17,16],[19,19,17,21],[19,23,17,12],[19,27,17,29,"tokens"],[19,33,17,35],[19,34,17,36,"i"],[19,35,17,35],[19,36,17,29],[19,37,17,39,"node"],[19,41,17,29],[19,46,17,48,"node"],[19,50,17,8],[19,52,17,54],[20,0,18,12],[20,12,18,16,"i"],[20,13,18,17],[20,17,18,21,"longestMatch"],[20,29,18,12],[20,31,18,35],[21,0,19,16,"entries"],[21,10,19,16,"entries"],[21,17,19,23],[22,0,20,13],[22,9,18,12],[22,15,20,19],[23,0,21,16,"entries"],[23,10,21,16,"entries"],[23,17,21,23],[23,20,21,26],[23,21,21,16],[24,0,22,13],[25,0,23,9],[27,0,25,8,"css"],[27,6,25,8,"css"],[27,9,25,11],[27,13,25,15,"tokens"],[27,19,25,21],[27,20,25,22,"i"],[27,21,25,21],[27,22,25,15],[27,23,25,25,"value"],[27,28,25,8],[28,0,26,5],[30,0,28,4],[30,11,28,11],[31,0,29,8,"node"],[31,6,29,8,"node"],[31,10,29,12],[31,12,29,14,"node"],[31,16,28,11],[32,0,30,8,"css"],[32,6,30,8,"css"],[32,9,30,11],[32,11,30,13,"css"],[32,14,28,11],[33,0,31,8,"mismatchOffset"],[33,6,31,8,"mismatchOffset"],[33,20,31,22],[33,22,31,24,"mismatchOffset"],[33,36,31,38],[33,41,31,43],[33,42,31,44],[33,43,31,24],[33,46,31,48,"css"],[33,49,31,51],[33,50,31,52,"length"],[33,56,31,24],[33,59,31,61,"mismatchOffset"],[33,73,28,11],[34,0,32,8,"last"],[34,6,32,8,"last"],[34,10,32,12],[34,12,32,14,"node"],[34,16,32,18],[34,21,32,23],[34,25,32,14],[34,29,32,31,"entries"],[34,36,32,38],[34,39,32,41],[35,0,28,11],[35,5,28,4],[36,0,34,1],[38,0,36,0],[38,11,36,9,"getLocation"],[38,22,36,0],[38,23,36,21,"node"],[38,27,36,0],[38,29,36,27,"point"],[38,34,36,0],[38,36,36,34],[39,0,37,4],[39,8,37,8,"loc"],[39,11,37,11],[39,14,37,14,"node"],[39,18,37,18],[39,22,37,22,"node"],[39,26,37,26],[39,27,37,27,"loc"],[39,30,37,14],[39,34,37,34,"node"],[39,38,37,38],[39,39,37,39,"loc"],[39,42,37,34],[39,43,37,43,"point"],[39,48,37,34],[39,49,37,4],[41,0,39,4],[41,8,39,8,"loc"],[41,11,39,4],[41,13,39,13],[42,0,40,8],[42,13,40,15],[43,0,41,12,"offset"],[43,8,41,12,"offset"],[43,14,41,18],[43,16,41,20,"loc"],[43,19,41,23],[43,20,41,24,"offset"],[43,26,40,15],[44,0,42,12,"line"],[44,8,42,12,"line"],[44,12,42,16],[44,14,42,18,"loc"],[44,17,42,21],[44,18,42,22,"line"],[44,22,40,15],[45,0,43,12,"column"],[45,8,43,12,"column"],[45,14,43,18],[45,16,43,20,"loc"],[45,19,43,23],[45,20,43,24,"column"],[46,0,40,15],[46,7,40,8],[47,0,45,5],[49,0,47,4],[49,11,47,11],[49,15,47,4],[50,0,48,1],[52,0,50,0],[52,6,50,4,"SyntaxReferenceError"],[52,26,50,24],[52,29,50,27],[52,38,50,4,"SyntaxReferenceError"],[52,58,50,27],[52,59,50,36,"type"],[52,63,50,27],[52,65,50,42,"referenceName"],[52,78,50,27],[52,80,50,57],[53,0,51,4],[53,8,51,8,"error"],[53,13,51,13],[53,16,51,16,"createCustomError"],[53,33,51,33],[53,34,52,8],[53,56,51,33],[53,58,53,8,"type"],[53,62,53,12],[53,66,53,16,"referenceName"],[53,79,53,29],[53,82,53,32],[53,89,53,39,"referenceName"],[53,102,53,32],[53,105,53,55],[53,108,53,29],[53,111,53,61],[53,113,53,12],[53,114,51,33],[53,115,51,4],[54,0,56,4,"error"],[54,4,56,4,"error"],[54,9,56,9],[54,10,56,10,"reference"],[54,19,56,4],[54,22,56,22,"referenceName"],[54,35,56,4],[55,0,58,4],[55,11,58,11,"error"],[55,16,58,4],[56,0,59,1],[56,3,50,0],[58,0,61,0],[58,6,61,4,"MatchError"],[58,16,61,14],[58,19,61,17],[58,28,61,4,"MatchError"],[58,38,61,17],[58,39,61,26,"message"],[58,46,61,17],[58,48,61,35,"syntax"],[58,54,61,17],[58,56,61,43,"node"],[58,60,61,17],[58,62,61,49,"matchResult"],[58,73,61,17],[58,75,61,62],[59,0,62,4],[59,8,62,8,"error"],[59,13,62,13],[59,16,62,16,"createCustomError"],[59,33,62,33],[59,34,62,34],[59,52,62,33],[59,54,62,54,"message"],[59,61,62,33],[59,62,62,4],[60,0,63,4],[60,8,63,8,"details"],[60,15,63,15],[60,18,63,18,"fromMatchResult"],[60,33,63,33],[60,34,63,34,"matchResult"],[60,45,63,33],[60,46,63,4],[61,0,64,4],[61,8,64,8,"mismatchOffset"],[61,22,64,22],[61,25,64,25,"details"],[61,32,64,32],[61,33,64,33,"mismatchOffset"],[61,47,64,25],[61,51,64,51],[61,52,64,4],[62,0,65,4],[62,8,65,8,"badNode"],[62,15,65,15],[62,18,65,18,"details"],[62,25,65,25],[62,26,65,26,"node"],[62,30,65,18],[62,34,65,34,"node"],[62,38,65,4],[63,0,66,4],[63,8,66,8,"end"],[63,11,66,11],[63,14,66,14,"getLocation"],[63,25,66,25],[63,26,66,26,"badNode"],[63,33,66,25],[63,35,66,35],[63,40,66,25],[63,41,66,4],[64,0,67,4],[64,8,67,8,"start"],[64,13,67,13],[64,16,67,16,"details"],[64,23,67,23],[64,24,67,24,"last"],[64,28,67,16],[64,31,67,31,"end"],[64,34,67,16],[64,37,67,37,"getLocation"],[64,48,67,48],[64,49,67,49,"badNode"],[64,56,67,48],[64,58,67,58],[64,65,67,48],[64,66,67,4],[65,0,68,4],[65,8,68,8,"css"],[65,11,68,11],[65,14,68,14,"details"],[65,21,68,21],[65,22,68,22,"css"],[65,25,68,4],[66,0,70,4,"error"],[66,4,70,4,"error"],[66,9,70,9],[66,10,70,10,"rawMessage"],[66,20,70,4],[66,23,70,23,"message"],[66,30,70,4],[67,0,71,4,"error"],[67,4,71,4,"error"],[67,9,71,9],[67,10,71,10,"syntax"],[67,16,71,4],[67,19,71,19,"syntax"],[67,25,71,25],[67,28,71,28,"generate"],[67,36,71,36],[67,37,71,37,"syntax"],[67,43,71,36],[67,44,71,25],[67,47,71,47],[67,58,71,4],[68,0,72,4,"error"],[68,4,72,4,"error"],[68,9,72,9],[68,10,72,10,"css"],[68,13,72,4],[68,16,72,16,"css"],[68,19,72,4],[69,0,73,4,"error"],[69,4,73,4,"error"],[69,9,73,9],[69,10,73,10,"mismatchOffset"],[69,24,73,4],[69,27,73,27,"mismatchOffset"],[69,41,73,4],[70,0,74,4,"error"],[70,4,74,4,"error"],[70,9,74,9],[70,10,74,10,"loc"],[70,13,74,4],[70,16,74,16],[71,0,75,8,"source"],[71,6,75,8,"source"],[71,12,75,14],[71,14,75,17,"badNode"],[71,21,75,24],[71,25,75,28,"badNode"],[71,32,75,35],[71,33,75,36,"loc"],[71,36,75,17],[71,40,75,43,"badNode"],[71,47,75,50],[71,48,75,51,"loc"],[71,51,75,43],[71,52,75,55,"source"],[71,58,75,16],[71,62,75,66],[71,73,74,16],[72,0,76,8,"start"],[72,6,76,8,"start"],[72,11,76,13],[72,13,76,15,"start"],[72,18,74,16],[73,0,77,8,"end"],[73,6,77,8,"end"],[73,9,77,11],[73,11,77,13,"end"],[74,0,74,16],[74,5,74,4],[75,0,79,4,"error"],[75,4,79,4,"error"],[75,9,79,9],[75,10,79,10,"line"],[75,14,79,4],[75,17,79,17,"start"],[75,22,79,22],[75,25,79,25,"start"],[75,30,79,30],[75,31,79,31,"line"],[75,35,79,22],[75,38,79,38,"undefined"],[75,47,79,4],[76,0,80,4,"error"],[76,4,80,4,"error"],[76,9,80,9],[76,10,80,10,"column"],[76,16,80,4],[76,19,80,19,"start"],[76,24,80,24],[76,27,80,27,"start"],[76,32,80,32],[76,33,80,33,"column"],[76,39,80,24],[76,42,80,42,"undefined"],[76,51,80,4],[77,0,81,4,"error"],[77,4,81,4,"error"],[77,9,81,9],[77,10,81,10,"offset"],[77,16,81,4],[77,19,81,19,"start"],[77,24,81,24],[77,27,81,27,"start"],[77,32,81,32],[77,33,81,33,"offset"],[77,39,81,24],[77,42,81,42,"undefined"],[77,51,81,4],[78,0,82,4,"error"],[78,4,82,4,"error"],[78,9,82,9],[78,10,82,10,"message"],[78,17,82,4],[78,20,82,20,"message"],[78,27,82,27],[78,30,82,30],[78,34,82,20],[78,37,83,8],[78,49,82,20],[78,52,83,23,"error"],[78,57,83,28],[78,58,83,29,"syntax"],[78,64,82,20],[78,67,83,38],[78,71,82,20],[78,74,84,8],[78,86,82,20],[78,90,84,24,"error"],[78,95,84,29],[78,96,84,30,"css"],[78,99,84,24],[78,103,84,37],[78,119,82,20],[78,123,84,57],[78,127,82,20],[78,130,85,8],[78,142,82,20],[78,145,85,23],[78,149,85,27,"Array"],[78,154,85,23],[78,155,85,33,"error"],[78,160,85,38],[78,161,85,39,"mismatchOffset"],[78,175,85,33],[78,178,85,56],[78,179,85,23],[78,181,85,59,"join"],[78,185,85,23],[78,186,85,64],[78,189,85,23],[78,190,82,20],[78,193,85,71],[78,196,82,4],[79,0,87,4],[79,11,87,11,"error"],[79,16,87,4],[80,0,88,1],[80,3,61,0],[82,0,90,0,"module"],[82,2,90,0,"module"],[82,8,90,6],[82,9,90,7,"exports"],[82,16,90,0],[82,19,90,17],[83,0,91,4,"SyntaxReferenceError"],[83,4,91,4,"SyntaxReferenceError"],[83,24,91,24],[83,26,91,26,"SyntaxReferenceError"],[83,46,90,17],[84,0,92,4,"MatchError"],[84,4,92,4,"MatchError"],[84,14,92,14],[84,16,92,16,"MatchError"],[85,0,90,17],[85,3,90,0]]},"type":"js/module"}]}