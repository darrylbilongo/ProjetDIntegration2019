{"dependencies":[{"name":"../utils/createCustomError","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var createCustomError = _$$_REQUIRE(_dependencyMap[0], \"../utils/createCustomError\");\n\n  var MAX_LINE_LENGTH = 100;\n  var OFFSET_CORRECTION = 60;\n  var TAB_REPLACEMENT = '    ';\n\n  function sourceFragment(error, extraLines) {\n    function processLines(start, end) {\n      return lines.slice(start, end).map(function (line, idx) {\n        var num = String(start + idx + 1);\n\n        while (num.length < maxNumLength) {\n          num = ' ' + num;\n        }\n\n        return num + ' |' + line;\n      }).join('\\n');\n    }\n\n    var lines = error.source.split(/\\r\\n?|\\n|\\f/);\n    var line = error.line;\n    var column = error.column;\n    var startLine = Math.max(1, line - extraLines) - 1;\n    var endLine = Math.min(line + extraLines, lines.length + 1);\n    var maxNumLength = Math.max(4, String(endLine).length) + 1;\n    var cutLeft = 0;\n    column += (TAB_REPLACEMENT.length - 1) * (lines[line - 1].substr(0, column - 1).match(/\\t/g) || []).length;\n\n    if (column > MAX_LINE_LENGTH) {\n      cutLeft = column - OFFSET_CORRECTION + 3;\n      column = OFFSET_CORRECTION - 2;\n    }\n\n    for (var i = startLine; i <= endLine; i++) {\n      if (i >= 0 && i < lines.length) {\n        lines[i] = lines[i].replace(/\\t/g, TAB_REPLACEMENT);\n        lines[i] = (cutLeft > 0 && lines[i].length > cutLeft ? \"\\u2026\" : '') + lines[i].substr(cutLeft, MAX_LINE_LENGTH - 2) + (lines[i].length > cutLeft + MAX_LINE_LENGTH - 1 ? \"\\u2026\" : '');\n      }\n    }\n\n    return [processLines(startLine, line), new Array(column + maxNumLength + 2).join('-') + '^', processLines(line, endLine)].filter(Boolean).join('\\n');\n  }\n\n  var SyntaxError = function SyntaxError(message, source, offset, line, column) {\n    var error = createCustomError('SyntaxError', message);\n    error.source = source;\n    error.offset = offset;\n    error.line = line;\n    error.column = column;\n\n    error.sourceFragment = function (extraLines) {\n      return sourceFragment(error, isNaN(extraLines) ? 0 : extraLines);\n    };\n\n    Object.defineProperty(error, 'formattedMessage', {\n      get: function get() {\n        return 'Parse error: ' + error.message + '\\n' + sourceFragment(error, 2);\n      }\n    });\n    error.parseError = {\n      offset: offset,\n      line: line,\n      column: column\n    };\n    return error;\n  };\n\n  module.exports = SyntaxError;\n});","map":[[2,0,1,0],[2,6,1,4,"createCustomError"],[2,23,1,21],[2,26,1,24,"require"],[2,37,1,31],[2,86,1,0],[4,0,2,0],[4,6,2,4,"MAX_LINE_LENGTH"],[4,21,2,19],[4,24,2,22],[4,27,2,0],[5,0,3,0],[5,6,3,4,"OFFSET_CORRECTION"],[5,23,3,21],[5,26,3,24],[5,28,3,0],[6,0,4,0],[6,6,4,4,"TAB_REPLACEMENT"],[6,21,4,19],[6,24,4,22],[6,30,4,0],[8,0,6,0],[8,11,6,9,"sourceFragment"],[8,25,6,0],[8,26,6,24,"error"],[8,31,6,0],[8,33,6,31,"extraLines"],[8,43,6,0],[8,45,6,43],[9,0,7,4],[9,13,7,13,"processLines"],[9,25,7,4],[9,26,7,26,"start"],[9,31,7,4],[9,33,7,33,"end"],[9,36,7,4],[9,38,7,38],[10,0,8,8],[10,13,8,15,"lines"],[10,18,8,20],[10,19,8,21,"slice"],[10,24,8,15],[10,25,8,27,"start"],[10,30,8,15],[10,32,8,34,"end"],[10,35,8,15],[10,37,8,39,"map"],[10,40,8,15],[10,41,8,43],[10,51,8,52,"line"],[10,55,8,43],[10,57,8,58,"idx"],[10,60,8,43],[10,62,8,63],[11,0,9,12],[11,12,9,16,"num"],[11,15,9,19],[11,18,9,22,"String"],[11,24,9,28],[11,25,9,29,"start"],[11,30,9,34],[11,33,9,37,"idx"],[11,36,9,29],[11,39,9,43],[11,40,9,28],[11,41,9,12],[13,0,11,12],[13,15,11,19,"num"],[13,18,11,22],[13,19,11,23,"length"],[13,25,11,19],[13,28,11,32,"maxNumLength"],[13,40,11,12],[13,42,11,46],[14,0,12,16,"num"],[14,10,12,16,"num"],[14,13,12,19],[14,16,12,22],[14,22,12,28,"num"],[14,25,12,16],[15,0,13,13],[17,0,15,12],[17,15,15,19,"num"],[17,18,15,22],[17,21,15,25],[17,25,15,19],[17,28,15,32,"line"],[17,32,15,12],[18,0,16,9],[18,7,8,15],[18,9,16,11,"join"],[18,13,8,15],[18,14,16,16],[18,18,8,15],[18,19,8,8],[19,0,17,5],[21,0,19,4],[21,8,19,8,"lines"],[21,13,19,13],[21,16,19,16,"error"],[21,21,19,21],[21,22,19,22,"source"],[21,28,19,16],[21,29,19,29,"split"],[21,34,19,16],[21,35,19,35],[21,48,19,16],[21,49,19,4],[22,0,20,4],[22,8,20,8,"line"],[22,12,20,12],[22,15,20,15,"error"],[22,20,20,20],[22,21,20,21,"line"],[22,25,20,4],[23,0,21,4],[23,8,21,8,"column"],[23,14,21,14],[23,17,21,17,"error"],[23,22,21,22],[23,23,21,23,"column"],[23,29,21,4],[24,0,22,4],[24,8,22,8,"startLine"],[24,17,22,17],[24,20,22,20,"Math"],[24,24,22,24],[24,25,22,25,"max"],[24,28,22,20],[24,29,22,29],[24,30,22,20],[24,32,22,32,"line"],[24,36,22,36],[24,39,22,39,"extraLines"],[24,49,22,20],[24,53,22,53],[24,54,22,4],[25,0,23,4],[25,8,23,8,"endLine"],[25,15,23,15],[25,18,23,18,"Math"],[25,22,23,22],[25,23,23,23,"min"],[25,26,23,18],[25,27,23,27,"line"],[25,31,23,31],[25,34,23,34,"extraLines"],[25,44,23,18],[25,46,23,46,"lines"],[25,51,23,51],[25,52,23,52,"length"],[25,58,23,46],[25,61,23,61],[25,62,23,18],[25,63,23,4],[26,0,24,4],[26,8,24,8,"maxNumLength"],[26,20,24,20],[26,23,24,23,"Math"],[26,27,24,27],[26,28,24,28,"max"],[26,31,24,23],[26,32,24,32],[26,33,24,23],[26,35,24,35,"String"],[26,41,24,41],[26,42,24,42,"endLine"],[26,49,24,41],[26,50,24,35],[26,51,24,51,"length"],[26,57,24,23],[26,61,24,61],[26,62,24,4],[27,0,25,4],[27,8,25,8,"cutLeft"],[27,15,25,15],[27,18,25,18],[27,19,25,4],[28,0,28,4,"column"],[28,4,28,4,"column"],[28,10,28,10],[28,14,28,14],[28,15,28,15,"TAB_REPLACEMENT"],[28,30,28,30],[28,31,28,31,"length"],[28,37,28,15],[28,40,28,40],[28,41,28,14],[28,45,28,45],[28,46,28,46,"lines"],[28,51,28,51],[28,52,28,52,"line"],[28,56,28,56],[28,59,28,59],[28,60,28,51],[28,61,28,46],[28,62,28,62,"substr"],[28,68,28,46],[28,69,28,69],[28,70,28,46],[28,72,28,72,"column"],[28,78,28,78],[28,81,28,81],[28,82,28,46],[28,84,28,84,"match"],[28,89,28,46],[28,90,28,90],[28,95,28,46],[28,100,28,100],[28,102,28,45],[28,104,28,104,"length"],[28,110,28,4],[30,0,30,4],[30,8,30,8,"column"],[30,14,30,14],[30,17,30,17,"MAX_LINE_LENGTH"],[30,32,30,4],[30,34,30,34],[31,0,31,8,"cutLeft"],[31,6,31,8,"cutLeft"],[31,13,31,15],[31,16,31,18,"column"],[31,22,31,24],[31,25,31,27,"OFFSET_CORRECTION"],[31,42,31,18],[31,45,31,47],[31,46,31,8],[32,0,32,8,"column"],[32,6,32,8,"column"],[32,12,32,14],[32,15,32,17,"OFFSET_CORRECTION"],[32,32,32,34],[32,35,32,37],[32,36,32,8],[33,0,33,5],[35,0,35,4],[35,9,35,9],[35,13,35,13,"i"],[35,14,35,14],[35,17,35,17,"startLine"],[35,26,35,4],[35,28,35,28,"i"],[35,29,35,29],[35,33,35,33,"endLine"],[35,40,35,4],[35,42,35,42,"i"],[35,43,35,43],[35,45,35,4],[35,47,35,47],[36,0,36,8],[36,10,36,12,"i"],[36,11,36,13],[36,15,36,17],[36,16,36,12],[36,20,36,22,"i"],[36,21,36,23],[36,24,36,26,"lines"],[36,29,36,31],[36,30,36,32,"length"],[36,36,36,8],[36,38,36,40],[37,0,37,12,"lines"],[37,8,37,12,"lines"],[37,13,37,17],[37,14,37,18,"i"],[37,15,37,17],[37,16,37,12],[37,19,37,23,"lines"],[37,24,37,28],[37,25,37,29,"i"],[37,26,37,28],[37,27,37,23],[37,28,37,32,"replace"],[37,35,37,23],[37,36,37,40],[37,41,37,23],[37,43,37,47,"TAB_REPLACEMENT"],[37,58,37,23],[37,59,37,12],[38,0,38,12,"lines"],[38,8,38,12,"lines"],[38,13,38,17],[38,14,38,18,"i"],[38,15,38,17],[38,16,38,12],[38,19,39,16],[38,20,39,17,"cutLeft"],[38,27,39,24],[38,30,39,27],[38,31,39,17],[38,35,39,32,"lines"],[38,40,39,37],[38,41,39,38,"i"],[38,42,39,37],[38,43,39,32],[38,44,39,41,"length"],[38,50,39,32],[38,53,39,50,"cutLeft"],[38,60,39,17],[38,63,39,60],[38,71,39,17],[38,74,39,71],[38,76,39,16],[38,80,40,16,"lines"],[38,85,40,21],[38,86,40,22,"i"],[38,87,40,21],[38,88,40,16],[38,89,40,25,"substr"],[38,95,40,16],[38,96,40,32,"cutLeft"],[38,103,40,16],[38,105,40,41,"MAX_LINE_LENGTH"],[38,120,40,56],[38,123,40,59],[38,124,40,16],[38,125,39,16],[38,129,41,17,"lines"],[38,134,41,22],[38,135,41,23,"i"],[38,136,41,22],[38,137,41,17],[38,138,41,26,"length"],[38,144,41,17],[38,147,41,35,"cutLeft"],[38,154,41,42],[38,157,41,45,"MAX_LINE_LENGTH"],[38,172,41,35],[38,175,41,63],[38,176,41,17],[38,179,41,67],[38,187,41,17],[38,190,41,78],[38,192,39,16],[38,193,38,12],[39,0,42,9],[40,0,43,5],[42,0,45,4],[42,11,45,11],[42,12,46,8,"processLines"],[42,24,46,20],[42,25,46,21,"startLine"],[42,34,46,20],[42,36,46,32,"line"],[42,40,46,20],[42,41,45,11],[42,43,47,8],[42,47,47,12,"Array"],[42,52,47,8],[42,53,47,18,"column"],[42,59,47,24],[42,62,47,27,"maxNumLength"],[42,74,47,18],[42,77,47,42],[42,78,47,8],[42,80,47,45,"join"],[42,84,47,8],[42,85,47,50],[42,88,47,8],[42,92,47,57],[42,95,45,11],[42,97,48,8,"processLines"],[42,109,48,20],[42,110,48,21,"line"],[42,114,48,20],[42,116,48,27,"endLine"],[42,123,48,20],[42,124,45,11],[42,126,49,6,"filter"],[42,132,45,11],[42,133,49,13,"Boolean"],[42,140,45,11],[42,142,49,22,"join"],[42,146,45,11],[42,147,49,27],[42,151,45,11],[42,152,45,4],[43,0,50,1],[45,0,52,0],[45,6,52,4,"SyntaxError"],[45,17,52,15],[45,20,52,18],[45,29,52,4,"SyntaxError"],[45,40,52,18],[45,41,52,27,"message"],[45,48,52,18],[45,50,52,36,"source"],[45,56,52,18],[45,58,52,44,"offset"],[45,64,52,18],[45,66,52,52,"line"],[45,70,52,18],[45,72,52,58,"column"],[45,78,52,18],[45,80,52,66],[46,0,53,4],[46,8,53,8,"error"],[46,13,53,13],[46,16,53,16,"createCustomError"],[46,33,53,33],[46,34,53,34],[46,47,53,33],[46,49,53,49,"message"],[46,56,53,33],[46,57,53,4],[47,0,55,4,"error"],[47,4,55,4,"error"],[47,9,55,9],[47,10,55,10,"source"],[47,16,55,4],[47,19,55,19,"source"],[47,25,55,4],[48,0,56,4,"error"],[48,4,56,4,"error"],[48,9,56,9],[48,10,56,10,"offset"],[48,16,56,4],[48,19,56,19,"offset"],[48,25,56,4],[49,0,57,4,"error"],[49,4,57,4,"error"],[49,9,57,9],[49,10,57,10,"line"],[49,14,57,4],[49,17,57,17,"line"],[49,21,57,4],[50,0,58,4,"error"],[50,4,58,4,"error"],[50,9,58,9],[50,10,58,10,"column"],[50,16,58,4],[50,19,58,19,"column"],[50,25,58,4],[52,0,60,4,"error"],[52,4,60,4,"error"],[52,9,60,9],[52,10,60,10,"sourceFragment"],[52,24,60,4],[52,27,60,27],[52,37,60,36,"extraLines"],[52,47,60,27],[52,49,60,48],[53,0,61,8],[53,13,61,15,"sourceFragment"],[53,27,61,29],[53,28,61,30,"error"],[53,33,61,29],[53,35,61,37,"isNaN"],[53,40,61,42],[53,41,61,43,"extraLines"],[53,51,61,42],[53,52,61,37],[53,55,61,57],[53,56,61,37],[53,59,61,61,"extraLines"],[53,69,61,29],[53,70,61,8],[54,0,62,5],[54,5,60,4],[56,0,63,4,"Object"],[56,4,63,4,"Object"],[56,10,63,10],[56,11,63,11,"defineProperty"],[56,25,63,4],[56,26,63,26,"error"],[56,31,63,4],[56,33,63,33],[56,51,63,4],[56,53,63,53],[57,0,64,8,"get"],[57,6,64,8,"get"],[57,9,64,11],[57,11,64,13],[57,26,64,24],[58,0,65,12],[58,15,66,16],[58,33,66,34,"error"],[58,38,66,39],[58,39,66,40,"message"],[58,46,66,16],[58,49,66,50],[58,53,66,16],[58,56,67,16,"sourceFragment"],[58,70,67,30],[58,71,67,31,"error"],[58,76,67,30],[58,78,67,38],[58,79,67,30],[58,80,65,12],[59,0,69,9],[60,0,63,53],[60,5,63,4],[61,0,73,4,"error"],[61,4,73,4,"error"],[61,9,73,9],[61,10,73,10,"parseError"],[61,20,73,4],[61,23,73,23],[62,0,74,8,"offset"],[62,6,74,8,"offset"],[62,12,74,14],[62,14,74,16,"offset"],[62,20,73,23],[63,0,75,8,"line"],[63,6,75,8,"line"],[63,10,75,12],[63,12,75,14,"line"],[63,16,73,23],[64,0,76,8,"column"],[64,6,76,8,"column"],[64,12,76,14],[64,14,76,16,"column"],[65,0,73,23],[65,5,73,4],[66,0,79,4],[66,11,79,11,"error"],[66,16,79,4],[67,0,80,1],[67,3,52,0],[69,0,82,0,"module"],[69,2,82,0,"module"],[69,8,82,6],[69,9,82,7,"exports"],[69,16,82,0],[69,19,82,17,"SyntaxError"],[69,30,82,0]]},"type":"js/module"}]}