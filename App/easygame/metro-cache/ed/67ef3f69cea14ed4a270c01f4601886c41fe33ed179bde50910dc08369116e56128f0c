{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./../../react-transform-hmr/lib/index.js","data":{"isAsync":false}},{"name":"./elements/Rect","data":{"isAsync":false}},{"name":"./elements/Circle","data":{"isAsync":false}},{"name":"./elements/Ellipse","data":{"isAsync":false}},{"name":"./elements/Polygon","data":{"isAsync":false}},{"name":"./elements/Polyline","data":{"isAsync":false}},{"name":"./elements/Line","data":{"isAsync":false}},{"name":"./elements/Svg","data":{"isAsync":false}},{"name":"./elements/Path","data":{"isAsync":false}},{"name":"./elements/G","data":{"isAsync":false}},{"name":"./elements/Text","data":{"isAsync":false}},{"name":"./elements/TSpan","data":{"isAsync":false}},{"name":"./elements/TextPath","data":{"isAsync":false}},{"name":"./elements/Use","data":{"isAsync":false}},{"name":"./elements/Image","data":{"isAsync":false}},{"name":"./elements/Symbol","data":{"isAsync":false}},{"name":"./elements/Defs","data":{"isAsync":false}},{"name":"./elements/LinearGradient","data":{"isAsync":false}},{"name":"./elements/RadialGradient","data":{"isAsync":false}},{"name":"./elements/Stop","data":{"isAsync":false}},{"name":"./elements/ClipPath","data":{"isAsync":false}},{"name":"./elements/Pattern","data":{"isAsync":false}},{"name":"./elements/Mask","data":{"isAsync":false}},{"name":"./elements/Marker","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.SvgAst = SvgAst;\n  exports.SvgXml = SvgXml;\n  exports.fetchText = fetchText;\n  exports.SvgUri = SvgUri;\n  exports.getStyle = getStyle;\n  exports.astToReact = astToReact;\n  exports.parse = _parse;\n  exports.camelCase = exports.SvgFromUri = exports.SvgFromXml = exports.err = exports.tags = void 0;\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf4 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/inherits\"));\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"@babel/runtime/regenerator\"));\n\n  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"@babel/runtime/helpers/extends\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"./../../react-transform-hmr/lib/index.js\"));\n\n  var _Rect = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"./elements/Rect\"));\n\n  var _Circle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13], \"./elements/Circle\"));\n\n  var _Ellipse = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14], \"./elements/Ellipse\"));\n\n  var _Polygon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15], \"./elements/Polygon\"));\n\n  var _Polyline = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16], \"./elements/Polyline\"));\n\n  var _Line = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17], \"./elements/Line\"));\n\n  var _Svg = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18], \"./elements/Svg\"));\n\n  var _Path = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19], \"./elements/Path\"));\n\n  var _G = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20], \"./elements/G\"));\n\n  var _Text = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21], \"./elements/Text\"));\n\n  var _TSpan = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[22], \"./elements/TSpan\"));\n\n  var _TextPath = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[23], \"./elements/TextPath\"));\n\n  var _Use = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[24], \"./elements/Use\"));\n\n  var _Image = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[25], \"./elements/Image\"));\n\n  var _Symbol = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[26], \"./elements/Symbol\"));\n\n  var _Defs = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[27], \"./elements/Defs\"));\n\n  var _LinearGradient = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[28], \"./elements/LinearGradient\"));\n\n  var _RadialGradient = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[29], \"./elements/RadialGradient\"));\n\n  var _Stop = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[30], \"./elements/Stop\"));\n\n  var _ClipPath = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[31], \"./elements/ClipPath\"));\n\n  var _Pattern = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[32], \"./elements/Pattern\"));\n\n  var _Mask = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[33], \"./elements/Mask\"));\n\n  var _Marker = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[34], \"./elements/Marker\"));\n\n  var _jsxFileName = \"/home/mandamtang/ProjetDIntegration2019/App/easygame/node_modules/react-native-svg/src/xml.tsx\";\n  var _components = {\n    SvgFromXml: {\n      displayName: \"SvgFromXml\"\n    },\n    SvgFromUri: {\n      displayName: \"SvgFromUri\"\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"node_modules/react-native-svg/src/xml.tsx\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var tags = {\n    svg: _Svg.default,\n    circle: _Circle.default,\n    ellipse: _Ellipse.default,\n    g: _G.default,\n    text: _Text.default,\n    tspan: _TSpan.default,\n    textPath: _TextPath.default,\n    path: _Path.default,\n    polygon: _Polygon.default,\n    polyline: _Polyline.default,\n    line: _Line.default,\n    rect: _Rect.default,\n    use: _Use.default,\n    image: _Image.default,\n    symbol: _Symbol.default,\n    defs: _Defs.default,\n    linearGradient: _LinearGradient.default,\n    radialGradient: _RadialGradient.default,\n    stop: _Stop.default,\n    clipPath: _ClipPath.default,\n    pattern: _Pattern.default,\n    mask: _Mask.default,\n    marker: _Marker.default\n  };\n  exports.tags = tags;\n\n  function missingTag() {\n    return null;\n  }\n\n  function SvgAst(_ref) {\n    var ast = _ref.ast,\n        override = _ref.override;\n\n    if (!ast) {\n      return null;\n    }\n\n    var props = ast.props,\n        children = ast.children;\n    return _react.default.createElement(_Svg.default, (0, _extends2.default)({}, props, override, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      }\n    }), children);\n  }\n\n  function SvgXml(props) {\n    var xml = props.xml,\n        override = props.override;\n    var ast = (0, _react.useMemo)(function () {\n      return xml !== null ? _parse(xml) : null;\n    }, [xml]);\n    return _react.default.createElement(SvgAst, {\n      ast: ast,\n      override: override || props,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      }\n    });\n  }\n\n  function fetchText(uri) {\n    var response;\n    return _regenerator.default.async(function fetchText$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regenerator.default.awrap(fetch(uri));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return _regenerator.default.awrap(response.text());\n\n          case 5:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }\n\n  var err = console.error.bind(console);\n  exports.err = err;\n\n  function SvgUri(props) {\n    var uri = props.uri;\n\n    var _useState = (0, _react.useState)(null),\n        _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n        xml = _useState2[0],\n        setXml = _useState2[1];\n\n    (0, _react.useEffect)(function () {\n      uri ? fetchText(uri).then(setXml).catch(err) : setXml(null);\n    }, [uri]);\n    return _react.default.createElement(SvgXml, {\n      xml: xml,\n      override: props,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      }\n    });\n  }\n\n  var SvgFromXml = function (_Component) {\n    (0, _inherits2.default)(SvgFromXml, _Component);\n\n    function SvgFromXml() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      (0, _classCallCheck2.default)(this, SvgFromXml);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf4.default)(SvgFromXml)).call.apply(_getPrototypeOf2, [this].concat(args)));\n      _this.state = {\n        ast: null\n      };\n      return _this;\n    }\n\n    (0, _createClass2.default)(SvgFromXml, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this.parse(this.props.xml);\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        var xml = this.props.xml;\n\n        if (xml !== prevProps.xml) {\n          this.parse(xml);\n        }\n      }\n    }, {\n      key: \"parse\",\n      value: function parse(xml) {\n        try {\n          this.setState({\n            ast: xml ? _parse(xml) : null\n          });\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var props = this.props,\n            ast = this.state.ast;\n        return _react.default.createElement(SvgAst, {\n          ast: ast,\n          override: props.override || props,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          }\n        });\n      }\n    }]);\n    return SvgFromXml;\n  }(_react.Component);\n\n  exports.SvgFromXml = SvgFromXml;\n  exports.SvgFromXml = SvgFromXml = _wrapComponent(\"SvgFromXml\")(SvgFromXml);\n\n  var SvgFromUri = function (_Component2) {\n    (0, _inherits2.default)(SvgFromUri, _Component2);\n\n    function SvgFromUri() {\n      var _getPrototypeOf3;\n\n      var _this2;\n\n      (0, _classCallCheck2.default)(this, SvgFromUri);\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this2 = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf3 = (0, _getPrototypeOf4.default)(SvgFromUri)).call.apply(_getPrototypeOf3, [this].concat(args)));\n      _this2.state = {\n        xml: null\n      };\n      return _this2;\n    }\n\n    (0, _createClass2.default)(SvgFromUri, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this.fetch(this.props.uri);\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        var uri = this.props.uri;\n\n        if (uri !== prevProps.uri) {\n          this.fetch(uri);\n        }\n      }\n    }, {\n      key: \"fetch\",\n      value: function fetch(uri) {\n        return _regenerator.default.async(function fetch$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.t0 = this;\n\n                if (!uri) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                _context2.next = 5;\n                return _regenerator.default.awrap(fetchText(uri));\n\n              case 5:\n                _context2.t1 = _context2.sent;\n                _context2.next = 9;\n                break;\n\n              case 8:\n                _context2.t1 = null;\n\n              case 9:\n                _context2.t2 = _context2.t1;\n                _context2.t3 = {\n                  xml: _context2.t2\n                };\n\n                _context2.t0.setState.call(_context2.t0, _context2.t3);\n\n                _context2.next = 17;\n                break;\n\n              case 14:\n                _context2.prev = 14;\n                _context2.t4 = _context2[\"catch\"](0);\n                console.error(_context2.t4);\n\n              case 17:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, this, [[0, 14]]);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var props = this.props,\n            xml = this.state.xml;\n        return _react.default.createElement(SvgFromXml, {\n          xml: xml,\n          override: props,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          }\n        });\n      }\n    }]);\n    return SvgFromUri;\n  }(_react.Component);\n\n  exports.SvgFromUri = SvgFromUri;\n  exports.SvgFromUri = SvgFromUri = _wrapComponent(\"SvgFromUri\")(SvgFromUri);\n\n  var upperCase = function upperCase(_match, letter) {\n    return letter.toUpperCase();\n  };\n\n  var camelCase = function camelCase(phrase) {\n    return phrase.replace(/[:\\-]([a-z])/g, upperCase);\n  };\n\n  exports.camelCase = camelCase;\n\n  function getStyle(string) {\n    var style = {};\n    var declarations = string.split(';');\n    var length = declarations.length;\n\n    for (var i = 0; i < length; i++) {\n      var declaration = declarations[i];\n\n      if (declaration.length !== 0) {\n        var split = declaration.split(':');\n        var _property = split[0];\n        var value = split[1];\n        style[camelCase(_property.trim())] = value.trim();\n      }\n    }\n\n    return style;\n  }\n\n  function astToReact(value, index) {\n    if (typeof value === 'object') {\n      var Tag = value.Tag,\n          props = value.props,\n          children = value.children;\n      return _react.default.createElement(Tag, (0, _extends2.default)({\n        key: index\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        }\n      }), children.map(astToReact));\n    }\n\n    return value;\n  }\n\n  function repeat(str, i) {\n    var result = '';\n\n    while (i--) {\n      result += str;\n    }\n\n    return result;\n  }\n\n  var toSpaces = function toSpaces(tabs) {\n    return repeat('  ', tabs.length);\n  };\n\n  function locate(source, i) {\n    var lines = source.split('\\n');\n    var nLines = lines.length;\n    var column = i;\n    var line = 0;\n\n    for (; line < nLines; line++) {\n      var length = lines[line].length;\n\n      if (column >= length) {\n        column -= length;\n      } else {\n        break;\n      }\n    }\n\n    var before = source.slice(0, i).replace(/^\\t+/, toSpaces);\n    var beforeExec = /(^|\\n).*$/.exec(before);\n    var beforeLine = beforeExec && beforeExec[0] || '';\n    var after = source.slice(i);\n    var afterExec = /.*(\\n|$)/.exec(after);\n    var afterLine = afterExec && afterExec[0];\n    var pad = repeat(' ', beforeLine.length);\n    var snippet = \"\" + beforeLine + afterLine + \"\\n\" + pad + \"^\";\n    return {\n      line: line,\n      column: column,\n      snippet: snippet\n    };\n  }\n\n  var validNameCharacters = /[a-zA-Z0-9:_-]/;\n  var whitespace = /[\\s\\t\\r\\n]/;\n  var quotemarks = /['\"]/;\n\n  function _parse(source, middleware) {\n    var length = source.length;\n    var currentElement = null;\n    var state = metadata;\n    var children = null;\n    var root;\n    var stack = [];\n\n    function error(message) {\n      var _locate = locate(source, i),\n          line = _locate.line,\n          column = _locate.column,\n          snippet = _locate.snippet;\n\n      throw new Error(message + \" (\" + line + \":\" + column + \"). If this is valid SVG, it's probably a bug. Please raise an issue\\n\\n\" + snippet);\n    }\n\n    function metadata() {\n      while (i + 1 < length && (source[i] !== '<' || !validNameCharacters.test(source[i + 1]))) {\n        i++;\n      }\n\n      return neutral();\n    }\n\n    function neutral() {\n      var text = '';\n      var char;\n\n      while (i < length && (char = source[i]) !== '<') {\n        text += char;\n        i += 1;\n      }\n\n      if (/\\S/.test(text)) {\n        children.push(text);\n      }\n\n      if (source[i] === '<') {\n        return openingTag;\n      }\n\n      return neutral;\n    }\n\n    function openingTag() {\n      var char = source[i];\n\n      if (char === '?') {\n        return neutral;\n      }\n\n      if (char === '!') {\n        var start = i + 1;\n\n        if (source.slice(start, i + 3) === '--') {\n          return comment;\n        }\n\n        var end = i + 8;\n\n        if (source.slice(start, end) === '[CDATA[') {\n          return cdata;\n        }\n\n        if (/doctype/i.test(source.slice(start, end))) {\n          return neutral;\n        }\n      }\n\n      if (char === '/') {\n        return closingTag;\n      }\n\n      var tag = getName();\n      var props = {};\n      var element = {\n        tag: tag,\n        props: props,\n        children: [],\n        parent: currentElement,\n        Tag: tags[tag] || missingTag\n      };\n\n      if (currentElement) {\n        children.push(element);\n      } else {\n        root = element;\n      }\n\n      getAttributes(props);\n      var style = props.style;\n\n      if (typeof style === 'string') {\n        element.styles = style;\n        props.style = getStyle(style);\n      }\n\n      var selfClosing = false;\n\n      if (source[i] === '/') {\n        i += 1;\n        selfClosing = true;\n      }\n\n      if (source[i] !== '>') {\n        error('Expected >');\n      }\n\n      if (!selfClosing) {\n        currentElement = element;\n        children = element.children;\n        stack.push(element);\n      }\n\n      return neutral;\n    }\n\n    function comment() {\n      var index = source.indexOf('-->', i);\n\n      if (!~index) {\n        error('expected -->');\n      }\n\n      i = index + 2;\n      return neutral;\n    }\n\n    function cdata() {\n      var index = source.indexOf(']]>', i);\n\n      if (!~index) {\n        error('expected ]]>');\n      }\n\n      children.push(source.slice(i + 7, index));\n      i = index + 2;\n      return neutral;\n    }\n\n    function closingTag() {\n      var tag = getName();\n\n      if (!tag) {\n        error('Expected tag name');\n      }\n\n      if (currentElement && tag !== currentElement.tag) {\n        error(\"Expected closing tag </\" + tag + \"> to match opening tag <\" + currentElement.tag + \">\");\n      }\n\n      if (source[i] !== '>') {\n        error('Expected >');\n      }\n\n      stack.pop();\n      currentElement = stack[stack.length - 1];\n\n      if (currentElement) {\n        var _currentElement = currentElement;\n        children = _currentElement.children;\n      }\n\n      return neutral;\n    }\n\n    function getName() {\n      var name = '';\n      var char;\n\n      while (i < length && validNameCharacters.test(char = source[i])) {\n        name += char;\n        i += 1;\n      }\n\n      return name;\n    }\n\n    function getAttributes(props) {\n      while (i < length) {\n        if (!whitespace.test(source[i])) {\n          return;\n        }\n\n        allowSpaces();\n        var name = getName();\n\n        if (!name) {\n          return;\n        }\n\n        var value = true;\n        allowSpaces();\n\n        if (source[i] === '=') {\n          i += 1;\n          allowSpaces();\n          value = getAttributeValue();\n\n          if (!isNaN(+value) && value.trim() !== '') {\n            value = +value;\n          }\n        }\n\n        props[camelCase(name)] = value;\n      }\n    }\n\n    function getAttributeValue() {\n      return quotemarks.test(source[i]) ? getQuotedAttributeValue() : getUnquotedAttributeValue();\n    }\n\n    function getUnquotedAttributeValue() {\n      var value = '';\n\n      do {\n        var char = source[i];\n\n        if (char === ' ' || char === '>' || char === '/') {\n          return value;\n        }\n\n        value += char;\n        i += 1;\n      } while (i < length);\n\n      return value;\n    }\n\n    function getQuotedAttributeValue() {\n      var quotemark = source[i++];\n      var value = '';\n      var escaped = false;\n\n      while (i < length) {\n        var char = source[i++];\n\n        if (char === quotemark && !escaped) {\n          return value;\n        }\n\n        if (char === '\\\\' && !escaped) {\n          escaped = true;\n        }\n\n        value += escaped ? \"\\\\\" + char : char;\n        escaped = false;\n      }\n\n      return value;\n    }\n\n    function allowSpaces() {\n      while (i < length && whitespace.test(source[i])) {\n        i += 1;\n      }\n    }\n\n    var i = 0;\n\n    while (i < length) {\n      if (!state) {\n        error('Unexpected character');\n      }\n\n      state = state();\n      i += 1;\n    }\n\n    if (state !== neutral) {\n      error('Unexpected end of input');\n    }\n\n    if (root) {\n      var xml = (middleware ? middleware(root) : root) || root;\n\n      var _ast = xml.children.map(astToReact);\n\n      var jsx = xml;\n      jsx.children = _ast;\n      return jsx;\n    }\n\n    return null;\n  }\n});","map":[[34,0,1,0],[38,0,8,0],[40,0,9,0],[42,0,10,0],[44,0,11,0],[46,0,12,0],[48,0,13,0],[50,0,14,0],[52,0,15,0],[54,0,16,0],[56,0,17,0],[58,0,18,0],[60,0,19,0],[62,0,20,0],[64,0,21,0],[66,0,22,0],[68,0,23,0],[70,0,24,0],[72,0,25,0],[74,0,26,0],[76,0,27,0],[78,0,28,0],[80,0,29,0],[82,0,30,0],[107,0,32,7],[107,6,32,13,"tags"],[107,10,32,51],[107,13,32,54],[108,0,33,2,"svg"],[108,4,33,2,"svg"],[108,7,33,5],[108,9,33,7,"Svg"],[108,21,32,54],[109,0,34,2,"circle"],[109,4,34,2,"circle"],[109,10,34,8],[109,12,34,10,"Circle"],[109,27,32,54],[110,0,35,2,"ellipse"],[110,4,35,2,"ellipse"],[110,11,35,9],[110,13,35,11,"Ellipse"],[110,29,32,54],[111,0,36,2,"g"],[111,4,36,2,"g"],[111,5,36,3],[111,7,36,5,"G"],[111,17,32,54],[112,0,37,2,"text"],[112,4,37,2,"text"],[112,8,37,6],[112,10,37,8,"Text"],[112,23,32,54],[113,0,38,2,"tspan"],[113,4,38,2,"tspan"],[113,9,38,7],[113,11,38,9,"TSpan"],[113,25,32,54],[114,0,39,2,"textPath"],[114,4,39,2,"textPath"],[114,12,39,10],[114,14,39,12,"TextPath"],[114,31,32,54],[115,0,40,2,"path"],[115,4,40,2,"path"],[115,8,40,6],[115,10,40,8,"Path"],[115,23,32,54],[116,0,41,2,"polygon"],[116,4,41,2,"polygon"],[116,11,41,9],[116,13,41,11,"Polygon"],[116,29,32,54],[117,0,42,2,"polyline"],[117,4,42,2,"polyline"],[117,12,42,10],[117,14,42,12,"Polyline"],[117,31,32,54],[118,0,43,2,"line"],[118,4,43,2,"line"],[118,8,43,6],[118,10,43,8,"Line"],[118,23,32,54],[119,0,44,2,"rect"],[119,4,44,2,"rect"],[119,8,44,6],[119,10,44,8,"Rect"],[119,23,32,54],[120,0,45,2,"use"],[120,4,45,2,"use"],[120,7,45,5],[120,9,45,7,"Use"],[120,21,32,54],[121,0,46,2,"image"],[121,4,46,2,"image"],[121,9,46,7],[121,11,46,9,"Image"],[121,25,32,54],[122,0,47,2,"symbol"],[122,4,47,2,"symbol"],[122,10,47,8],[122,12,47,10,"Symbol"],[122,27,32,54],[123,0,48,2,"defs"],[123,4,48,2,"defs"],[123,8,48,6],[123,10,48,8,"Defs"],[123,23,32,54],[124,0,49,2,"linearGradient"],[124,4,49,2,"linearGradient"],[124,18,49,16],[124,20,49,18,"LinearGradient"],[124,43,32,54],[125,0,50,2,"radialGradient"],[125,4,50,2,"radialGradient"],[125,18,50,16],[125,20,50,18,"RadialGradient"],[125,43,32,54],[126,0,51,2,"stop"],[126,4,51,2,"stop"],[126,8,51,6],[126,10,51,8,"Stop"],[126,23,32,54],[127,0,52,2,"clipPath"],[127,4,52,2,"clipPath"],[127,12,52,10],[127,14,52,12,"ClipPath"],[127,31,32,54],[128,0,53,2,"pattern"],[128,4,53,2,"pattern"],[128,11,53,9],[128,13,53,11,"Pattern"],[128,29,32,54],[129,0,54,2,"mask"],[129,4,54,2,"mask"],[129,8,54,6],[129,10,54,8,"Mask"],[129,23,32,54],[130,0,55,2,"marker"],[130,4,55,2,"marker"],[130,10,55,8],[130,12,55,10,"Marker"],[131,0,32,54],[131,3,32,7],[134,0,58,0],[134,11,58,9,"missingTag"],[134,21,58,0],[134,24,58,22],[135,0,59,2],[135,11,59,9],[135,15,59,2],[136,0,60,1],[138,0,92,7],[138,11,92,16,"SvgAst"],[138,17,92,7],[138,24,92,52],[139,0,92,52],[139,8,92,25,"ast"],[139,11,92,52],[139,19,92,25,"ast"],[139,22,92,52],[140,0,92,52],[140,8,92,30,"override"],[140,16,92,52],[140,24,92,30,"override"],[140,32,92,52],[142,0,93,2],[142,8,93,6],[142,9,93,7,"ast"],[142,12,93,2],[142,14,93,12],[143,0,94,4],[143,13,94,11],[143,17,94,4],[144,0,95,3],[146,0,92,52],[146,8,96,10,"props"],[146,13,92,52],[146,16,96,30,"ast"],[146,19,92,52],[146,20,96,10,"props"],[146,25,92,52],[147,0,92,52],[147,8,96,17,"children"],[147,16,92,52],[147,19,96,30,"ast"],[147,22,92,52],[147,23,96,17,"children"],[147,31,92,52],[148,0,97,2],[148,11,98,4],[148,40,98,5],[148,52,98,4],[148,81,98,13,"props"],[148,86,98,4],[148,88,98,24,"override"],[148,96,98,4],[149,0,98,4],[150,0,98,4],[151,0,98,4],[152,0,98,4],[153,0,98,4],[153,8,99,7,"children"],[153,16,98,4],[153,17,97,2],[154,0,102,1],[156,0,104,7],[156,11,104,16,"SvgXml"],[156,17,104,7],[156,18,104,23,"props"],[156,23,104,7],[156,25,104,40],[157,0,104,40],[157,8,105,10,"xml"],[157,11,104,40],[157,14,105,28,"props"],[157,19,104,40],[157,20,105,10,"xml"],[157,23,104,40],[158,0,104,40],[158,8,105,15,"override"],[158,16,104,40],[158,19,105,28,"props"],[158,24,104,40],[158,25,105,15,"override"],[158,33,104,40],[159,0,106,2],[159,8,106,8,"ast"],[159,11,106,11],[159,14,106,14],[159,34,106,37],[160,0,106,37],[160,13,106,44,"xml"],[160,16,106,47],[160,21,106,52],[160,25,106,44],[160,28,106,59,"parse"],[160,34,106,64],[160,35,106,65,"xml"],[160,38,106,64],[160,39,106,44],[160,42,106,72],[160,46,106,37],[161,0,106,37],[161,5,106,14],[161,7,106,79],[161,8,107,4,"xml"],[161,11,106,79],[161,12,106,14],[161,13,106,2],[162,0,109,2],[162,11,109,9],[162,40,109,10],[162,46,109,9],[163,0,109,17],[163,6,109,17],[163,9,109,20],[163,11,109,22,"ast"],[163,14,109,9],[164,0,109,27],[164,6,109,27],[164,14,109,35],[164,16,109,37,"override"],[164,24,109,45],[164,28,109,49,"props"],[164,33,109,9],[165,0,109,9],[166,0,109,9],[167,0,109,9],[168,0,109,9],[169,0,109,9],[169,6,109,2],[170,0,110,1],[172,0,112,7],[172,11,112,22,"fetchText"],[172,20,112,7],[172,21,112,32,"uri"],[172,24,112,7],[173,0,112,7],[174,0,112,7],[175,0,112,7],[176,0,112,7],[177,0,112,7],[178,0,112,7],[179,0,112,7],[179,46,113,25,"fetch"],[179,51,113,30],[179,52,113,31,"uri"],[179,55,113,30],[179,56,112,7],[181,0,112,7],[182,0,113,8,"response"],[182,12,113,8,"response"],[182,20,112,7],[183,0,112,7],[184,0,112,7],[184,46,114,15,"response"],[184,54,114,23],[184,55,114,24,"text"],[184,59,114,15],[184,61,112,7],[186,0,112,7],[187,0,112,7],[189,0,112,7],[190,0,112,7],[191,0,112,7],[192,0,112,7],[193,0,112,7],[194,0,112,7],[195,0,112,7],[197,0,117,7],[197,6,117,13,"err"],[197,9,117,16],[197,12,117,19,"console"],[197,19,117,26],[197,20,117,27,"error"],[197,25,117,19],[197,26,117,33,"bind"],[197,30,117,19],[197,31,117,38,"console"],[197,38,117,19],[197,39,117,7],[200,0,119,7],[200,11,119,16,"SvgUri"],[200,17,119,7],[200,18,119,23,"props"],[200,23,119,7],[200,25,119,40],[201,0,119,40],[201,8,120,10,"uri"],[201,11,119,40],[201,14,120,18,"props"],[201,19,119,40],[201,20,120,10,"uri"],[201,23,119,40],[203,0,119,40],[203,20,121,24],[203,41,121,48],[203,45,121,24],[203,46,119,40],[204,0,119,40],[205,0,119,40],[205,8,121,9,"xml"],[205,11,119,40],[206,0,119,40],[206,8,121,14,"setXml"],[206,14,119,40],[208,0,122,2],[208,26,122,12],[208,38,122,18],[209,0,123,4,"uri"],[209,6,123,4,"uri"],[209,9,123,7],[209,12,124,8,"fetchText"],[209,21,124,17],[209,22,124,18,"uri"],[209,25,124,17],[209,26,124,8],[209,27,125,11,"then"],[209,31,124,8],[209,32,125,16,"setXml"],[209,38,124,8],[209,40,126,11,"catch"],[209,45,124,8],[209,46,126,17,"err"],[209,49,124,8],[209,50,123,7],[209,53,127,8,"setXml"],[209,59,127,14],[209,60,127,15],[209,64,127,14],[209,65,123,4],[210,0,128,3],[210,5,122,2],[210,7,128,5],[210,8,128,6,"uri"],[210,11,128,5],[210,12,122,2],[211,0,129,2],[211,11,129,9],[211,40,129,10],[211,46,129,9],[212,0,129,17],[212,6,129,17],[212,9,129,20],[212,11,129,22,"xml"],[212,14,129,9],[213,0,129,27],[213,6,129,27],[213,14,129,35],[213,16,129,37,"props"],[213,21,129,9],[214,0,129,9],[215,0,129,9],[216,0,129,9],[217,0,129,9],[218,0,129,9],[218,6,129,2],[219,0,130,1],[221,6,134,13,"SvgFromXml"],[221,16],[236,12,135,2,"state"],[236,17],[236,20,135,10],[237,0,135,12,"ast"],[237,8,135,12,"ast"],[237,11,135,15],[237,13,135,17],[238,0,135,10],[238,7],[244,42,136,22],[245,0,137,4],[245,13,137,9,"parse"],[245,18,137,4],[245,19,137,15],[245,24,137,20,"props"],[245,29,137,15],[245,30,137,26,"xml"],[245,33,137,4],[246,0,138,3],[249,41,139,21,"prevProps"],[249,50],[249,52,139,56],[250,0,139,56],[250,12,140,12,"xml"],[250,15,139,56],[250,18,140,20],[250,23,140,25,"props"],[250,28,139,56],[250,29,140,12,"xml"],[250,32,139,56],[252,0,141,4],[252,12,141,8,"xml"],[252,15,141,11],[252,20,141,16,"prevProps"],[252,29,141,25],[252,30,141,26,"xml"],[252,33,141,4],[252,35,141,31],[253,0,142,6],[253,15,142,11,"parse"],[253,20,142,6],[253,21,142,17,"xml"],[253,24,142,6],[254,0,143,5],[255,0,144,3],[258,28,145,8,"xml"],[258,31],[258,33,145,28],[259,0,146,4],[259,12,146,8],[260,0,147,6],[260,15,147,11,"setState"],[260,23,147,6],[260,24,147,20],[261,0,147,22,"ast"],[261,12,147,22,"ast"],[261,15,147,25],[261,17,147,27,"xml"],[261,20,147,30],[261,23,147,33,"parse"],[261,29,147,38],[261,30,147,39,"xml"],[261,33,147,38],[261,34,147,30],[261,37,147,46],[262,0,147,20],[262,11,147,6],[263,0,148,5],[263,9,146,4],[263,10,148,6],[263,17,148,13,"e"],[263,18,148,6],[263,20,148,16],[264,0,149,6,"console"],[264,10,149,6,"console"],[264,17,149,13],[264,18,149,14,"error"],[264,23,149,6],[264,24,149,20,"e"],[264,25,149,6],[265,0,150,5],[266,0,151,3],[269,31,152,11],[270,0,152,11],[270,12,154,6,"props"],[270,17,152,11],[270,20,156,8],[270,24,152,11],[270,25,154,6,"props"],[270,30,152,11],[271,0,152,11],[271,12,155,15,"ast"],[271,15,152,11],[271,18,156,8],[271,22,152,11],[271,23,155,6,"state"],[271,28,152,11],[271,29,155,15,"ast"],[271,32,152,11],[272,0,157,4],[272,15,157,11],[272,44,157,12],[272,50,157,11],[273,0,157,19],[273,10,157,19],[273,13,157,22],[273,15,157,24,"ast"],[273,18,157,11],[274,0,157,29],[274,10,157,29],[274,18,157,37],[274,20,157,39,"props"],[274,25,157,44],[274,26,157,45,"override"],[274,34,157,39],[274,38,157,57,"props"],[274,43,157,11],[275,0,157,11],[276,0,157,11],[277,0,157,11],[278,0,157,11],[279,0,157,11],[279,10,157,4],[280,0,158,3],[283,4,134,32,"Component"],[283,20],[288,6,161,13,"SvgFromUri"],[288,16],[303,13,162,2,"state"],[303,18],[303,21,162,10],[304,0,162,12,"xml"],[304,8,162,12,"xml"],[304,11,162,15],[304,13,162,17],[305,0,162,10],[305,7],[311,42,163,22],[312,0,164,4],[312,13,164,9,"fetch"],[312,18,164,4],[312,19,164,15],[312,24,164,20,"props"],[312,29,164,15],[312,30,164,26,"uri"],[312,33,164,4],[313,0,165,3],[316,41,166,21,"prevProps"],[316,50],[316,52,166,56],[317,0,166,56],[317,12,167,12,"uri"],[317,15,166,56],[317,18,167,20],[317,23,167,25,"props"],[317,28,166,56],[317,29,167,12,"uri"],[317,32,166,56],[319,0,168,4],[319,12,168,8,"uri"],[319,15,168,11],[319,20,168,16,"prevProps"],[319,29,168,25],[319,30,168,26,"uri"],[319,33,168,4],[319,35,168,31],[320,0,169,6],[320,15,169,11,"fetch"],[320,20,169,6],[320,21,169,17,"uri"],[320,24,169,6],[321,0,170,5],[322,0,171,3],[325,28,172,14,"uri"],[325,31],[331,31,174,6],[331,35],[333,21,174,27,"uri"],[333,24],[339,50,174,39,"fetchText"],[339,59,174,48],[339,60,174,49,"uri"],[339,63,174,48],[339,64],[347,31,174,56],[347,35],[352,0,174,22,"xml"],[352,18,174,22,"xml"],[352,21],[355,29,174,11,"setState"],[355,37],[363,0,176,6,"console"],[363,16,176,6,"console"],[363,23,176,13],[363,24,176,14,"error"],[363,29,176,6],[374,31,179,11],[375,0,179,11],[375,12,181,6,"props"],[375,17,179,11],[375,20,183,8],[375,24,179,11],[375,25,181,6,"props"],[375,30,179,11],[376,0,179,11],[376,12,182,15,"xml"],[376,15,179,11],[376,18,183,8],[376,22,179,11],[376,23,182,6,"state"],[376,28,179,11],[376,29,182,15,"xml"],[376,32,179,11],[377,0,184,4],[377,15,184,11],[377,44,184,12],[377,54,184,11],[378,0,184,23],[378,10,184,23],[378,13,184,26],[378,15,184,28,"xml"],[378,18,184,11],[379,0,184,33],[379,10,184,33],[379,18,184,41],[379,20,184,43,"props"],[379,25,184,11],[380,0,184,11],[381,0,184,11],[382,0,184,11],[383,0,184,11],[384,0,184,11],[384,10,184,4],[385,0,185,3],[388,4,161,32,"Component"],[388,20],[393,0,188,0],[393,6,188,6,"upperCase"],[393,15,188,15],[393,18,188,18],[393,27,188,6,"upperCase"],[393,36,188,18],[393,37,188,19,"_match"],[393,43,188,18],[393,45,188,35,"letter"],[393,51,188,18],[394,0,188,18],[394,11,188,54,"letter"],[394,17,188,60],[394,18,188,61,"toUpperCase"],[394,29,188,54],[394,31,188,18],[395,0,188,18],[395,3,188,0],[397,0,190,7],[397,6,190,13,"camelCase"],[397,15,190,22],[397,18,190,25],[397,27,190,13,"camelCase"],[397,36,190,25],[397,37,190,26,"phrase"],[397,43,190,25],[398,0,190,25],[398,11,191,2,"phrase"],[398,17,191,8],[398,18,191,9,"replace"],[398,25,191,2],[398,26,191,17],[398,41,191,2],[398,43,191,34,"upperCase"],[398,52,191,2],[398,53,190,25],[399,0,190,25],[399,3,190,7],[403,0,195,7],[403,11,195,16,"getStyle"],[403,19,195,7],[403,20,195,25,"string"],[403,26,195,7],[403,28,195,49],[404,0,196,2],[404,8,196,8,"style"],[404,13,196,21],[404,16,196,24],[404,18,196,2],[405,0,197,2],[405,8,197,8,"declarations"],[405,20,197,20],[405,23,197,23,"string"],[405,29,197,29],[405,30,197,30,"split"],[405,35,197,23],[405,36,197,36],[405,39,197,23],[405,40,197,2],[406,0,195,49],[406,8,198,10,"length"],[406,14,195,49],[406,17,198,21,"declarations"],[406,29,195,49],[406,30,198,10,"length"],[406,36,195,49],[408,0,199,2],[408,9,199,7],[408,13,199,11,"i"],[408,14,199,12],[408,17,199,15],[408,18,199,2],[408,20,199,18,"i"],[408,21,199,19],[408,24,199,22,"length"],[408,30,199,2],[408,32,199,30,"i"],[408,33,199,31],[408,35,199,2],[408,37,199,35],[409,0,200,4],[409,10,200,10,"declaration"],[409,21,200,21],[409,24,200,24,"declarations"],[409,36,200,36],[409,37,200,37,"i"],[409,38,200,36],[409,39,200,4],[411,0,201,4],[411,10,201,8,"declaration"],[411,21,201,19],[411,22,201,20,"length"],[411,28,201,8],[411,33,201,31],[411,34,201,4],[411,36,201,34],[412,0,202,6],[412,12,202,12,"split"],[412,17,202,17],[412,20,202,20,"declaration"],[412,31,202,31],[412,32,202,32,"split"],[412,37,202,20],[412,38,202,38],[412,41,202,20],[412,42,202,6],[413,0,203,6],[413,12,203,12,"property"],[413,21,203,20],[413,24,203,23,"split"],[413,29,203,28],[413,30,203,29],[413,31,203,28],[413,32,203,6],[414,0,204,6],[414,12,204,12,"value"],[414,17,204,17],[414,20,204,20,"split"],[414,25,204,25],[414,26,204,26],[414,27,204,25],[414,28,204,6],[415,0,205,6,"style"],[415,8,205,6,"style"],[415,13,205,11],[415,14,205,12,"camelCase"],[415,23,205,21],[415,24,205,22,"property"],[415,33,205,30],[415,34,205,31,"trim"],[415,38,205,22],[415,40,205,21],[415,41,205,11],[415,42,205,6],[415,45,205,42,"value"],[415,50,205,47],[415,51,205,48,"trim"],[415,55,205,42],[415,57,205,6],[416,0,206,5],[417,0,207,3],[419,0,208,2],[419,11,208,9,"style"],[419,16,208,2],[420,0,209,1],[422,0,211,7],[422,11,211,16,"astToReact"],[422,21,211,7],[422,22,212,2,"value"],[422,27,211,7],[422,29,213,2,"index"],[422,34,211,7],[422,36,214,24],[423,0,215,2],[423,8,215,6],[423,15,215,13,"value"],[423,20,215,6],[423,25,215,23],[423,33,215,2],[423,35,215,33],[424,0,215,33],[424,10,216,12,"Tag"],[424,13,215,33],[424,16,216,37,"value"],[424,21,215,33],[424,22,216,12,"Tag"],[424,25,215,33],[425,0,215,33],[425,10,216,17,"props"],[425,15,215,33],[425,18,216,37,"value"],[425,23,215,33],[425,24,216,17,"props"],[425,29,215,33],[426,0,215,33],[426,10,216,24,"children"],[426,18,215,33],[426,21,216,37,"value"],[426,26,215,33],[426,27,216,24,"children"],[426,35,215,33],[427,0,217,4],[427,13,218,6],[427,42,218,7],[427,45,218,6],[428,0,218,11],[428,8,218,11],[428,11,218,14],[428,13,218,16,"index"],[429,0,218,6],[429,9,218,27,"props"],[429,14,218,6],[430,0,218,6],[431,0,218,6],[432,0,218,6],[433,0,218,6],[434,0,218,6],[434,10,219,10,"children"],[434,18,219,9],[434,19,219,40,"map"],[434,22,219,9],[434,23,219,44,"astToReact"],[434,33,219,9],[434,34,218,6],[434,35,217,4],[435,0,222,3],[437,0,223,2],[437,11,223,9,"value"],[437,16,223,2],[438,0,224,1],[440,0,228,0],[440,11,228,9,"repeat"],[440,17,228,0],[440,18,228,16,"str"],[440,21,228,0],[440,23,228,29,"i"],[440,24,228,0],[440,26,228,40],[441,0,229,2],[441,8,229,6,"result"],[441,14,229,12],[441,17,229,15],[441,19,229,2],[443,0,230,2],[443,11,230,9,"i"],[443,12,230,10],[443,14,230,2],[443,16,230,14],[444,0,231,4,"result"],[444,6,231,4,"result"],[444,12,231,10],[444,16,231,14,"str"],[444,19,231,4],[445,0,232,3],[447,0,233,2],[447,11,233,9,"result"],[447,17,233,2],[448,0,234,1],[450,0,236,0],[450,6,236,6,"toSpaces"],[450,14,236,14],[450,17,236,17],[450,26,236,6,"toSpaces"],[450,34,236,17],[450,35,236,18,"tabs"],[450,39,236,17],[451,0,236,17],[451,11,236,35,"repeat"],[451,17,236,41],[451,18,236,42],[451,22,236,41],[451,24,236,48,"tabs"],[451,28,236,52],[451,29,236,53,"length"],[451,35,236,41],[451,36,236,17],[452,0,236,17],[452,3,236,0],[454,0,238,0],[454,11,238,9,"locate"],[454,17,238,0],[454,18,238,16,"source"],[454,24,238,0],[454,26,238,32,"i"],[454,27,238,0],[454,29,238,43],[455,0,239,2],[455,8,239,8,"lines"],[455,13,239,13],[455,16,239,16,"source"],[455,22,239,22],[455,23,239,23,"split"],[455,28,239,16],[455,29,239,29],[455,33,239,16],[455,34,239,2],[456,0,240,2],[456,8,240,8,"nLines"],[456,14,240,14],[456,17,240,17,"lines"],[456,22,240,22],[456,23,240,23,"length"],[456,29,240,2],[457,0,241,2],[457,8,241,6,"column"],[457,14,241,12],[457,17,241,15,"i"],[457,18,241,2],[458,0,242,2],[458,8,242,6,"line"],[458,12,242,10],[458,15,242,13],[458,16,242,2],[460,0,243,2],[460,11,243,9,"line"],[460,15,243,13],[460,18,243,16,"nLines"],[460,24,243,2],[460,26,243,24,"line"],[460,30,243,28],[460,32,243,2],[460,34,243,32],[461,0,243,32],[461,10,244,12,"length"],[461,16,243,32],[461,19,244,23,"lines"],[461,24,244,28],[461,25,244,29,"line"],[461,29,244,28],[461,30,243,32],[461,31,244,12,"length"],[461,37,243,32],[463,0,245,4],[463,10,245,8,"column"],[463,16,245,14],[463,20,245,18,"length"],[463,26,245,4],[463,28,245,26],[464,0,246,6,"column"],[464,8,246,6,"column"],[464,14,246,12],[464,18,246,16,"length"],[464,24,246,6],[465,0,247,5],[465,7,245,4],[465,13,247,11],[466,0,248,6],[467,0,249,5],[468,0,250,3],[470,0,251,2],[470,8,251,8,"before"],[470,14,251,14],[470,17,251,17,"source"],[470,23,251,23],[470,24,251,24,"slice"],[470,29,251,17],[470,30,251,30],[470,31,251,17],[470,33,251,33,"i"],[470,34,251,17],[470,36,251,36,"replace"],[470,43,251,17],[470,44,251,44],[470,50,251,17],[470,52,251,52,"toSpaces"],[470,60,251,17],[470,61,251,2],[471,0,252,2],[471,8,252,8,"beforeExec"],[471,18,252,18],[471,21,252,21],[471,33,252,33,"exec"],[471,37,252,21],[471,38,252,38,"before"],[471,44,252,21],[471,45,252,2],[472,0,253,2],[472,8,253,8,"beforeLine"],[472,18,253,18],[472,21,253,22,"beforeExec"],[472,31,253,32],[472,35,253,36,"beforeExec"],[472,45,253,46],[472,46,253,47],[472,47,253,46],[472,48,253,21],[472,52,253,54],[472,54,253,2],[473,0,254,2],[473,8,254,8,"after"],[473,13,254,13],[473,16,254,16,"source"],[473,22,254,22],[473,23,254,23,"slice"],[473,28,254,16],[473,29,254,29,"i"],[473,30,254,16],[473,31,254,2],[474,0,255,2],[474,8,255,8,"afterExec"],[474,17,255,17],[474,20,255,20],[474,31,255,31,"exec"],[474,35,255,20],[474,36,255,36,"after"],[474,41,255,20],[474,42,255,2],[475,0,256,2],[475,8,256,8,"afterLine"],[475,17,256,17],[475,20,256,20,"afterExec"],[475,29,256,29],[475,33,256,33,"afterExec"],[475,42,256,42],[475,43,256,43],[475,44,256,42],[475,45,256,2],[476,0,257,2],[476,8,257,8,"pad"],[476,11,257,11],[476,14,257,14,"repeat"],[476,20,257,20],[476,21,257,21],[476,24,257,20],[476,26,257,26,"beforeLine"],[476,36,257,36],[476,37,257,37,"length"],[476,43,257,20],[476,44,257,2],[477,0,258,2],[477,8,258,8,"snippet"],[477,15,258,15],[477,23,258,21,"beforeLine"],[477,33,258,15],[477,36,258,34,"afterLine"],[477,45,258,15],[477,55,258,48,"pad"],[477,58,258,15],[477,64,258,2],[478,0,259,2],[478,11,259,9],[479,0,259,11,"line"],[479,6,259,11,"line"],[479,10,259,15],[479,12,259,11,"line"],[479,16,259,9],[480,0,259,17,"column"],[480,6,259,17,"column"],[480,12,259,23],[480,14,259,17,"column"],[480,20,259,9],[481,0,259,25,"snippet"],[481,6,259,25,"snippet"],[481,13,259,32],[481,15,259,25,"snippet"],[482,0,259,9],[482,5,259,2],[483,0,260,1],[485,0,262,0],[485,6,262,6,"validNameCharacters"],[485,25,262,25],[485,28,262,28],[485,44,262,0],[486,0,263,0],[486,6,263,6,"whitespace"],[486,16,263,16],[486,19,263,19],[486,31,263,0],[487,0,264,0],[487,6,264,6,"quotemarks"],[487,16,264,16],[487,19,264,19],[487,25,264,0],[489,0,268,7],[489,11,268,16,"parse"],[489,17,268,7],[489,18,268,22,"source"],[489,24,268,7],[489,26,268,38,"middleware"],[489,36,268,7],[489,38,268,78],[490,0,269,2],[490,8,269,8,"length"],[490,14,269,14],[490,17,269,17,"source"],[490,23,269,23],[490,24,269,24,"length"],[490,30,269,2],[491,0,270,2],[491,8,270,6,"currentElement"],[491,22,270,35],[491,25,270,38],[491,29,270,2],[492,0,271,2],[492,8,271,6,"state"],[492,13,271,11],[492,16,271,14,"metadata"],[492,24,271,2],[493,0,272,2],[493,8,272,6,"children"],[493,16,272,14],[493,19,272,17],[493,23,272,2],[494,0,273,2],[494,8,273,6,"root"],[494,12,273,2],[495,0,274,2],[495,8,274,6,"stack"],[495,13,274,21],[495,16,274,24],[495,18,274,2],[497,0,276,2],[497,13,276,11,"error"],[497,18,276,2],[497,19,276,17,"message"],[497,26,276,2],[497,28,276,34],[498,0,276,34],[498,20,277,38,"locate"],[498,26,277,44],[498,27,277,45,"source"],[498,33,277,44],[498,35,277,53,"i"],[498,36,277,44],[498,37,276,34],[499,0,276,34],[499,10,277,12,"line"],[499,14,276,34],[499,25,277,12,"line"],[499,29,276,34],[500,0,276,34],[500,10,277,18,"column"],[500,16,276,34],[500,27,277,18,"column"],[500,33,276,34],[501,0,276,34],[501,10,277,26,"snippet"],[501,17,276,34],[501,28,277,26,"snippet"],[501,35,276,34],[503,0,278,4],[503,12,278,10],[503,16,278,14,"Error"],[503,21,278,10],[503,22,279,9,"message"],[503,29,278,10],[503,39,279,21,"line"],[503,43,278,10],[503,52,279,29,"column"],[503,58,278,10],[503,137,279,109,"snippet"],[503,144,278,10],[503,145,278,4],[504,0,281,3],[506,0,283,2],[506,13,283,11,"metadata"],[506,21,283,2],[506,24,283,22],[507,0,284,4],[507,13,285,6,"i"],[507,14,285,7],[507,17,285,10],[507,18,285,6],[507,21,285,14,"length"],[507,27,285,6],[507,32,286,7,"source"],[507,38,286,13],[507,39,286,14,"i"],[507,40,286,13],[507,41,286,7],[507,46,286,21],[507,49,286,7],[507,53,286,28],[507,54,286,29,"validNameCharacters"],[507,73,286,48],[507,74,286,49,"test"],[507,78,286,29],[507,79,286,54,"source"],[507,85,286,60],[507,86,286,61,"i"],[507,87,286,62],[507,90,286,65],[507,91,286,60],[507,92,286,29],[507,93,285,6],[507,94,284,4],[507,96,287,6],[508,0,288,6,"i"],[508,8,288,6,"i"],[508,9,288,7],[509,0,289,5],[511,0,291,4],[511,13,291,11,"neutral"],[511,20,291,18],[511,22,291,4],[512,0,292,3],[514,0,294,2],[514,13,294,11,"neutral"],[514,20,294,2],[514,23,294,21],[515,0,295,4],[515,10,295,8,"text"],[515,14,295,12],[515,17,295,15],[515,19,295,4],[516,0,296,4],[516,10,296,8,"char"],[516,14,296,4],[518,0,297,4],[518,13,297,11,"i"],[518,14,297,12],[518,17,297,15,"length"],[518,23,297,11],[518,27,297,25],[518,28,297,26,"char"],[518,32,297,30],[518,35,297,33,"source"],[518,41,297,39],[518,42,297,40,"i"],[518,43,297,39],[518,44,297,25],[518,50,297,48],[518,53,297,4],[518,55,297,53],[519,0,298,6,"text"],[519,8,298,6,"text"],[519,12,298,10],[519,16,298,14,"char"],[519,20,298,6],[520,0,299,6,"i"],[520,8,299,6,"i"],[520,9,299,7],[520,13,299,11],[520,14,299,6],[521,0,300,5],[523,0,302,4],[523,10,302,8],[523,15,302,13,"test"],[523,19,302,8],[523,20,302,18,"text"],[523,24,302,8],[523,25,302,4],[523,27,302,25],[524,0,303,6,"children"],[524,8,303,6,"children"],[524,16,303,14],[524,17,303,15,"push"],[524,21,303,6],[524,22,303,20,"text"],[524,26,303,6],[525,0,304,5],[527,0,306,4],[527,10,306,8,"source"],[527,16,306,14],[527,17,306,15,"i"],[527,18,306,14],[527,19,306,8],[527,24,306,22],[527,27,306,4],[527,29,306,27],[528,0,307,6],[528,15,307,13,"openingTag"],[528,25,307,6],[529,0,308,5],[531,0,310,4],[531,13,310,11,"neutral"],[531,20,310,4],[532,0,311,3],[534,0,313,2],[534,13,313,11,"openingTag"],[534,23,313,2],[534,26,313,24],[535,0,314,4],[535,10,314,10,"char"],[535,14,314,14],[535,17,314,17,"source"],[535,23,314,23],[535,24,314,24,"i"],[535,25,314,23],[535,26,314,4],[537,0,316,4],[537,10,316,8,"char"],[537,14,316,12],[537,19,316,17],[537,22,316,4],[537,24,316,22],[538,0,317,6],[538,15,317,13,"neutral"],[538,22,317,6],[539,0,318,5],[541,0,320,4],[541,10,320,8,"char"],[541,14,320,12],[541,19,320,17],[541,22,320,4],[541,24,320,22],[542,0,321,6],[542,12,321,12,"start"],[542,17,321,17],[542,20,321,20,"i"],[542,21,321,21],[542,24,321,24],[542,25,321,6],[544,0,322,6],[544,12,322,10,"source"],[544,18,322,16],[544,19,322,17,"slice"],[544,24,322,10],[544,25,322,23,"start"],[544,30,322,10],[544,32,322,30,"i"],[544,33,322,31],[544,36,322,34],[544,37,322,10],[544,43,322,41],[544,47,322,6],[544,49,322,47],[545,0,323,8],[545,17,323,15,"comment"],[545,24,323,8],[546,0,324,7],[548,0,325,6],[548,12,325,12,"end"],[548,15,325,15],[548,18,325,18,"i"],[548,19,325,19],[548,22,325,22],[548,23,325,6],[550,0,326,6],[550,12,326,10,"source"],[550,18,326,16],[550,19,326,17,"slice"],[550,24,326,10],[550,25,326,23,"start"],[550,30,326,10],[550,32,326,30,"end"],[550,35,326,10],[550,41,326,39],[550,50,326,6],[550,52,326,50],[551,0,327,8],[551,17,327,15,"cdata"],[551,22,327,8],[552,0,328,7],[554,0,329,6],[554,12,329,10],[554,23,329,21,"test"],[554,27,329,10],[554,28,329,26,"source"],[554,34,329,32],[554,35,329,33,"slice"],[554,40,329,26],[554,41,329,39,"start"],[554,46,329,26],[554,48,329,46,"end"],[554,51,329,26],[554,52,329,10],[554,53,329,6],[554,55,329,53],[555,0,330,8],[555,17,330,15,"neutral"],[555,24,330,8],[556,0,331,7],[557,0,332,5],[559,0,334,4],[559,10,334,8,"char"],[559,14,334,12],[559,19,334,17],[559,22,334,4],[559,24,334,22],[560,0,335,6],[560,15,335,13,"closingTag"],[560,25,335,6],[561,0,336,5],[563,0,338,4],[563,10,338,10,"tag"],[563,13,338,13],[563,16,338,16,"getName"],[563,23,338,23],[563,25,338,4],[564,0,339,4],[564,10,339,10,"props"],[564,15,339,64],[564,18,339,67],[564,20,339,4],[565,0,340,4],[565,10,340,10,"element"],[565,17,340,25],[565,20,340,28],[566,0,341,6,"tag"],[566,8,341,6,"tag"],[566,11,341,9],[566,13,341,6,"tag"],[566,16,340,28],[567,0,342,6,"props"],[567,8,342,6,"props"],[567,13,342,11],[567,15,342,6,"props"],[567,20,340,28],[568,0,343,6,"children"],[568,8,343,6,"children"],[568,16,343,14],[568,18,343,16],[568,20,340,28],[569,0,344,6,"parent"],[569,8,344,6,"parent"],[569,14,344,12],[569,16,344,14,"currentElement"],[569,30,340,28],[570,0,345,6,"Tag"],[570,8,345,6,"Tag"],[570,11,345,9],[570,13,345,11,"tags"],[570,17,345,15],[570,18,345,16,"tag"],[570,21,345,15],[570,22,345,11],[570,26,345,24,"missingTag"],[571,0,340,28],[571,7,340,4],[573,0,348,4],[573,10,348,8,"currentElement"],[573,24,348,4],[573,26,348,24],[574,0,349,6,"children"],[574,8,349,6,"children"],[574,16,349,14],[574,17,349,15,"push"],[574,21,349,6],[574,22,349,20,"element"],[574,29,349,6],[575,0,350,5],[575,7,348,4],[575,13,350,11],[576,0,351,6,"root"],[576,8,351,6,"root"],[576,12,351,10],[576,15,351,13,"element"],[576,22,351,6],[577,0,352,5],[579,0,354,4,"getAttributes"],[579,6,354,4,"getAttributes"],[579,19,354,17],[579,20,354,18,"props"],[579,25,354,17],[579,26,354,4],[580,0,313,24],[580,10,356,12,"style"],[580,15,313,24],[580,18,356,22,"props"],[580,23,313,24],[580,24,356,12,"style"],[580,29,313,24],[582,0,357,4],[582,10,357,8],[582,17,357,15,"style"],[582,22,357,8],[582,27,357,25],[582,35,357,4],[582,37,357,35],[583,0,358,6,"element"],[583,8,358,6,"element"],[583,15,358,13],[583,16,358,14,"styles"],[583,22,358,6],[583,25,358,23,"style"],[583,30,358,6],[584,0,359,6,"props"],[584,8,359,6,"props"],[584,13,359,11],[584,14,359,12,"style"],[584,19,359,6],[584,22,359,20,"getStyle"],[584,30,359,28],[584,31,359,29,"style"],[584,36,359,28],[584,37,359,6],[585,0,360,5],[587,0,362,4],[587,10,362,8,"selfClosing"],[587,21,362,19],[587,24,362,22],[587,29,362,4],[589,0,364,4],[589,10,364,8,"source"],[589,16,364,14],[589,17,364,15,"i"],[589,18,364,14],[589,19,364,8],[589,24,364,22],[589,27,364,4],[589,29,364,27],[590,0,365,6,"i"],[590,8,365,6,"i"],[590,9,365,7],[590,13,365,11],[590,14,365,6],[591,0,366,6,"selfClosing"],[591,8,366,6,"selfClosing"],[591,19,366,17],[591,22,366,20],[591,26,366,6],[592,0,367,5],[594,0,369,4],[594,10,369,8,"source"],[594,16,369,14],[594,17,369,15,"i"],[594,18,369,14],[594,19,369,8],[594,24,369,22],[594,27,369,4],[594,29,369,27],[595,0,370,6,"error"],[595,8,370,6,"error"],[595,13,370,11],[595,14,370,12],[595,26,370,11],[595,27,370,6],[596,0,371,5],[598,0,373,4],[598,10,373,8],[598,11,373,9,"selfClosing"],[598,22,373,4],[598,24,373,22],[599,0,374,6,"currentElement"],[599,8,374,6,"currentElement"],[599,22,374,20],[599,25,374,23,"element"],[599,32,374,6],[600,0,375,9,"children"],[600,8,375,9,"children"],[600,16,373,22],[600,19,375,22,"element"],[600,26,373,22],[600,27,375,9,"children"],[600,35,373,22],[601,0,376,6,"stack"],[601,8,376,6,"stack"],[601,13,376,11],[601,14,376,12,"push"],[601,18,376,6],[601,19,376,17,"element"],[601,26,376,6],[602,0,377,5],[604,0,379,4],[604,13,379,11,"neutral"],[604,20,379,4],[605,0,380,3],[607,0,382,2],[607,13,382,11,"comment"],[607,20,382,2],[607,23,382,21],[608,0,383,4],[608,10,383,10,"index"],[608,15,383,15],[608,18,383,18,"source"],[608,24,383,24],[608,25,383,25,"indexOf"],[608,32,383,18],[608,33,383,33],[608,38,383,18],[608,40,383,40,"i"],[608,41,383,18],[608,42,383,4],[610,0,384,4],[610,10,384,8],[610,11,384,9],[610,12,384,10,"index"],[610,17,384,4],[610,19,384,17],[611,0,385,6,"error"],[611,8,385,6,"error"],[611,13,385,11],[611,14,385,12],[611,28,385,11],[611,29,385,6],[612,0,386,5],[614,0,388,4,"i"],[614,6,388,4,"i"],[614,7,388,5],[614,10,388,8,"index"],[614,15,388,13],[614,18,388,16],[614,19,388,4],[615,0,389,4],[615,13,389,11,"neutral"],[615,20,389,4],[616,0,390,3],[618,0,392,2],[618,13,392,11,"cdata"],[618,18,392,2],[618,21,392,19],[619,0,393,4],[619,10,393,10,"index"],[619,15,393,15],[619,18,393,18,"source"],[619,24,393,24],[619,25,393,25,"indexOf"],[619,32,393,18],[619,33,393,33],[619,38,393,18],[619,40,393,40,"i"],[619,41,393,18],[619,42,393,4],[621,0,394,4],[621,10,394,8],[621,11,394,9],[621,12,394,10,"index"],[621,17,394,4],[621,19,394,17],[622,0,395,6,"error"],[622,8,395,6,"error"],[622,13,395,11],[622,14,395,12],[622,28,395,11],[622,29,395,6],[623,0,396,5],[625,0,398,4,"children"],[625,6,398,4,"children"],[625,14,398,12],[625,15,398,13,"push"],[625,19,398,4],[625,20,398,18,"source"],[625,26,398,24],[625,27,398,25,"slice"],[625,32,398,18],[625,33,398,31,"i"],[625,34,398,32],[625,37,398,35],[625,38,398,18],[625,40,398,38,"index"],[625,45,398,18],[625,46,398,4],[626,0,400,4,"i"],[626,6,400,4,"i"],[626,7,400,5],[626,10,400,8,"index"],[626,15,400,13],[626,18,400,16],[626,19,400,4],[627,0,401,4],[627,13,401,11,"neutral"],[627,20,401,4],[628,0,402,3],[630,0,404,2],[630,13,404,11,"closingTag"],[630,23,404,2],[630,26,404,24],[631,0,405,4],[631,10,405,10,"tag"],[631,13,405,13],[631,16,405,16,"getName"],[631,23,405,23],[631,25,405,4],[633,0,407,4],[633,10,407,8],[633,11,407,9,"tag"],[633,14,407,4],[633,16,407,14],[634,0,408,6,"error"],[634,8,408,6,"error"],[634,13,408,11],[634,14,408,12],[634,33,408,11],[634,34,408,6],[635,0,409,5],[637,0,411,4],[637,10,411,8,"currentElement"],[637,24,411,22],[637,28,411,26,"tag"],[637,31,411,29],[637,36,411,34,"currentElement"],[637,50,411,48],[637,51,411,49,"tag"],[637,54,411,4],[637,56,411,54],[638,0,412,6,"error"],[638,8,412,6,"error"],[638,13,412,11],[638,42,413,34,"tag"],[638,45,412,11],[638,77,413,64,"currentElement"],[638,91,413,78],[638,92,413,79,"tag"],[638,95,412,11],[638,102,412,6],[639,0,415,5],[641,0,417,4],[641,10,417,8,"source"],[641,16,417,14],[641,17,417,15,"i"],[641,18,417,14],[641,19,417,8],[641,24,417,22],[641,27,417,4],[641,29,417,27],[642,0,418,6,"error"],[642,8,418,6,"error"],[642,13,418,11],[642,14,418,12],[642,26,418,11],[642,27,418,6],[643,0,419,5],[645,0,421,4,"stack"],[645,6,421,4,"stack"],[645,11,421,9],[645,12,421,10,"pop"],[645,15,421,4],[646,0,422,4,"currentElement"],[646,6,422,4,"currentElement"],[646,20,422,18],[646,23,422,21,"stack"],[646,28,422,26],[646,29,422,27,"stack"],[646,34,422,32],[646,35,422,33,"length"],[646,41,422,27],[646,44,422,42],[646,45,422,26],[646,46,422,4],[648,0,423,4],[648,10,423,8,"currentElement"],[648,24,423,4],[648,26,423,24],[649,0,423,24],[649,30,424,22,"currentElement"],[649,44,423,24],[650,0,424,9,"children"],[650,8,424,9,"children"],[650,16,423,24],[650,35,424,9,"children"],[650,43,423,24],[651,0,425,5],[653,0,427,4],[653,13,427,11,"neutral"],[653,20,427,4],[654,0,428,3],[656,0,430,2],[656,13,430,11,"getName"],[656,20,430,2],[656,23,430,21],[657,0,431,4],[657,10,431,8,"name"],[657,14,431,12],[657,17,431,15],[657,19,431,4],[658,0,432,4],[658,10,432,8,"char"],[658,14,432,4],[660,0,433,4],[660,13,433,11,"i"],[660,14,433,12],[660,17,433,15,"length"],[660,23,433,11],[660,27,433,25,"validNameCharacters"],[660,46,433,44],[660,47,433,45,"test"],[660,51,433,25],[660,52,433,51,"char"],[660,56,433,55],[660,59,433,58,"source"],[660,65,433,64],[660,66,433,65,"i"],[660,67,433,64],[660,68,433,25],[660,69,433,4],[660,71,433,71],[661,0,434,6,"name"],[661,8,434,6,"name"],[661,12,434,10],[661,16,434,14,"char"],[661,20,434,6],[662,0,435,6,"i"],[662,8,435,6,"i"],[662,9,435,7],[662,13,435,11],[662,14,435,6],[663,0,436,5],[665,0,438,4],[665,13,438,11,"name"],[665,17,438,4],[666,0,439,3],[668,0,441,2],[668,13,441,11,"getAttributes"],[668,26,441,2],[668,27,441,25,"props"],[668,32,441,2],[668,34,444,5],[669,0,445,4],[669,13,445,11,"i"],[669,14,445,12],[669,17,445,15,"length"],[669,23,445,4],[669,25,445,23],[670,0,446,6],[670,12,446,10],[670,13,446,11,"whitespace"],[670,23,446,21],[670,24,446,22,"test"],[670,28,446,11],[670,29,446,27,"source"],[670,35,446,33],[670,36,446,34,"i"],[670,37,446,33],[670,38,446,11],[670,39,446,6],[670,41,446,39],[671,0,447,8],[672,0,448,7],[674,0,449,6,"allowSpaces"],[674,8,449,6,"allowSpaces"],[674,19,449,17],[675,0,451,6],[675,12,451,12,"name"],[675,16,451,16],[675,19,451,19,"getName"],[675,26,451,26],[675,28,451,6],[677,0,452,6],[677,12,452,10],[677,13,452,11,"name"],[677,17,452,6],[677,19,452,17],[678,0,453,8],[679,0,454,7],[681,0,456,6],[681,12,456,10,"value"],[681,17,456,42],[681,20,456,45],[681,24,456,6],[682,0,458,6,"allowSpaces"],[682,8,458,6,"allowSpaces"],[682,19,458,17],[684,0,459,6],[684,12,459,10,"source"],[684,18,459,16],[684,19,459,17,"i"],[684,20,459,16],[684,21,459,10],[684,26,459,24],[684,29,459,6],[684,31,459,29],[685,0,460,8,"i"],[685,10,460,8,"i"],[685,11,460,9],[685,15,460,13],[685,16,460,8],[686,0,461,8,"allowSpaces"],[686,10,461,8,"allowSpaces"],[686,21,461,19],[687,0,463,8,"value"],[687,10,463,8,"value"],[687,15,463,13],[687,18,463,16,"getAttributeValue"],[687,35,463,33],[687,37,463,8],[689,0,464,8],[689,14,464,12],[689,15,464,13,"isNaN"],[689,20,464,18],[689,21,464,19],[689,22,464,20,"value"],[689,27,464,18],[689,28,464,12],[689,32,464,30,"value"],[689,37,464,35],[689,38,464,36,"trim"],[689,42,464,30],[689,49,464,47],[689,51,464,8],[689,53,464,51],[690,0,465,10,"value"],[690,12,465,10,"value"],[690,17,465,15],[690,20,465,18],[690,21,465,19,"value"],[690,26,465,10],[691,0,466,9],[692,0,467,7],[694,0,469,6,"props"],[694,8,469,6,"props"],[694,13,469,11],[694,14,469,12,"camelCase"],[694,23,469,21],[694,24,469,22,"name"],[694,28,469,21],[694,29,469,11],[694,30,469,6],[694,33,469,31,"value"],[694,38,469,6],[695,0,470,5],[696,0,471,3],[698,0,473,2],[698,13,473,11,"getAttributeValue"],[698,30,473,2],[698,33,473,39],[699,0,474,4],[699,13,474,11,"quotemarks"],[699,23,474,21],[699,24,474,22,"test"],[699,28,474,11],[699,29,474,27,"source"],[699,35,474,33],[699,36,474,34,"i"],[699,37,474,33],[699,38,474,11],[699,42,475,8,"getQuotedAttributeValue"],[699,65,475,31],[699,67,474,11],[699,70,476,8,"getUnquotedAttributeValue"],[699,95,476,33],[699,97,474,4],[700,0,477,3],[702,0,479,2],[702,13,479,11,"getUnquotedAttributeValue"],[702,38,479,2],[702,41,479,39],[703,0,480,4],[703,10,480,8,"value"],[703,15,480,13],[703,18,480,16],[703,20,480,4],[705,0,481,4],[705,9,481,7],[706,0,482,6],[706,12,482,12,"char"],[706,16,482,16],[706,19,482,19,"source"],[706,25,482,25],[706,26,482,26,"i"],[706,27,482,25],[706,28,482,6],[708,0,483,6],[708,12,483,10,"char"],[708,16,483,14],[708,21,483,19],[708,24,483,10],[708,28,483,26,"char"],[708,32,483,30],[708,37,483,35],[708,40,483,10],[708,44,483,42,"char"],[708,48,483,46],[708,53,483,51],[708,56,483,6],[708,58,483,56],[709,0,484,8],[709,17,484,15,"value"],[709,22,484,8],[710,0,485,7],[712,0,487,6,"value"],[712,8,487,6,"value"],[712,13,487,11],[712,17,487,15,"char"],[712,21,487,6],[713,0,488,6,"i"],[713,8,488,6,"i"],[713,9,488,7],[713,13,488,11],[713,14,488,6],[714,0,489,5],[714,7,481,4],[714,15,489,13,"i"],[714,16,489,14],[714,19,489,17,"length"],[714,25,481,4],[716,0,491,4],[716,13,491,11,"value"],[716,18,491,4],[717,0,492,3],[719,0,494,2],[719,13,494,11,"getQuotedAttributeValue"],[719,36,494,2],[719,39,494,37],[720,0,495,4],[720,10,495,10,"quotemark"],[720,19,495,19],[720,22,495,22,"source"],[720,28,495,28],[720,29,495,29,"i"],[720,30,495,30],[720,32,495,28],[720,33,495,4],[721,0,497,4],[721,10,497,8,"value"],[721,15,497,13],[721,18,497,16],[721,20,497,4],[722,0,498,4],[722,10,498,8,"escaped"],[722,17,498,15],[722,20,498,18],[722,25,498,4],[724,0,500,4],[724,13,500,11,"i"],[724,14,500,12],[724,17,500,15,"length"],[724,23,500,4],[724,25,500,23],[725,0,501,6],[725,12,501,12,"char"],[725,16,501,16],[725,19,501,19,"source"],[725,25,501,25],[725,26,501,26,"i"],[725,27,501,27],[725,29,501,25],[725,30,501,6],[727,0,502,6],[727,12,502,10,"char"],[727,16,502,14],[727,21,502,19,"quotemark"],[727,30,502,10],[727,34,502,32],[727,35,502,33,"escaped"],[727,42,502,6],[727,44,502,42],[728,0,503,8],[728,17,503,15,"value"],[728,22,503,8],[729,0,504,7],[731,0,506,6],[731,12,506,10,"char"],[731,16,506,14],[731,21,506,19],[731,25,506,10],[731,29,506,27],[731,30,506,28,"escaped"],[731,37,506,6],[731,39,506,37],[732,0,507,8,"escaped"],[732,10,507,8,"escaped"],[732,17,507,15],[732,20,507,18],[732,24,507,8],[733,0,508,7],[735,0,510,6,"value"],[735,8,510,6,"value"],[735,13,510,11],[735,17,510,15,"escaped"],[735,24,510,22],[735,34,510,30,"char"],[735,38,510,22],[735,41,510,39,"char"],[735,45,510,6],[736,0,511,6,"escaped"],[736,8,511,6,"escaped"],[736,15,511,13],[736,18,511,16],[736,23,511,6],[737,0,512,5],[739,0,514,4],[739,13,514,11,"value"],[739,18,514,4],[740,0,515,3],[742,0,517,2],[742,13,517,11,"allowSpaces"],[742,24,517,2],[742,27,517,25],[743,0,518,4],[743,13,518,11,"i"],[743,14,518,12],[743,17,518,15,"length"],[743,23,518,11],[743,27,518,25,"whitespace"],[743,37,518,35],[743,38,518,36,"test"],[743,42,518,25],[743,43,518,41,"source"],[743,49,518,47],[743,50,518,48,"i"],[743,51,518,47],[743,52,518,25],[743,53,518,4],[743,55,518,53],[744,0,519,6,"i"],[744,8,519,6,"i"],[744,9,519,7],[744,13,519,11],[744,14,519,6],[745,0,520,5],[746,0,521,3],[748,0,523,2],[748,8,523,6,"i"],[748,9,523,7],[748,12,523,10],[748,13,523,2],[750,0,524,2],[750,11,524,9,"i"],[750,12,524,10],[750,15,524,13,"length"],[750,21,524,2],[750,23,524,21],[751,0,525,4],[751,10,525,8],[751,11,525,9,"state"],[751,16,525,4],[751,18,525,16],[752,0,526,6,"error"],[752,8,526,6,"error"],[752,13,526,11],[752,14,526,12],[752,36,526,11],[752,37,526,6],[753,0,527,5],[755,0,528,4,"state"],[755,6,528,4,"state"],[755,11,528,9],[755,14,528,12,"state"],[755,19,528,17],[755,21,528,4],[756,0,529,4,"i"],[756,6,529,4,"i"],[756,7,529,5],[756,11,529,9],[756,12,529,4],[757,0,530,3],[759,0,532,2],[759,8,532,6,"state"],[759,13,532,11],[759,18,532,16,"neutral"],[759,25,532,2],[759,27,532,25],[760,0,533,4,"error"],[760,6,533,4,"error"],[760,11,533,9],[760,12,533,10],[760,37,533,9],[760,38,533,4],[761,0,534,3],[763,0,536,2],[763,8,536,6,"root"],[763,12,536,2],[763,14,536,12],[764,0,537,4],[764,10,537,10,"xml"],[764,13,537,21],[764,16,537,24],[764,17,537,25,"middleware"],[764,27,537,35],[764,30,537,38,"middleware"],[764,40,537,48],[764,41,537,49,"root"],[764,45,537,48],[764,46,537,35],[764,49,537,57,"root"],[764,53,537,24],[764,58,537,66,"root"],[764,62,537,4],[766,0,538,4],[766,10,538,10,"ast"],[766,14,538,39],[766,17,538,42,"xml"],[766,20,538,45],[766,21,538,46,"children"],[766,29,538,42],[766,30,538,55,"map"],[766,33,538,42],[766,34,538,59,"astToReact"],[766,44,538,42],[766,45,538,4],[768,0,539,4],[768,10,539,10,"jsx"],[768,13,539,21],[768,16,539,24,"xml"],[768,19,539,4],[769,0,540,4,"jsx"],[769,6,540,4,"jsx"],[769,9,540,7],[769,10,540,8,"children"],[769,18,540,4],[769,21,540,19,"ast"],[769,25,540,4],[770,0,541,4],[770,13,541,11,"jsx"],[770,16,541,4],[771,0,542,3],[773,0,544,2],[773,11,544,9],[773,15,544,2],[774,0,545,1]]},"type":"js/module"}]}