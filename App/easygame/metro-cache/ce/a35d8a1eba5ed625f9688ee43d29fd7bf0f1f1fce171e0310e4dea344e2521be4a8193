{"dependencies":[{"name":"../../tokenizer","data":{"isAsync":false}},{"name":"./Raw","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var TYPE = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE;\n\n  var rawMode = _$$_REQUIRE(_dependencyMap[1], \"./Raw\").mode;\n\n  var LEFTCURLYBRACKET = TYPE.LeftCurlyBracket;\n\n  function consumeRaw(startToken) {\n    return this.Raw(startToken, rawMode.leftCurlyBracket, true);\n  }\n\n  function consumePrelude() {\n    var prelude = this.SelectorList();\n\n    if (prelude.type !== 'Raw' && this.scanner.eof === false && this.scanner.tokenType !== LEFTCURLYBRACKET) {\n      this.error();\n    }\n\n    return prelude;\n  }\n\n  module.exports = {\n    name: 'Rule',\n    structure: {\n      prelude: ['SelectorList', 'Raw'],\n      block: ['Block']\n    },\n    parse: function parse() {\n      var startToken = this.scanner.tokenIndex;\n      var startOffset = this.scanner.tokenStart;\n      var prelude;\n      var block;\n\n      if (this.parseRulePrelude) {\n        prelude = this.parseWithFallback(consumePrelude, consumeRaw);\n      } else {\n        prelude = consumeRaw.call(this, startToken);\n      }\n\n      block = this.Block(true);\n      return {\n        type: 'Rule',\n        loc: this.getLocation(startOffset, this.scanner.tokenStart),\n        prelude: prelude,\n        block: block\n      };\n    },\n    generate: function generate(node) {\n      this.node(node.prelude);\n      this.node(node.block);\n    },\n    walkContext: 'rule'\n  };\n});","map":[[2,0,1,0],[2,6,1,4,"TYPE"],[2,10,1,8],[2,13,1,11,"require"],[2,24,1,18],[2,62,1,11],[2,63,1,38,"TYPE"],[2,67,1,0],[4,0,2,0],[4,6,2,4,"rawMode"],[4,13,2,11],[4,16,2,14,"require"],[4,27,2,21],[4,55,2,14],[4,56,2,31,"mode"],[4,60,2,0],[6,0,4,0],[6,6,4,4,"LEFTCURLYBRACKET"],[6,22,4,20],[6,25,4,23,"TYPE"],[6,29,4,27],[6,30,4,28,"LeftCurlyBracket"],[6,46,4,0],[8,0,6,0],[8,11,6,9,"consumeRaw"],[8,21,6,0],[8,22,6,20,"startToken"],[8,32,6,0],[8,34,6,32],[9,0,7,4],[9,11,7,11],[9,16,7,16,"Raw"],[9,19,7,11],[9,20,7,20,"startToken"],[9,30,7,11],[9,32,7,32,"rawMode"],[9,39,7,39],[9,40,7,40,"leftCurlyBracket"],[9,56,7,11],[9,58,7,58],[9,62,7,11],[9,63,7,4],[10,0,8,1],[12,0,10,0],[12,11,10,9,"consumePrelude"],[12,25,10,0],[12,28,10,26],[13,0,11,4],[13,8,11,8,"prelude"],[13,15,11,15],[13,18,11,18],[13,23,11,23,"SelectorList"],[13,35,11,18],[13,37,11,4],[15,0,13,4],[15,8,13,8,"prelude"],[15,15,13,15],[15,16,13,16,"type"],[15,20,13,8],[15,25,13,25],[15,30,13,8],[15,34,14,8],[15,39,14,13,"scanner"],[15,46,14,8],[15,47,14,21,"eof"],[15,50,14,8],[15,55,14,29],[15,60,13,8],[15,64,15,8],[15,69,15,13,"scanner"],[15,76,15,8],[15,77,15,21,"tokenType"],[15,86,15,8],[15,91,15,35,"LEFTCURLYBRACKET"],[15,107,13,4],[15,109,15,53],[16,0,16,8],[16,11,16,13,"error"],[16,16,16,8],[17,0,17,5],[19,0,19,4],[19,11,19,11,"prelude"],[19,18,19,4],[20,0,20,1],[22,0,22,0,"module"],[22,2,22,0,"module"],[22,8,22,6],[22,9,22,7,"exports"],[22,16,22,0],[22,19,22,17],[23,0,23,4,"name"],[23,4,23,4,"name"],[23,8,23,8],[23,10,23,10],[23,16,22,17],[24,0,24,4,"structure"],[24,4,24,4,"structure"],[24,13,24,13],[24,15,24,15],[25,0,25,8,"prelude"],[25,6,25,8,"prelude"],[25,13,25,15],[25,15,25,17],[25,16,25,18],[25,30,25,17],[25,32,25,34],[25,37,25,17],[25,38,24,15],[26,0,26,8,"block"],[26,6,26,8,"block"],[26,11,26,13],[26,13,26,15],[26,14,26,16],[26,21,26,15],[27,0,24,15],[27,5,22,17],[28,0,28,4,"parse"],[28,4,28,4,"parse"],[28,9,28,9],[28,11,28,11],[28,28,28,22],[29,0,29,8],[29,10,29,12,"startToken"],[29,20,29,22],[29,23,29,25],[29,28,29,30,"scanner"],[29,35,29,25],[29,36,29,38,"tokenIndex"],[29,46,29,8],[30,0,30,8],[30,10,30,12,"startOffset"],[30,21,30,23],[30,24,30,26],[30,29,30,31,"scanner"],[30,36,30,26],[30,37,30,39,"tokenStart"],[30,47,30,8],[31,0,31,8],[31,10,31,12,"prelude"],[31,17,31,8],[32,0,32,8],[32,10,32,12,"block"],[32,15,32,8],[34,0,34,8],[34,10,34,12],[34,15,34,17,"parseRulePrelude"],[34,31,34,8],[34,33,34,35],[35,0,35,12,"prelude"],[35,8,35,12,"prelude"],[35,15,35,19],[35,18,35,22],[35,23,35,27,"parseWithFallback"],[35,40,35,22],[35,41,35,45,"consumePrelude"],[35,55,35,22],[35,57,35,61,"consumeRaw"],[35,67,35,22],[35,68,35,12],[36,0,36,9],[36,7,34,8],[36,13,36,15],[37,0,37,12,"prelude"],[37,8,37,12,"prelude"],[37,15,37,19],[37,18,37,22,"consumeRaw"],[37,28,37,32],[37,29,37,33,"call"],[37,33,37,22],[37,34,37,38],[37,38,37,22],[37,40,37,44,"startToken"],[37,50,37,22],[37,51,37,12],[38,0,38,9],[40,0,40,8,"block"],[40,6,40,8,"block"],[40,11,40,13],[40,14,40,16],[40,19,40,21,"Block"],[40,24,40,16],[40,25,40,27],[40,29,40,16],[40,30,40,8],[41,0,42,8],[41,13,42,15],[42,0,43,12,"type"],[42,8,43,12,"type"],[42,12,43,16],[42,14,43,18],[42,20,42,15],[43,0,44,12,"loc"],[43,8,44,12,"loc"],[43,11,44,15],[43,13,44,17],[43,18,44,22,"getLocation"],[43,29,44,17],[43,30,44,34,"startOffset"],[43,41,44,17],[43,43,44,47],[43,48,44,52,"scanner"],[43,55,44,47],[43,56,44,60,"tokenStart"],[43,66,44,17],[43,67,42,15],[44,0,45,12,"prelude"],[44,8,45,12,"prelude"],[44,15,45,19],[44,17,45,21,"prelude"],[44,24,42,15],[45,0,46,12,"block"],[45,8,46,12,"block"],[45,13,46,17],[45,15,46,19,"block"],[46,0,42,15],[46,7,42,8],[47,0,48,5],[47,5,22,17],[48,0,49,4,"generate"],[48,4,49,4,"generate"],[48,12,49,12],[48,14,49,14],[48,32,49,23,"node"],[48,36,49,14],[48,38,49,29],[49,0,50,8],[49,11,50,13,"node"],[49,15,50,8],[49,16,50,18,"node"],[49,20,50,22],[49,21,50,23,"prelude"],[49,28,50,8],[50,0,51,8],[50,11,51,13,"node"],[50,15,51,8],[50,16,51,18,"node"],[50,20,51,22],[50,21,51,23,"block"],[50,26,51,8],[51,0,52,5],[51,5,22,17],[52,0,53,4,"walkContext"],[52,4,53,4,"walkContext"],[52,15,53,15],[52,17,53,17],[53,0,22,17],[53,3,22,0]]},"type":"js/module"}]}