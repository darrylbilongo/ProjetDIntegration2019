{"dependencies":[{"name":"./sourceMap","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var sourceMap = _$$_REQUIRE(_dependencyMap[0], \"./sourceMap\");\n\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n  function processChildren(node, delimeter) {\n    var list = node.children;\n    var prev = null;\n\n    if (typeof delimeter !== 'function') {\n      list.forEach(this.node, this);\n    } else {\n      list.forEach(function (node) {\n        if (prev !== null) {\n          delimeter.call(this, prev);\n        }\n\n        this.node(node);\n        prev = node;\n      }, this);\n    }\n  }\n\n  module.exports = function createGenerator(config) {\n    function processNode(node) {\n      if (hasOwnProperty.call(types, node.type)) {\n        types[node.type].call(this, node);\n      } else {\n        throw new Error('Unknown node type: ' + node.type);\n      }\n    }\n\n    var types = {};\n\n    if (config.node) {\n      for (var name in config.node) {\n        types[name] = config.node[name].generate;\n      }\n    }\n\n    return function (node, options) {\n      var buffer = '';\n      var handlers = {\n        children: processChildren,\n        node: processNode,\n        chunk: function chunk(_chunk) {\n          buffer += _chunk;\n        },\n        result: function result() {\n          return buffer;\n        }\n      };\n\n      if (options) {\n        if (typeof options.decorator === 'function') {\n          handlers = options.decorator(handlers);\n        }\n\n        if (options.sourceMap) {\n          handlers = sourceMap(handlers);\n        }\n      }\n\n      handlers.node(node);\n      return handlers.result();\n    };\n  };\n});","map":[[2,0,1,0],[2,6,1,4,"sourceMap"],[2,15,1,13],[2,18,1,16,"require"],[2,29,1,23],[2,63,1,0],[4,0,2,0],[4,6,2,4,"hasOwnProperty"],[4,20,2,18],[4,23,2,21,"Object"],[4,29,2,27],[4,30,2,28,"prototype"],[4,39,2,21],[4,40,2,38,"hasOwnProperty"],[4,54,2,0],[6,0,4,0],[6,11,4,9,"processChildren"],[6,26,4,0],[6,27,4,25,"node"],[6,31,4,0],[6,33,4,31,"delimeter"],[6,42,4,0],[6,44,4,42],[7,0,5,4],[7,8,5,8,"list"],[7,12,5,12],[7,15,5,15,"node"],[7,19,5,19],[7,20,5,20,"children"],[7,28,5,4],[8,0,6,4],[8,8,6,8,"prev"],[8,12,6,12],[8,15,6,15],[8,19,6,4],[10,0,8,4],[10,8,8,8],[10,15,8,15,"delimeter"],[10,24,8,8],[10,29,8,29],[10,39,8,4],[10,41,8,41],[11,0,9,8,"list"],[11,6,9,8,"list"],[11,10,9,12],[11,11,9,13,"forEach"],[11,18,9,8],[11,19,9,21],[11,24,9,26,"node"],[11,28,9,8],[11,30,9,32],[11,34,9,8],[12,0,10,5],[12,5,8,4],[12,11,10,11],[13,0,11,8,"list"],[13,6,11,8,"list"],[13,10,11,12],[13,11,11,13,"forEach"],[13,18,11,8],[13,19,11,21],[13,29,11,30,"node"],[13,33,11,21],[13,35,11,36],[14,0,12,12],[14,12,12,16,"prev"],[14,16,12,20],[14,21,12,25],[14,25,12,12],[14,27,12,31],[15,0,13,16,"delimeter"],[15,10,13,16,"delimeter"],[15,19,13,25],[15,20,13,26,"call"],[15,24,13,16],[15,25,13,31],[15,29,13,16],[15,31,13,37,"prev"],[15,35,13,16],[16,0,14,13],[18,0,16,12],[18,13,16,17,"node"],[18,17,16,12],[18,18,16,22,"node"],[18,22,16,12],[19,0,17,12,"prev"],[19,8,17,12,"prev"],[19,12,17,16],[19,15,17,19,"node"],[19,19,17,12],[20,0,18,9],[20,7,11,8],[20,9,18,11],[20,13,11,8],[21,0,19,5],[22,0,20,1],[24,0,22,0,"module"],[24,2,22,0,"module"],[24,8,22,6],[24,9,22,7,"exports"],[24,16,22,0],[24,19,22,17],[24,28,22,26,"createGenerator"],[24,43,22,17],[24,44,22,42,"config"],[24,50,22,17],[24,52,22,50],[25,0,23,4],[25,13,23,13,"processNode"],[25,24,23,4],[25,25,23,25,"node"],[25,29,23,4],[25,31,23,31],[26,0,24,8],[26,10,24,12,"hasOwnProperty"],[26,24,24,26],[26,25,24,27,"call"],[26,29,24,12],[26,30,24,32,"types"],[26,35,24,12],[26,37,24,39,"node"],[26,41,24,43],[26,42,24,44,"type"],[26,46,24,12],[26,47,24,8],[26,49,24,51],[27,0,25,12,"types"],[27,8,25,12,"types"],[27,13,25,17],[27,14,25,18,"node"],[27,18,25,22],[27,19,25,23,"type"],[27,23,25,17],[27,24,25,12],[27,25,25,29,"call"],[27,29,25,12],[27,30,25,34],[27,34,25,12],[27,36,25,40,"node"],[27,40,25,12],[28,0,26,9],[28,7,24,8],[28,13,26,15],[29,0,27,12],[29,14,27,18],[29,18,27,22,"Error"],[29,23,27,18],[29,24,27,28],[29,48,27,52,"node"],[29,52,27,56],[29,53,27,57,"type"],[29,57,27,18],[29,58,27,12],[30,0,28,9],[31,0,29,5],[33,0,31,4],[33,8,31,8,"types"],[33,13,31,13],[33,16,31,16],[33,18,31,4],[35,0,33,4],[35,8,33,8,"config"],[35,14,33,14],[35,15,33,15,"node"],[35,19,33,4],[35,21,33,21],[36,0,34,8],[36,11,34,13],[36,15,34,17,"name"],[36,19,34,8],[36,23,34,25,"config"],[36,29,34,31],[36,30,34,32,"node"],[36,34,34,8],[36,36,34,38],[37,0,35,12,"types"],[37,8,35,12,"types"],[37,13,35,17],[37,14,35,18,"name"],[37,18,35,17],[37,19,35,12],[37,22,35,26,"config"],[37,28,35,32],[37,29,35,33,"node"],[37,33,35,26],[37,34,35,38,"name"],[37,38,35,26],[37,40,35,44,"generate"],[37,48,35,12],[38,0,36,9],[39,0,37,5],[41,0,39,4],[41,11,39,11],[41,21,39,20,"node"],[41,25,39,11],[41,27,39,26,"options"],[41,34,39,11],[41,36,39,35],[42,0,40,8],[42,10,40,12,"buffer"],[42,16,40,18],[42,19,40,21],[42,21,40,8],[43,0,41,8],[43,10,41,12,"handlers"],[43,18,41,20],[43,21,41,23],[44,0,42,12,"children"],[44,8,42,12,"children"],[44,16,42,20],[44,18,42,22,"processChildren"],[44,33,41,23],[45,0,43,12,"node"],[45,8,43,12,"node"],[45,12,43,16],[45,14,43,18,"processNode"],[45,25,41,23],[46,0,44,12,"chunk"],[46,8,44,12,"chunk"],[46,13,44,17],[46,15,44,19],[46,30,44,28,"chunk"],[46,36,44,19],[46,38,44,35],[47,0,45,16,"buffer"],[47,10,45,16,"buffer"],[47,16,45,22],[47,20,45,26,"chunk"],[47,26,45,16],[48,0,46,13],[48,9,41,23],[49,0,47,12,"result"],[49,8,47,12,"result"],[49,14,47,18],[49,16,47,20],[49,34,47,31],[50,0,48,16],[50,17,48,23,"buffer"],[50,23,48,16],[51,0,49,13],[52,0,41,23],[52,7,41,8],[54,0,52,8],[54,10,52,12,"options"],[54,17,52,8],[54,19,52,21],[55,0,53,12],[55,12,53,16],[55,19,53,23,"options"],[55,26,53,30],[55,27,53,31,"decorator"],[55,36,53,16],[55,41,53,45],[55,51,53,12],[55,53,53,57],[56,0,54,16,"handlers"],[56,10,54,16,"handlers"],[56,18,54,24],[56,21,54,27,"options"],[56,28,54,34],[56,29,54,35,"decorator"],[56,38,54,27],[56,39,54,45,"handlers"],[56,47,54,27],[56,48,54,16],[57,0,55,13],[59,0,57,12],[59,12,57,16,"options"],[59,19,57,23],[59,20,57,24,"sourceMap"],[59,29,57,12],[59,31,57,35],[60,0,58,16,"handlers"],[60,10,58,16,"handlers"],[60,18,58,24],[60,21,58,27,"sourceMap"],[60,30,58,36],[60,31,58,37,"handlers"],[60,39,58,36],[60,40,58,16],[61,0,59,13],[62,0,60,9],[64,0,62,8,"handlers"],[64,6,62,8,"handlers"],[64,14,62,16],[64,15,62,17,"node"],[64,19,62,8],[64,20,62,22,"node"],[64,24,62,8],[65,0,64,8],[65,13,64,15,"handlers"],[65,21,64,23],[65,22,64,24,"result"],[65,28,64,15],[65,30,64,8],[66,0,65,5],[66,5,39,4],[67,0,66,1],[67,3,22,0]]},"type":"js/module"}]}