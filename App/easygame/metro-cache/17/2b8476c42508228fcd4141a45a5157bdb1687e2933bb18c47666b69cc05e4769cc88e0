{"dependencies":[{"name":"../common/TokenStream","data":{"isAsync":false}},{"name":"../common/adopt-buffer","data":{"isAsync":false}},{"name":"./const","data":{"isAsync":false}},{"name":"./char-code-definitions","data":{"isAsync":false}},{"name":"./utils","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var TokenStream = _$$_REQUIRE(_dependencyMap[0], \"../common/TokenStream\");\n\n  var adoptBuffer = _$$_REQUIRE(_dependencyMap[1], \"../common/adopt-buffer\");\n\n  var constants = _$$_REQUIRE(_dependencyMap[2], \"./const\");\n\n  var TYPE = constants.TYPE;\n\n  var charCodeDefinitions = _$$_REQUIRE(_dependencyMap[3], \"./char-code-definitions\");\n\n  var isNewline = charCodeDefinitions.isNewline;\n  var isName = charCodeDefinitions.isName;\n  var isValidEscape = charCodeDefinitions.isValidEscape;\n  var isNumberStart = charCodeDefinitions.isNumberStart;\n  var isIdentifierStart = charCodeDefinitions.isIdentifierStart;\n  var charCodeCategory = charCodeDefinitions.charCodeCategory;\n  var isBOM = charCodeDefinitions.isBOM;\n\n  var utils = _$$_REQUIRE(_dependencyMap[4], \"./utils\");\n\n  var cmpStr = utils.cmpStr;\n  var getNewlineLength = utils.getNewlineLength;\n  var findWhiteSpaceEnd = utils.findWhiteSpaceEnd;\n  var consumeEscaped = utils.consumeEscaped;\n  var consumeName = utils.consumeName;\n  var consumeNumber = utils.consumeNumber;\n  var consumeBadUrlRemnants = utils.consumeBadUrlRemnants;\n  var OFFSET_MASK = 0x00FFFFFF;\n  var TYPE_SHIFT = 24;\n\n  function tokenize(source, stream) {\n    function getCharCode(offset) {\n      return offset < sourceLength ? source.charCodeAt(offset) : 0;\n    }\n\n    function consumeNumericToken() {\n      offset = consumeNumber(source, offset);\n\n      if (isIdentifierStart(getCharCode(offset), getCharCode(offset + 1), getCharCode(offset + 2))) {\n        type = TYPE.Dimension;\n        offset = consumeName(source, offset);\n        return;\n      }\n\n      if (getCharCode(offset) === 0x0025) {\n        type = TYPE.Percentage;\n        offset++;\n        return;\n      }\n\n      type = TYPE.Number;\n    }\n\n    function consumeIdentLikeToken() {\n      var nameStartOffset = offset;\n      offset = consumeName(source, offset);\n\n      if (cmpStr(source, nameStartOffset, offset, 'url') && getCharCode(offset) === 0x0028) {\n        offset = findWhiteSpaceEnd(source, offset + 1);\n\n        if (getCharCode(offset) === 0x0022 || getCharCode(offset) === 0x0027) {\n          type = TYPE.Function;\n          offset = nameStartOffset + 4;\n          return;\n        }\n\n        consumeUrlToken();\n        return;\n      }\n\n      if (getCharCode(offset) === 0x0028) {\n        type = TYPE.Function;\n        offset++;\n        return;\n      }\n\n      type = TYPE.Ident;\n    }\n\n    function consumeStringToken(endingCodePoint) {\n      if (!endingCodePoint) {\n        endingCodePoint = getCharCode(offset++);\n      }\n\n      type = TYPE.String;\n\n      for (; offset < source.length; offset++) {\n        var code = source.charCodeAt(offset);\n\n        switch (charCodeCategory(code)) {\n          case endingCodePoint:\n            offset++;\n            return;\n\n          case charCodeCategory.Eof:\n            return;\n\n          case charCodeCategory.WhiteSpace:\n            if (isNewline(code)) {\n              offset += getNewlineLength(source, offset, code);\n              type = TYPE.BadString;\n              return;\n            }\n\n            break;\n\n          case 0x005C:\n            if (offset === source.length - 1) {\n              break;\n            }\n\n            var nextCode = getCharCode(offset + 1);\n\n            if (isNewline(nextCode)) {\n              offset += getNewlineLength(source, offset + 1, nextCode);\n            } else if (isValidEscape(code, nextCode)) {\n              offset = consumeEscaped(source, offset) - 1;\n            }\n\n            break;\n        }\n      }\n    }\n\n    function consumeUrlToken() {\n      type = TYPE.Url;\n      offset = findWhiteSpaceEnd(source, offset);\n\n      for (; offset < source.length; offset++) {\n        var code = source.charCodeAt(offset);\n\n        switch (charCodeCategory(code)) {\n          case 0x0029:\n            offset++;\n            return;\n\n          case charCodeCategory.Eof:\n            return;\n\n          case charCodeCategory.WhiteSpace:\n            offset = findWhiteSpaceEnd(source, offset);\n\n            if (getCharCode(offset) === 0x0029 || offset >= source.length) {\n              if (offset < source.length) {\n                offset++;\n              }\n\n              return;\n            }\n\n            offset = consumeBadUrlRemnants(source, offset);\n            type = TYPE.BadUrl;\n            return;\n\n          case 0x0022:\n          case 0x0027:\n          case 0x0028:\n          case charCodeCategory.NonPrintable:\n            offset = consumeBadUrlRemnants(source, offset);\n            type = TYPE.BadUrl;\n            return;\n\n          case 0x005C:\n            if (isValidEscape(code, getCharCode(offset + 1))) {\n              offset = consumeEscaped(source, offset) - 1;\n              break;\n            }\n\n            offset = consumeBadUrlRemnants(source, offset);\n            type = TYPE.BadUrl;\n            return;\n        }\n      }\n    }\n\n    if (!stream) {\n      stream = new TokenStream();\n    }\n\n    source = String(source || '');\n    var sourceLength = source.length;\n    var offsetAndType = adoptBuffer(stream.offsetAndType, sourceLength + 1);\n    var balance = adoptBuffer(stream.balance, sourceLength + 1);\n    var tokenCount = 0;\n    var start = isBOM(getCharCode(0));\n    var offset = start;\n    var balanceCloseType = 0;\n    var balanceStart = 0;\n    var balancePrev = 0;\n\n    while (offset < sourceLength) {\n      var code = source.charCodeAt(offset);\n      var type = 0;\n      balance[tokenCount] = sourceLength;\n\n      switch (charCodeCategory(code)) {\n        case charCodeCategory.WhiteSpace:\n          type = TYPE.WhiteSpace;\n          offset = findWhiteSpaceEnd(source, offset + 1);\n          break;\n\n        case 0x0022:\n          consumeStringToken();\n          break;\n\n        case 0x0023:\n          if (isName(getCharCode(offset + 1)) || isValidEscape(getCharCode(offset + 1), getCharCode(offset + 2))) {\n            type = TYPE.Hash;\n            offset = consumeName(source, offset + 1);\n          } else {\n            type = TYPE.Delim;\n            offset++;\n          }\n\n          break;\n\n        case 0x0027:\n          consumeStringToken();\n          break;\n\n        case 0x0028:\n          type = TYPE.LeftParenthesis;\n          offset++;\n          break;\n\n        case 0x0029:\n          type = TYPE.RightParenthesis;\n          offset++;\n          break;\n\n        case 0x002B:\n          if (isNumberStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {\n            consumeNumericToken();\n          } else {\n            type = TYPE.Delim;\n            offset++;\n          }\n\n          break;\n\n        case 0x002C:\n          type = TYPE.Comma;\n          offset++;\n          break;\n\n        case 0x002D:\n          if (isNumberStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {\n            consumeNumericToken();\n          } else {\n            if (getCharCode(offset + 1) === 0x002D && getCharCode(offset + 2) === 0x003E) {\n              type = TYPE.CDC;\n              offset = offset + 3;\n            } else {\n              if (isIdentifierStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {\n                consumeIdentLikeToken();\n              } else {\n                type = TYPE.Delim;\n                offset++;\n              }\n            }\n          }\n\n          break;\n\n        case 0x002E:\n          if (isNumberStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {\n            consumeNumericToken();\n          } else {\n            type = TYPE.Delim;\n            offset++;\n          }\n\n          break;\n\n        case 0x002F:\n          if (getCharCode(offset + 1) === 0x002A) {\n            type = TYPE.Comment;\n            offset = source.indexOf('*/', offset + 2) + 2;\n\n            if (offset === 1) {\n              offset = source.length;\n            }\n          } else {\n            type = TYPE.Delim;\n            offset++;\n          }\n\n          break;\n\n        case 0x003A:\n          type = TYPE.Colon;\n          offset++;\n          break;\n\n        case 0x003B:\n          type = TYPE.Semicolon;\n          offset++;\n          break;\n\n        case 0x003C:\n          if (getCharCode(offset + 1) === 0x0021 && getCharCode(offset + 2) === 0x002D && getCharCode(offset + 3) === 0x002D) {\n            type = TYPE.CDO;\n            offset = offset + 4;\n          } else {\n            type = TYPE.Delim;\n            offset++;\n          }\n\n          break;\n\n        case 0x0040:\n          if (isIdentifierStart(getCharCode(offset + 1), getCharCode(offset + 2), getCharCode(offset + 3))) {\n            type = TYPE.AtKeyword;\n            offset = consumeName(source, offset + 1);\n          } else {\n            type = TYPE.Delim;\n            offset++;\n          }\n\n          break;\n\n        case 0x005B:\n          type = TYPE.LeftSquareBracket;\n          offset++;\n          break;\n\n        case 0x005C:\n          if (isValidEscape(code, getCharCode(offset + 1))) {\n            consumeIdentLikeToken();\n          } else {\n            type = TYPE.Delim;\n            offset++;\n          }\n\n          break;\n\n        case 0x005D:\n          type = TYPE.RightSquareBracket;\n          offset++;\n          break;\n\n        case 0x007B:\n          type = TYPE.LeftCurlyBracket;\n          offset++;\n          break;\n\n        case 0x007D:\n          type = TYPE.RightCurlyBracket;\n          offset++;\n          break;\n\n        case charCodeCategory.Digit:\n          consumeNumericToken();\n          break;\n\n        case charCodeCategory.NameStart:\n          consumeIdentLikeToken();\n          break;\n\n        case charCodeCategory.Eof:\n          break;\n\n        default:\n          type = TYPE.Delim;\n          offset++;\n      }\n\n      switch (type) {\n        case balanceCloseType:\n          balancePrev = balanceStart & OFFSET_MASK;\n          balanceStart = balance[balancePrev];\n          balanceCloseType = balanceStart >> TYPE_SHIFT;\n          balance[tokenCount] = balancePrev;\n          balance[balancePrev++] = tokenCount;\n\n          for (; balancePrev < tokenCount; balancePrev++) {\n            if (balance[balancePrev] === sourceLength) {\n              balance[balancePrev] = tokenCount;\n            }\n          }\n\n          break;\n\n        case TYPE.LeftParenthesis:\n        case TYPE.Function:\n          balance[tokenCount] = balanceStart;\n          balanceCloseType = TYPE.RightParenthesis;\n          balanceStart = balanceCloseType << TYPE_SHIFT | tokenCount;\n          break;\n\n        case TYPE.LeftSquareBracket:\n          balance[tokenCount] = balanceStart;\n          balanceCloseType = TYPE.RightSquareBracket;\n          balanceStart = balanceCloseType << TYPE_SHIFT | tokenCount;\n          break;\n\n        case TYPE.LeftCurlyBracket:\n          balance[tokenCount] = balanceStart;\n          balanceCloseType = TYPE.RightCurlyBracket;\n          balanceStart = balanceCloseType << TYPE_SHIFT | tokenCount;\n          break;\n      }\n\n      offsetAndType[tokenCount++] = type << TYPE_SHIFT | offset;\n    }\n\n    offsetAndType[tokenCount] = TYPE.EOF << TYPE_SHIFT | offset;\n    balance[tokenCount] = sourceLength;\n    balance[sourceLength] = sourceLength;\n\n    while (balanceStart !== 0) {\n      balancePrev = balanceStart & OFFSET_MASK;\n      balanceStart = balance[balancePrev];\n      balance[balancePrev] = sourceLength;\n    }\n\n    stream.source = source;\n    stream.firstCharOffset = start;\n    stream.offsetAndType = offsetAndType;\n    stream.tokenCount = tokenCount;\n    stream.balance = balance;\n    stream.reset();\n    stream.next();\n    return stream;\n  }\n\n  Object.keys(constants).forEach(function (key) {\n    tokenize[key] = constants[key];\n  });\n  Object.keys(charCodeDefinitions).forEach(function (key) {\n    tokenize[key] = charCodeDefinitions[key];\n  });\n  Object.keys(utils).forEach(function (key) {\n    tokenize[key] = utils[key];\n  });\n  module.exports = tokenize;\n});","map":[[2,0,1,0],[2,6,1,4,"TokenStream"],[2,17,1,15],[2,20,1,18,"require"],[2,31,1,25],[2,75,1,0],[4,0,2,0],[4,6,2,4,"adoptBuffer"],[4,17,2,15],[4,20,2,18,"require"],[4,31,2,25],[4,76,2,0],[6,0,4,0],[6,6,4,4,"constants"],[6,15,4,13],[6,18,4,16,"require"],[6,29,4,23],[6,59,4,0],[8,0,5,0],[8,6,5,4,"TYPE"],[8,10,5,8],[8,13,5,11,"constants"],[8,22,5,20],[8,23,5,21,"TYPE"],[8,27,5,0],[10,0,7,0],[10,6,7,4,"charCodeDefinitions"],[10,25,7,23],[10,28,7,26,"require"],[10,39,7,33],[10,85,7,0],[12,0,8,0],[12,6,8,4,"isNewline"],[12,15,8,13],[12,18,8,16,"charCodeDefinitions"],[12,37,8,35],[12,38,8,36,"isNewline"],[12,47,8,0],[13,0,9,0],[13,6,9,4,"isName"],[13,12,9,10],[13,15,9,13,"charCodeDefinitions"],[13,34,9,32],[13,35,9,33,"isName"],[13,41,9,0],[14,0,10,0],[14,6,10,4,"isValidEscape"],[14,19,10,17],[14,22,10,20,"charCodeDefinitions"],[14,41,10,39],[14,42,10,40,"isValidEscape"],[14,55,10,0],[15,0,11,0],[15,6,11,4,"isNumberStart"],[15,19,11,17],[15,22,11,20,"charCodeDefinitions"],[15,41,11,39],[15,42,11,40,"isNumberStart"],[15,55,11,0],[16,0,12,0],[16,6,12,4,"isIdentifierStart"],[16,23,12,21],[16,26,12,24,"charCodeDefinitions"],[16,45,12,43],[16,46,12,44,"isIdentifierStart"],[16,63,12,0],[17,0,13,0],[17,6,13,4,"charCodeCategory"],[17,22,13,20],[17,25,13,23,"charCodeDefinitions"],[17,44,13,42],[17,45,13,43,"charCodeCategory"],[17,61,13,0],[18,0,14,0],[18,6,14,4,"isBOM"],[18,11,14,9],[18,14,14,12,"charCodeDefinitions"],[18,33,14,31],[18,34,14,32,"isBOM"],[18,39,14,0],[20,0,16,0],[20,6,16,4,"utils"],[20,11,16,9],[20,14,16,12,"require"],[20,25,16,19],[20,55,16,0],[22,0,17,0],[22,6,17,4,"cmpStr"],[22,12,17,10],[22,15,17,13,"utils"],[22,20,17,18],[22,21,17,19,"cmpStr"],[22,27,17,0],[23,0,18,0],[23,6,18,4,"getNewlineLength"],[23,22,18,20],[23,25,18,23,"utils"],[23,30,18,28],[23,31,18,29,"getNewlineLength"],[23,47,18,0],[24,0,19,0],[24,6,19,4,"findWhiteSpaceEnd"],[24,23,19,21],[24,26,19,24,"utils"],[24,31,19,29],[24,32,19,30,"findWhiteSpaceEnd"],[24,49,19,0],[25,0,20,0],[25,6,20,4,"consumeEscaped"],[25,20,20,18],[25,23,20,21,"utils"],[25,28,20,26],[25,29,20,27,"consumeEscaped"],[25,43,20,0],[26,0,21,0],[26,6,21,4,"consumeName"],[26,17,21,15],[26,20,21,18,"utils"],[26,25,21,23],[26,26,21,24,"consumeName"],[26,37,21,0],[27,0,22,0],[27,6,22,4,"consumeNumber"],[27,19,22,17],[27,22,22,20,"utils"],[27,27,22,25],[27,28,22,26,"consumeNumber"],[27,41,22,0],[28,0,23,0],[28,6,23,4,"consumeBadUrlRemnants"],[28,27,23,25],[28,30,23,28,"utils"],[28,35,23,33],[28,36,23,34,"consumeBadUrlRemnants"],[28,57,23,0],[29,0,25,0],[29,6,25,4,"OFFSET_MASK"],[29,17,25,15],[29,20,25,18],[29,30,25,0],[30,0,26,0],[30,6,26,4,"TYPE_SHIFT"],[30,16,26,14],[30,19,26,17],[30,21,26,0],[32,0,28,0],[32,11,28,9,"tokenize"],[32,19,28,0],[32,20,28,18,"source"],[32,26,28,0],[32,28,28,26,"stream"],[32,34,28,0],[32,36,28,34],[33,0,29,4],[33,13,29,13,"getCharCode"],[33,24,29,4],[33,25,29,25,"offset"],[33,31,29,4],[33,33,29,33],[34,0,30,8],[34,13,30,15,"offset"],[34,19,30,21],[34,22,30,24,"sourceLength"],[34,34,30,15],[34,37,30,39,"source"],[34,43,30,45],[34,44,30,46,"charCodeAt"],[34,54,30,39],[34,55,30,57,"offset"],[34,61,30,39],[34,62,30,15],[34,65,30,67],[34,66,30,8],[35,0,31,5],[37,0,34,4],[37,13,34,13,"consumeNumericToken"],[37,32,34,4],[37,35,34,35],[38,0,36,8,"offset"],[38,6,36,8,"offset"],[38,12,36,14],[38,15,36,17,"consumeNumber"],[38,28,36,30],[38,29,36,31,"source"],[38,35,36,30],[38,37,36,39,"offset"],[38,43,36,30],[38,44,36,8],[40,0,39,8],[40,10,39,12,"isIdentifierStart"],[40,27,39,29],[40,28,39,30,"getCharCode"],[40,39,39,41],[40,40,39,42,"offset"],[40,46,39,41],[40,47,39,29],[40,49,39,51,"getCharCode"],[40,60,39,62],[40,61,39,63,"offset"],[40,67,39,69],[40,70,39,72],[40,71,39,62],[40,72,39,29],[40,74,39,76,"getCharCode"],[40,85,39,87],[40,86,39,88,"offset"],[40,92,39,94],[40,95,39,97],[40,96,39,87],[40,97,39,29],[40,98,39,8],[40,100,39,102],[41,0,43,12,"type"],[41,8,43,12,"type"],[41,12,43,16],[41,15,43,19,"TYPE"],[41,19,43,23],[41,20,43,24,"Dimension"],[41,29,43,12],[42,0,44,12,"offset"],[42,8,44,12,"offset"],[42,14,44,18],[42,17,44,21,"consumeName"],[42,28,44,32],[42,29,44,33,"source"],[42,35,44,32],[42,37,44,41,"offset"],[42,43,44,32],[42,44,44,12],[43,0,45,12],[44,0,46,9],[46,0,49,8],[46,10,49,12,"getCharCode"],[46,21,49,23],[46,22,49,24,"offset"],[46,28,49,23],[46,29,49,12],[46,34,49,36],[46,40,49,8],[46,42,49,44],[47,0,51,12,"type"],[47,8,51,12,"type"],[47,12,51,16],[47,15,51,19,"TYPE"],[47,19,51,23],[47,20,51,24,"Percentage"],[47,30,51,12],[48,0,52,12,"offset"],[48,8,52,12,"offset"],[48,14,52,18],[49,0,53,12],[50,0,54,9],[52,0,57,8,"type"],[52,6,57,8,"type"],[52,10,57,12],[52,13,57,15,"TYPE"],[52,17,57,19],[52,18,57,20,"Number"],[52,24,57,8],[53,0,58,5],[55,0,61,4],[55,13,61,13,"consumeIdentLikeToken"],[55,34,61,4],[55,37,61,37],[56,0,62,8],[56,10,62,14,"nameStartOffset"],[56,25,62,29],[56,28,62,32,"offset"],[56,34,62,8],[57,0,65,8,"offset"],[57,6,65,8,"offset"],[57,12,65,14],[57,15,65,17,"consumeName"],[57,26,65,28],[57,27,65,29,"source"],[57,33,65,28],[57,35,65,37,"offset"],[57,41,65,28],[57,42,65,8],[59,0,69,8],[59,10,69,12,"cmpStr"],[59,16,69,18],[59,17,69,19,"source"],[59,23,69,18],[59,25,69,27,"nameStartOffset"],[59,40,69,18],[59,42,69,44,"offset"],[59,48,69,18],[59,50,69,52],[59,55,69,18],[59,56,69,12],[59,60,69,62,"getCharCode"],[59,71,69,73],[59,72,69,74,"offset"],[59,78,69,73],[59,79,69,62],[59,84,69,86],[59,90,69,8],[59,92,69,94],[60,0,71,12,"offset"],[60,8,71,12,"offset"],[60,14,71,18],[60,17,71,21,"findWhiteSpaceEnd"],[60,34,71,38],[60,35,71,39,"source"],[60,41,71,38],[60,43,71,47,"offset"],[60,49,71,53],[60,52,71,56],[60,53,71,38],[60,54,71,12],[62,0,76,12],[62,12,76,16,"getCharCode"],[62,23,76,27],[62,24,76,28,"offset"],[62,30,76,27],[62,31,76,16],[62,36,76,40],[62,42,76,16],[62,46,77,16,"getCharCode"],[62,57,77,27],[62,58,77,28,"offset"],[62,64,77,27],[62,65,77,16],[62,70,77,40],[62,76,76,12],[62,78,77,48],[63,0,78,16,"type"],[63,10,78,16,"type"],[63,14,78,20],[63,17,78,23,"TYPE"],[63,21,78,27],[63,22,78,28,"Function"],[63,30,78,16],[64,0,79,16,"offset"],[64,10,79,16,"offset"],[64,16,79,22],[64,19,79,25,"nameStartOffset"],[64,34,79,40],[64,37,79,43],[64,38,79,16],[65,0,80,16],[66,0,81,13],[68,0,84,12,"consumeUrlToken"],[68,8,84,12,"consumeUrlToken"],[68,23,84,27],[69,0,85,12],[70,0,86,9],[72,0,90,8],[72,10,90,12,"getCharCode"],[72,21,90,23],[72,22,90,24,"offset"],[72,28,90,23],[72,29,90,12],[72,34,90,36],[72,40,90,8],[72,42,90,44],[73,0,91,12,"type"],[73,8,91,12,"type"],[73,12,91,16],[73,15,91,19,"TYPE"],[73,19,91,23],[73,20,91,24,"Function"],[73,28,91,12],[74,0,92,12,"offset"],[74,8,92,12,"offset"],[74,14,92,18],[75,0,93,12],[76,0,94,9],[78,0,97,8,"type"],[78,6,97,8,"type"],[78,10,97,12],[78,13,97,15,"TYPE"],[78,17,97,19],[78,18,97,20,"Ident"],[78,23,97,8],[79,0,98,5],[81,0,101,4],[81,13,101,13,"consumeStringToken"],[81,31,101,4],[81,32,101,32,"endingCodePoint"],[81,47,101,4],[81,49,101,49],[82,0,105,8],[82,10,105,12],[82,11,105,13,"endingCodePoint"],[82,26,105,8],[82,28,105,30],[83,0,106,12,"endingCodePoint"],[83,8,106,12,"endingCodePoint"],[83,23,106,27],[83,26,106,30,"getCharCode"],[83,37,106,41],[83,38,106,42,"offset"],[83,44,106,48],[83,46,106,41],[83,47,106,12],[84,0,107,9],[86,0,110,8,"type"],[86,6,110,8,"type"],[86,10,110,12],[86,13,110,15,"TYPE"],[86,17,110,19],[86,18,110,20,"String"],[86,24,110,8],[88,0,113,8],[88,13,113,15,"offset"],[88,19,113,21],[88,22,113,24,"source"],[88,28,113,30],[88,29,113,31,"length"],[88,35,113,8],[88,37,113,39,"offset"],[88,43,113,45],[88,45,113,8],[88,47,113,49],[89,0,114,12],[89,12,114,16,"code"],[89,16,114,20],[89,19,114,23,"source"],[89,25,114,29],[89,26,114,30,"charCodeAt"],[89,36,114,23],[89,37,114,41,"offset"],[89,43,114,23],[89,44,114,12],[91,0,116,12],[91,16,116,20,"charCodeCategory"],[91,32,116,36],[91,33,116,37,"code"],[91,37,116,36],[91,38,116,12],[92,0,118,16],[92,15,118,21,"endingCodePoint"],[92,30,118,16],[93,0,120,20,"offset"],[93,12,120,20,"offset"],[93,18,120,26],[94,0,121,20],[96,0,124,16],[96,15,124,21,"charCodeCategory"],[96,31,124,37],[96,32,124,38,"Eof"],[96,35,124,16],[97,0,126,20],[99,0,129,16],[99,15,129,21,"charCodeCategory"],[99,31,129,37],[99,32,129,38,"WhiteSpace"],[99,42,129,16],[100,0,130,20],[100,16,130,24,"isNewline"],[100,25,130,33],[100,26,130,34,"code"],[100,30,130,33],[100,31,130,20],[100,33,130,41],[101,0,133,24,"offset"],[101,14,133,24,"offset"],[101,20,133,30],[101,24,133,34,"getNewlineLength"],[101,40,133,50],[101,41,133,51,"source"],[101,47,133,50],[101,49,133,59,"offset"],[101,55,133,50],[101,57,133,67,"code"],[101,61,133,50],[101,62,133,24],[102,0,134,24,"type"],[102,14,134,24,"type"],[102,18,134,28],[102,21,134,31,"TYPE"],[102,25,134,35],[102,26,134,36,"BadString"],[102,35,134,24],[103,0,135,24],[104,0,136,21],[106,0,137,20],[108,0,140,16],[108,15,140,21],[108,21,140,16],[109,0,142,20],[109,16,142,24,"offset"],[109,22,142,30],[109,27,142,35,"source"],[109,33,142,41],[109,34,142,42,"length"],[109,40,142,35],[109,43,142,51],[109,44,142,20],[109,46,142,54],[110,0,143,24],[111,0,144,21],[113,0,146,20],[113,16,146,24,"nextCode"],[113,24,146,32],[113,27,146,35,"getCharCode"],[113,38,146,46],[113,39,146,47,"offset"],[113,45,146,53],[113,48,146,56],[113,49,146,46],[113,50,146,20],[115,0,149,20],[115,16,149,24,"isNewline"],[115,25,149,33],[115,26,149,34,"nextCode"],[115,34,149,33],[115,35,149,20],[115,37,149,45],[116,0,150,24,"offset"],[116,14,150,24,"offset"],[116,20,150,30],[116,24,150,34,"getNewlineLength"],[116,40,150,50],[116,41,150,51,"source"],[116,47,150,50],[116,49,150,59,"offset"],[116,55,150,65],[116,58,150,68],[116,59,150,50],[116,61,150,71,"nextCode"],[116,69,150,50],[116,70,150,24],[117,0,151,21],[117,13,149,20],[117,19,151,27],[117,23,151,31,"isValidEscape"],[117,36,151,44],[117,37,151,45,"code"],[117,41,151,44],[117,43,151,51,"nextCode"],[117,51,151,44],[117,52,151,27],[117,54,151,62],[118,0,155,24,"offset"],[118,14,155,24,"offset"],[118,20,155,30],[118,23,155,33,"consumeEscaped"],[118,37,155,47],[118,38,155,48,"source"],[118,44,155,47],[118,46,155,56,"offset"],[118,52,155,47],[118,53,155,33],[118,56,155,66],[118,57,155,24],[119,0,156,21],[121,0,157,20],[122,0,116,12],[123,0,162,9],[124,0,163,5],[126,0,170,4],[126,13,170,13,"consumeUrlToken"],[126,28,170,4],[126,31,170,31],[127,0,172,8,"type"],[127,6,172,8,"type"],[127,10,172,12],[127,13,172,15,"TYPE"],[127,17,172,19],[127,18,172,20,"Url"],[127,21,172,8],[128,0,175,8,"offset"],[128,6,175,8,"offset"],[128,12,175,14],[128,15,175,17,"findWhiteSpaceEnd"],[128,32,175,34],[128,33,175,35,"source"],[128,39,175,34],[128,41,175,43,"offset"],[128,47,175,34],[128,48,175,8],[130,0,178,8],[130,13,178,15,"offset"],[130,19,178,21],[130,22,178,24,"source"],[130,28,178,30],[130,29,178,31,"length"],[130,35,178,8],[130,37,178,39,"offset"],[130,43,178,45],[130,45,178,8],[130,47,178,49],[131,0,179,12],[131,12,179,16,"code"],[131,16,179,20],[131,19,179,23,"source"],[131,25,179,29],[131,26,179,30,"charCodeAt"],[131,36,179,23],[131,37,179,41,"offset"],[131,43,179,23],[131,44,179,12],[133,0,181,12],[133,16,181,20,"charCodeCategory"],[133,32,181,36],[133,33,181,37,"code"],[133,37,181,36],[133,38,181,12],[134,0,183,16],[134,15,183,21],[134,21,183,16],[135,0,185,20,"offset"],[135,12,185,20,"offset"],[135,18,185,26],[136,0,186,20],[138,0,189,16],[138,15,189,21,"charCodeCategory"],[138,31,189,37],[138,32,189,38,"Eof"],[138,35,189,16],[139,0,191,20],[141,0,194,16],[141,15,194,21,"charCodeCategory"],[141,31,194,37],[141,32,194,38,"WhiteSpace"],[141,42,194,16],[142,0,196,20,"offset"],[142,12,196,20,"offset"],[142,18,196,26],[142,21,196,29,"findWhiteSpaceEnd"],[142,38,196,46],[142,39,196,47,"source"],[142,45,196,46],[142,47,196,55,"offset"],[142,53,196,46],[142,54,196,20],[144,0,201,20],[144,16,201,24,"getCharCode"],[144,27,201,35],[144,28,201,36,"offset"],[144,34,201,35],[144,35,201,24],[144,40,201,48],[144,46,201,24],[144,50,201,58,"offset"],[144,56,201,64],[144,60,201,68,"source"],[144,66,201,74],[144,67,201,75,"length"],[144,73,201,20],[144,75,201,83],[145,0,202,24],[145,18,202,28,"offset"],[145,24,202,34],[145,27,202,37,"source"],[145,33,202,43],[145,34,202,44,"length"],[145,40,202,24],[145,42,202,52],[146,0,203,28,"offset"],[146,16,203,28,"offset"],[146,22,203,34],[147,0,204,25],[149,0,205,24],[150,0,206,21],[152,0,210,20,"offset"],[152,12,210,20,"offset"],[152,18,210,26],[152,21,210,29,"consumeBadUrlRemnants"],[152,42,210,50],[152,43,210,51,"source"],[152,49,210,50],[152,51,210,59,"offset"],[152,57,210,50],[152,58,210,20],[153,0,211,20,"type"],[153,12,211,20,"type"],[153,16,211,24],[153,19,211,27,"TYPE"],[153,23,211,31],[153,24,211,32,"BadUrl"],[153,30,211,20],[154,0,212,20],[156,0,218,16],[156,15,218,21],[156,21,218,16],[157,0,219,16],[157,15,219,21],[157,21,219,16],[158,0,220,16],[158,15,220,21],[158,21,220,16],[159,0,221,16],[159,15,221,21,"charCodeCategory"],[159,31,221,37],[159,32,221,38,"NonPrintable"],[159,44,221,16],[160,0,224,20,"offset"],[160,12,224,20,"offset"],[160,18,224,26],[160,21,224,29,"consumeBadUrlRemnants"],[160,42,224,50],[160,43,224,51,"source"],[160,49,224,50],[160,51,224,59,"offset"],[160,57,224,50],[160,58,224,20],[161,0,225,20,"type"],[161,12,225,20,"type"],[161,16,225,24],[161,19,225,27,"TYPE"],[161,23,225,31],[161,24,225,32,"BadUrl"],[161,30,225,20],[162,0,226,20],[164,0,229,16],[164,15,229,21],[164,21,229,16],[165,0,232,20],[165,16,232,24,"isValidEscape"],[165,29,232,37],[165,30,232,38,"code"],[165,34,232,37],[165,36,232,44,"getCharCode"],[165,47,232,55],[165,48,232,56,"offset"],[165,54,232,62],[165,57,232,65],[165,58,232,55],[165,59,232,37],[165,60,232,20],[165,62,232,70],[166,0,233,24,"offset"],[166,14,233,24,"offset"],[166,20,233,30],[166,23,233,33,"consumeEscaped"],[166,37,233,47],[166,38,233,48,"source"],[166,44,233,47],[166,46,233,56,"offset"],[166,52,233,47],[166,53,233,33],[166,56,233,66],[166,57,233,24],[167,0,234,24],[168,0,235,21],[170,0,239,20,"offset"],[170,12,239,20,"offset"],[170,18,239,26],[170,21,239,29,"consumeBadUrlRemnants"],[170,42,239,50],[170,43,239,51,"source"],[170,49,239,50],[170,51,239,59,"offset"],[170,57,239,50],[170,58,239,20],[171,0,240,20,"type"],[171,12,240,20,"type"],[171,16,240,24],[171,19,240,27,"TYPE"],[171,23,240,31],[171,24,240,32,"BadUrl"],[171,30,240,20],[172,0,241,20],[173,0,181,12],[174,0,246,9],[175,0,247,5],[177,0,249,4],[177,8,249,8],[177,9,249,9,"stream"],[177,15,249,4],[177,17,249,17],[178,0,250,8,"stream"],[178,6,250,8,"stream"],[178,12,250,14],[178,15,250,17],[178,19,250,21,"TokenStream"],[178,30,250,17],[178,32,250,8],[179,0,251,5],[181,0,254,4,"source"],[181,4,254,4,"source"],[181,10,254,10],[181,13,254,13,"String"],[181,19,254,19],[181,20,254,20,"source"],[181,26,254,26],[181,30,254,30],[181,32,254,19],[181,33,254,4],[182,0,256,4],[182,8,256,8,"sourceLength"],[182,20,256,20],[182,23,256,23,"source"],[182,29,256,29],[182,30,256,30,"length"],[182,36,256,4],[183,0,257,4],[183,8,257,8,"offsetAndType"],[183,21,257,21],[183,24,257,24,"adoptBuffer"],[183,35,257,35],[183,36,257,36,"stream"],[183,42,257,42],[183,43,257,43,"offsetAndType"],[183,56,257,35],[183,58,257,58,"sourceLength"],[183,70,257,70],[183,73,257,73],[183,74,257,35],[183,75,257,4],[184,0,258,4],[184,8,258,8,"balance"],[184,15,258,15],[184,18,258,18,"adoptBuffer"],[184,29,258,29],[184,30,258,30,"stream"],[184,36,258,36],[184,37,258,37,"balance"],[184,44,258,29],[184,46,258,46,"sourceLength"],[184,58,258,58],[184,61,258,61],[184,62,258,29],[184,63,258,4],[185,0,259,4],[185,8,259,8,"tokenCount"],[185,18,259,18],[185,21,259,21],[185,22,259,4],[186,0,260,4],[186,8,260,8,"start"],[186,13,260,13],[186,16,260,16,"isBOM"],[186,21,260,21],[186,22,260,22,"getCharCode"],[186,33,260,33],[186,34,260,34],[186,35,260,33],[186,36,260,21],[186,37,260,4],[187,0,261,4],[187,8,261,8,"offset"],[187,14,261,14],[187,17,261,17,"start"],[187,22,261,4],[188,0,262,4],[188,8,262,8,"balanceCloseType"],[188,24,262,24],[188,27,262,27],[188,28,262,4],[189,0,263,4],[189,8,263,8,"balanceStart"],[189,20,263,20],[189,23,263,23],[189,24,263,4],[190,0,264,4],[190,8,264,8,"balancePrev"],[190,19,264,19],[190,22,264,22],[190,23,264,4],[192,0,268,4],[192,11,268,11,"offset"],[192,17,268,17],[192,20,268,20,"sourceLength"],[192,32,268,4],[192,34,268,34],[193,0,269,8],[193,10,269,12,"code"],[193,14,269,16],[193,17,269,19,"source"],[193,23,269,25],[193,24,269,26,"charCodeAt"],[193,34,269,19],[193,35,269,37,"offset"],[193,41,269,19],[193,42,269,8],[194,0,270,8],[194,10,270,12,"type"],[194,14,270,16],[194,17,270,19],[194,18,270,8],[195,0,272,8,"balance"],[195,6,272,8,"balance"],[195,13,272,15],[195,14,272,16,"tokenCount"],[195,24,272,15],[195,25,272,8],[195,28,272,30,"sourceLength"],[195,40,272,8],[197,0,274,8],[197,14,274,16,"charCodeCategory"],[197,30,274,32],[197,31,274,33,"code"],[197,35,274,32],[197,36,274,8],[198,0,276,12],[198,13,276,17,"charCodeCategory"],[198,29,276,33],[198,30,276,34,"WhiteSpace"],[198,40,276,12],[199,0,278,16,"type"],[199,10,278,16,"type"],[199,14,278,20],[199,17,278,23,"TYPE"],[199,21,278,27],[199,22,278,28,"WhiteSpace"],[199,32,278,16],[200,0,279,16,"offset"],[200,10,279,16,"offset"],[200,16,279,22],[200,19,279,25,"findWhiteSpaceEnd"],[200,36,279,42],[200,37,279,43,"source"],[200,43,279,42],[200,45,279,51,"offset"],[200,51,279,57],[200,54,279,60],[200,55,279,42],[200,56,279,16],[201,0,280,16],[203,0,283,12],[203,13,283,17],[203,19,283,12],[204,0,285,16,"consumeStringToken"],[204,10,285,16,"consumeStringToken"],[204,28,285,34],[205,0,286,16],[207,0,289,12],[207,13,289,17],[207,19,289,12],[208,0,291,16],[208,14,291,20,"isName"],[208,20,291,26],[208,21,291,27,"getCharCode"],[208,32,291,38],[208,33,291,39,"offset"],[208,39,291,45],[208,42,291,48],[208,43,291,38],[208,44,291,26],[208,45,291,20],[208,49,291,55,"isValidEscape"],[208,62,291,68],[208,63,291,69,"getCharCode"],[208,74,291,80],[208,75,291,81,"offset"],[208,81,291,87],[208,84,291,90],[208,85,291,80],[208,86,291,68],[208,88,291,94,"getCharCode"],[208,99,291,105],[208,100,291,106,"offset"],[208,106,291,112],[208,109,291,115],[208,110,291,105],[208,111,291,68],[208,112,291,16],[208,114,291,120],[209,0,293,20,"type"],[209,12,293,20,"type"],[209,16,293,24],[209,19,293,27,"TYPE"],[209,23,293,31],[209,24,293,32,"Hash"],[209,28,293,20],[210,0,301,20,"offset"],[210,12,301,20,"offset"],[210,18,301,26],[210,21,301,29,"consumeName"],[210,32,301,40],[210,33,301,41,"source"],[210,39,301,40],[210,41,301,49,"offset"],[210,47,301,55],[210,50,301,58],[210,51,301,40],[210,52,301,20],[211,0,304,17],[211,11,291,16],[211,17,304,23],[212,0,306,20,"type"],[212,12,306,20,"type"],[212,16,306,24],[212,19,306,27,"TYPE"],[212,23,306,31],[212,24,306,32,"Delim"],[212,29,306,20],[213,0,307,20,"offset"],[213,12,307,20,"offset"],[213,18,307,26],[214,0,308,17],[216,0,310,16],[218,0,313,12],[218,13,313,17],[218,19,313,12],[219,0,315,16,"consumeStringToken"],[219,10,315,16,"consumeStringToken"],[219,28,315,34],[220,0,316,16],[222,0,319,12],[222,13,319,17],[222,19,319,12],[223,0,321,16,"type"],[223,10,321,16,"type"],[223,14,321,20],[223,17,321,23,"TYPE"],[223,21,321,27],[223,22,321,28,"LeftParenthesis"],[223,37,321,16],[224,0,322,16,"offset"],[224,10,322,16,"offset"],[224,16,322,22],[225,0,323,16],[227,0,326,12],[227,13,326,17],[227,19,326,12],[228,0,328,16,"type"],[228,10,328,16,"type"],[228,14,328,20],[228,17,328,23,"TYPE"],[228,21,328,27],[228,22,328,28,"RightParenthesis"],[228,38,328,16],[229,0,329,16,"offset"],[229,10,329,16,"offset"],[229,16,329,22],[230,0,330,16],[232,0,333,12],[232,13,333,17],[232,19,333,12],[233,0,335,16],[233,14,335,20,"isNumberStart"],[233,27,335,33],[233,28,335,34,"code"],[233,32,335,33],[233,34,335,40,"getCharCode"],[233,45,335,51],[233,46,335,52,"offset"],[233,52,335,58],[233,55,335,61],[233,56,335,51],[233,57,335,33],[233,59,335,65,"getCharCode"],[233,70,335,76],[233,71,335,77,"offset"],[233,77,335,83],[233,80,335,86],[233,81,335,76],[233,82,335,33],[233,83,335,16],[233,85,335,91],[234,0,337,20,"consumeNumericToken"],[234,12,337,20,"consumeNumericToken"],[234,31,337,39],[235,0,338,17],[235,11,335,16],[235,17,338,23],[236,0,340,20,"type"],[236,12,340,20,"type"],[236,16,340,24],[236,19,340,27,"TYPE"],[236,23,340,31],[236,24,340,32,"Delim"],[236,29,340,20],[237,0,341,20,"offset"],[237,12,341,20,"offset"],[237,18,341,26],[238,0,342,17],[240,0,343,16],[242,0,346,12],[242,13,346,17],[242,19,346,12],[243,0,348,16,"type"],[243,10,348,16,"type"],[243,14,348,20],[243,17,348,23,"TYPE"],[243,21,348,27],[243,22,348,28,"Comma"],[243,27,348,16],[244,0,349,16,"offset"],[244,10,349,16,"offset"],[244,16,349,22],[245,0,350,16],[247,0,353,12],[247,13,353,17],[247,19,353,12],[248,0,355,16],[248,14,355,20,"isNumberStart"],[248,27,355,33],[248,28,355,34,"code"],[248,32,355,33],[248,34,355,40,"getCharCode"],[248,45,355,51],[248,46,355,52,"offset"],[248,52,355,58],[248,55,355,61],[248,56,355,51],[248,57,355,33],[248,59,355,65,"getCharCode"],[248,70,355,76],[248,71,355,77,"offset"],[248,77,355,83],[248,80,355,86],[248,81,355,76],[248,82,355,33],[248,83,355,16],[248,85,355,91],[249,0,356,20,"consumeNumericToken"],[249,12,356,20,"consumeNumericToken"],[249,31,356,39],[250,0,357,17],[250,11,355,16],[250,17,357,23],[251,0,359,20],[251,16,359,24,"getCharCode"],[251,27,359,35],[251,28,359,36,"offset"],[251,34,359,42],[251,37,359,45],[251,38,359,35],[251,39,359,24],[251,44,359,52],[251,50,359,24],[251,54,360,24,"getCharCode"],[251,65,360,35],[251,66,360,36,"offset"],[251,72,360,42],[251,75,360,45],[251,76,360,35],[251,77,360,24],[251,82,360,52],[251,88,359,20],[251,90,360,60],[252,0,361,24,"type"],[252,14,361,24,"type"],[252,18,361,28],[252,21,361,31,"TYPE"],[252,25,361,35],[252,26,361,36,"CDC"],[252,29,361,24],[253,0,362,24,"offset"],[253,14,362,24,"offset"],[253,20,362,30],[253,23,362,33,"offset"],[253,29,362,39],[253,32,362,42],[253,33,362,24],[254,0,363,21],[254,13,359,20],[254,19,363,27],[255,0,365,24],[255,18,365,28,"isIdentifierStart"],[255,35,365,45],[255,36,365,46,"code"],[255,40,365,45],[255,42,365,52,"getCharCode"],[255,53,365,63],[255,54,365,64,"offset"],[255,60,365,70],[255,63,365,73],[255,64,365,63],[255,65,365,45],[255,67,365,77,"getCharCode"],[255,78,365,88],[255,79,365,89,"offset"],[255,85,365,95],[255,88,365,98],[255,89,365,88],[255,90,365,45],[255,91,365,24],[255,93,365,103],[256,0,367,28,"consumeIdentLikeToken"],[256,16,367,28,"consumeIdentLikeToken"],[256,37,367,49],[257,0,368,25],[257,15,365,24],[257,21,368,31],[258,0,370,28,"type"],[258,16,370,28,"type"],[258,20,370,32],[258,23,370,35,"TYPE"],[258,27,370,39],[258,28,370,40,"Delim"],[258,33,370,28],[259,0,371,28,"offset"],[259,16,371,28,"offset"],[259,22,371,34],[260,0,372,25],[261,0,373,21],[262,0,374,17],[264,0,375,16],[266,0,378,12],[266,13,378,17],[266,19,378,12],[267,0,380,16],[267,14,380,20,"isNumberStart"],[267,27,380,33],[267,28,380,34,"code"],[267,32,380,33],[267,34,380,40,"getCharCode"],[267,45,380,51],[267,46,380,52,"offset"],[267,52,380,58],[267,55,380,61],[267,56,380,51],[267,57,380,33],[267,59,380,65,"getCharCode"],[267,70,380,76],[267,71,380,77,"offset"],[267,77,380,83],[267,80,380,86],[267,81,380,76],[267,82,380,33],[267,83,380,16],[267,85,380,91],[268,0,382,20,"consumeNumericToken"],[268,12,382,20,"consumeNumericToken"],[268,31,382,39],[269,0,383,17],[269,11,380,16],[269,17,383,23],[270,0,385,20,"type"],[270,12,385,20,"type"],[270,16,385,24],[270,19,385,27,"TYPE"],[270,23,385,31],[270,24,385,32,"Delim"],[270,29,385,20],[271,0,386,20,"offset"],[271,12,386,20,"offset"],[271,18,386,26],[272,0,387,17],[274,0,389,16],[276,0,392,12],[276,13,392,17],[276,19,392,12],[277,0,394,16],[277,14,394,20,"getCharCode"],[277,25,394,31],[277,26,394,32,"offset"],[277,32,394,38],[277,35,394,41],[277,36,394,31],[277,37,394,20],[277,42,394,48],[277,48,394,16],[277,50,394,56],[278,0,397,20,"type"],[278,12,397,20,"type"],[278,16,397,24],[278,19,397,27,"TYPE"],[278,23,397,31],[278,24,397,32,"Comment"],[278,31,397,20],[279,0,398,20,"offset"],[279,12,398,20,"offset"],[279,18,398,26],[279,21,398,29,"source"],[279,27,398,35],[279,28,398,36,"indexOf"],[279,35,398,29],[279,36,398,44],[279,40,398,29],[279,42,398,50,"offset"],[279,48,398,56],[279,51,398,59],[279,52,398,29],[279,56,398,64],[279,57,398,20],[281,0,399,20],[281,16,399,24,"offset"],[281,22,399,30],[281,27,399,35],[281,28,399,20],[281,30,399,38],[282,0,400,24,"offset"],[282,14,400,24,"offset"],[282,20,400,30],[282,23,400,33,"source"],[282,29,400,39],[282,30,400,40,"length"],[282,36,400,24],[283,0,401,21],[284,0,402,17],[284,11,394,16],[284,17,402,23],[285,0,403,20,"type"],[285,12,403,20,"type"],[285,16,403,24],[285,19,403,27,"TYPE"],[285,23,403,31],[285,24,403,32,"Delim"],[285,29,403,20],[286,0,404,20,"offset"],[286,12,404,20,"offset"],[286,18,404,26],[287,0,405,17],[289,0,406,16],[291,0,409,12],[291,13,409,17],[291,19,409,12],[292,0,411,16,"type"],[292,10,411,16,"type"],[292,14,411,20],[292,17,411,23,"TYPE"],[292,21,411,27],[292,22,411,28,"Colon"],[292,27,411,16],[293,0,412,16,"offset"],[293,10,412,16,"offset"],[293,16,412,22],[294,0,413,16],[296,0,416,12],[296,13,416,17],[296,19,416,12],[297,0,418,16,"type"],[297,10,418,16,"type"],[297,14,418,20],[297,17,418,23,"TYPE"],[297,21,418,27],[297,22,418,28,"Semicolon"],[297,31,418,16],[298,0,419,16,"offset"],[298,10,419,16,"offset"],[298,16,419,22],[299,0,420,16],[301,0,423,12],[301,13,423,17],[301,19,423,12],[302,0,425,16],[302,14,425,20,"getCharCode"],[302,25,425,31],[302,26,425,32,"offset"],[302,32,425,38],[302,35,425,41],[302,36,425,31],[302,37,425,20],[302,42,425,48],[302,48,425,20],[302,52,426,20,"getCharCode"],[302,63,426,31],[302,64,426,32,"offset"],[302,70,426,38],[302,73,426,41],[302,74,426,31],[302,75,426,20],[302,80,426,48],[302,86,425,20],[302,90,427,20,"getCharCode"],[302,101,427,31],[302,102,427,32,"offset"],[302,108,427,38],[302,111,427,41],[302,112,427,31],[302,113,427,20],[302,118,427,48],[302,124,425,16],[302,126,427,56],[303,0,429,20,"type"],[303,12,429,20,"type"],[303,16,429,24],[303,19,429,27,"TYPE"],[303,23,429,31],[303,24,429,32,"CDO"],[303,27,429,20],[304,0,430,20,"offset"],[304,12,430,20,"offset"],[304,18,430,26],[304,21,430,29,"offset"],[304,27,430,35],[304,30,430,38],[304,31,430,20],[305,0,431,17],[305,11,425,16],[305,17,431,23],[306,0,433,20,"type"],[306,12,433,20,"type"],[306,16,433,24],[306,19,433,27,"TYPE"],[306,23,433,31],[306,24,433,32,"Delim"],[306,29,433,20],[307,0,434,20,"offset"],[307,12,434,20,"offset"],[307,18,434,26],[308,0,435,17],[310,0,437,16],[312,0,440,12],[312,13,440,17],[312,19,440,12],[313,0,442,16],[313,14,442,20,"isIdentifierStart"],[313,31,442,37],[313,32,442,38,"getCharCode"],[313,43,442,49],[313,44,442,50,"offset"],[313,50,442,56],[313,53,442,59],[313,54,442,49],[313,55,442,37],[313,57,442,63,"getCharCode"],[313,68,442,74],[313,69,442,75,"offset"],[313,75,442,81],[313,78,442,84],[313,79,442,74],[313,80,442,37],[313,82,442,88,"getCharCode"],[313,93,442,99],[313,94,442,100,"offset"],[313,100,442,106],[313,103,442,109],[313,104,442,99],[313,105,442,37],[313,106,442,16],[313,108,442,114],[314,0,444,20,"type"],[314,12,444,20,"type"],[314,16,444,24],[314,19,444,27,"TYPE"],[314,23,444,31],[314,24,444,32,"AtKeyword"],[314,33,444,20],[315,0,445,20,"offset"],[315,12,445,20,"offset"],[315,18,445,26],[315,21,445,29,"consumeName"],[315,32,445,40],[315,33,445,41,"source"],[315,39,445,40],[315,41,445,49,"offset"],[315,47,445,55],[315,50,445,58],[315,51,445,40],[315,52,445,20],[316,0,446,17],[316,11,442,16],[316,17,446,23],[317,0,448,20,"type"],[317,12,448,20,"type"],[317,16,448,24],[317,19,448,27,"TYPE"],[317,23,448,31],[317,24,448,32,"Delim"],[317,29,448,20],[318,0,449,20,"offset"],[318,12,449,20,"offset"],[318,18,449,26],[319,0,450,17],[321,0,452,16],[323,0,455,12],[323,13,455,17],[323,19,455,12],[324,0,457,16,"type"],[324,10,457,16,"type"],[324,14,457,20],[324,17,457,23,"TYPE"],[324,21,457,27],[324,22,457,28,"LeftSquareBracket"],[324,39,457,16],[325,0,458,16,"offset"],[325,10,458,16,"offset"],[325,16,458,22],[326,0,459,16],[328,0,462,12],[328,13,462,17],[328,19,462,12],[329,0,464,16],[329,14,464,20,"isValidEscape"],[329,27,464,33],[329,28,464,34,"code"],[329,32,464,33],[329,34,464,40,"getCharCode"],[329,45,464,51],[329,46,464,52,"offset"],[329,52,464,58],[329,55,464,61],[329,56,464,51],[329,57,464,33],[329,58,464,16],[329,60,464,66],[330,0,466,20,"consumeIdentLikeToken"],[330,12,466,20,"consumeIdentLikeToken"],[330,33,466,41],[331,0,467,17],[331,11,464,16],[331,17,467,23],[332,0,469,20,"type"],[332,12,469,20,"type"],[332,16,469,24],[332,19,469,27,"TYPE"],[332,23,469,31],[332,24,469,32,"Delim"],[332,29,469,20],[333,0,470,20,"offset"],[333,12,470,20,"offset"],[333,18,470,26],[334,0,471,17],[336,0,472,16],[338,0,475,12],[338,13,475,17],[338,19,475,12],[339,0,477,16,"type"],[339,10,477,16,"type"],[339,14,477,20],[339,17,477,23,"TYPE"],[339,21,477,27],[339,22,477,28,"RightSquareBracket"],[339,40,477,16],[340,0,478,16,"offset"],[340,10,478,16,"offset"],[340,16,478,22],[341,0,479,16],[343,0,482,12],[343,13,482,17],[343,19,482,12],[344,0,484,16,"type"],[344,10,484,16,"type"],[344,14,484,20],[344,17,484,23,"TYPE"],[344,21,484,27],[344,22,484,28,"LeftCurlyBracket"],[344,38,484,16],[345,0,485,16,"offset"],[345,10,485,16,"offset"],[345,16,485,22],[346,0,486,16],[348,0,489,12],[348,13,489,17],[348,19,489,12],[349,0,491,16,"type"],[349,10,491,16,"type"],[349,14,491,20],[349,17,491,23,"TYPE"],[349,21,491,27],[349,22,491,28,"RightCurlyBracket"],[349,39,491,16],[350,0,492,16,"offset"],[350,10,492,16,"offset"],[350,16,492,22],[351,0,493,16],[353,0,496,12],[353,13,496,17,"charCodeCategory"],[353,29,496,33],[353,30,496,34,"Digit"],[353,35,496,12],[354,0,498,16,"consumeNumericToken"],[354,10,498,16,"consumeNumericToken"],[354,29,498,35],[355,0,499,16],[357,0,502,12],[357,13,502,17,"charCodeCategory"],[357,29,502,33],[357,30,502,34,"NameStart"],[357,39,502,12],[358,0,504,16,"consumeIdentLikeToken"],[358,10,504,16,"consumeIdentLikeToken"],[358,31,504,37],[359,0,505,16],[361,0,508,12],[361,13,508,17,"charCodeCategory"],[361,29,508,33],[361,30,508,34,"Eof"],[361,33,508,12],[362,0,510,16],[364,0,513,12],[365,0,515,16,"type"],[365,10,515,16,"type"],[365,14,515,20],[365,17,515,23,"TYPE"],[365,21,515,27],[365,22,515,28,"Delim"],[365,27,515,16],[366,0,516,16,"offset"],[366,10,516,16,"offset"],[366,16,516,22],[367,0,274,8],[369,0,519,8],[369,14,519,16,"type"],[369,18,519,8],[370,0,520,12],[370,13,520,17,"balanceCloseType"],[370,29,520,12],[371,0,521,16,"balancePrev"],[371,10,521,16,"balancePrev"],[371,21,521,27],[371,24,521,30,"balanceStart"],[371,36,521,42],[371,39,521,45,"OFFSET_MASK"],[371,50,521,16],[372,0,522,16,"balanceStart"],[372,10,522,16,"balanceStart"],[372,22,522,28],[372,25,522,31,"balance"],[372,32,522,38],[372,33,522,39,"balancePrev"],[372,44,522,38],[372,45,522,16],[373,0,523,16,"balanceCloseType"],[373,10,523,16,"balanceCloseType"],[373,26,523,32],[373,29,523,35,"balanceStart"],[373,41,523,47],[373,45,523,51,"TYPE_SHIFT"],[373,55,523,16],[374,0,524,16,"balance"],[374,10,524,16,"balance"],[374,17,524,23],[374,18,524,24,"tokenCount"],[374,28,524,23],[374,29,524,16],[374,32,524,38,"balancePrev"],[374,43,524,16],[375,0,525,16,"balance"],[375,10,525,16,"balance"],[375,17,525,23],[375,18,525,24,"balancePrev"],[375,29,525,35],[375,31,525,23],[375,32,525,16],[375,35,525,41,"tokenCount"],[375,45,525,16],[377,0,526,16],[377,17,526,23,"balancePrev"],[377,28,526,34],[377,31,526,37,"tokenCount"],[377,41,526,16],[377,43,526,49,"balancePrev"],[377,54,526,60],[377,56,526,16],[377,58,526,64],[378,0,527,20],[378,16,527,24,"balance"],[378,23,527,31],[378,24,527,32,"balancePrev"],[378,35,527,31],[378,36,527,24],[378,41,527,49,"sourceLength"],[378,53,527,20],[378,55,527,63],[379,0,528,24,"balance"],[379,14,528,24,"balance"],[379,21,528,31],[379,22,528,32,"balancePrev"],[379,33,528,31],[379,34,528,24],[379,37,528,47,"tokenCount"],[379,47,528,24],[380,0,529,21],[381,0,530,17],[383,0,531,16],[385,0,533,12],[385,13,533,17,"TYPE"],[385,17,533,21],[385,18,533,22,"LeftParenthesis"],[385,33,533,12],[386,0,534,12],[386,13,534,17,"TYPE"],[386,17,534,21],[386,18,534,22,"Function"],[386,26,534,12],[387,0,535,16,"balance"],[387,10,535,16,"balance"],[387,17,535,23],[387,18,535,24,"tokenCount"],[387,28,535,23],[387,29,535,16],[387,32,535,38,"balanceStart"],[387,44,535,16],[388,0,536,16,"balanceCloseType"],[388,10,536,16,"balanceCloseType"],[388,26,536,32],[388,29,536,35,"TYPE"],[388,33,536,39],[388,34,536,40,"RightParenthesis"],[388,50,536,16],[389,0,537,16,"balanceStart"],[389,10,537,16,"balanceStart"],[389,22,537,28],[389,25,537,32,"balanceCloseType"],[389,41,537,48],[389,45,537,52,"TYPE_SHIFT"],[389,55,537,31],[389,58,537,66,"tokenCount"],[389,68,537,16],[390,0,538,16],[392,0,540,12],[392,13,540,17,"TYPE"],[392,17,540,21],[392,18,540,22,"LeftSquareBracket"],[392,35,540,12],[393,0,541,16,"balance"],[393,10,541,16,"balance"],[393,17,541,23],[393,18,541,24,"tokenCount"],[393,28,541,23],[393,29,541,16],[393,32,541,38,"balanceStart"],[393,44,541,16],[394,0,542,16,"balanceCloseType"],[394,10,542,16,"balanceCloseType"],[394,26,542,32],[394,29,542,35,"TYPE"],[394,33,542,39],[394,34,542,40,"RightSquareBracket"],[394,52,542,16],[395,0,543,16,"balanceStart"],[395,10,543,16,"balanceStart"],[395,22,543,28],[395,25,543,32,"balanceCloseType"],[395,41,543,48],[395,45,543,52,"TYPE_SHIFT"],[395,55,543,31],[395,58,543,66,"tokenCount"],[395,68,543,16],[396,0,544,16],[398,0,546,12],[398,13,546,17,"TYPE"],[398,17,546,21],[398,18,546,22,"LeftCurlyBracket"],[398,34,546,12],[399,0,547,16,"balance"],[399,10,547,16,"balance"],[399,17,547,23],[399,18,547,24,"tokenCount"],[399,28,547,23],[399,29,547,16],[399,32,547,38,"balanceStart"],[399,44,547,16],[400,0,548,16,"balanceCloseType"],[400,10,548,16,"balanceCloseType"],[400,26,548,32],[400,29,548,35,"TYPE"],[400,33,548,39],[400,34,548,40,"RightCurlyBracket"],[400,51,548,16],[401,0,549,16,"balanceStart"],[401,10,549,16,"balanceStart"],[401,22,549,28],[401,25,549,32,"balanceCloseType"],[401,41,549,48],[401,45,549,52,"TYPE_SHIFT"],[401,55,549,31],[401,58,549,66,"tokenCount"],[401,68,549,16],[402,0,550,16],[403,0,519,8],[405,0,553,8,"offsetAndType"],[405,6,553,8,"offsetAndType"],[405,19,553,21],[405,20,553,22,"tokenCount"],[405,30,553,32],[405,32,553,21],[405,33,553,8],[405,36,553,39,"type"],[405,40,553,43],[405,44,553,47,"TYPE_SHIFT"],[405,54,553,38],[405,57,553,61,"offset"],[405,63,553,8],[406,0,554,5],[408,0,557,4,"offsetAndType"],[408,4,557,4,"offsetAndType"],[408,17,557,17],[408,18,557,18,"tokenCount"],[408,28,557,17],[408,29,557,4],[408,32,557,33,"TYPE"],[408,36,557,37],[408,37,557,38,"EOF"],[408,40,557,33],[408,44,557,45,"TYPE_SHIFT"],[408,54,557,32],[408,57,557,59,"offset"],[408,63,557,4],[409,0,558,4,"balance"],[409,4,558,4,"balance"],[409,11,558,11],[409,12,558,12,"tokenCount"],[409,22,558,11],[409,23,558,4],[409,26,558,26,"sourceLength"],[409,38,558,4],[410,0,559,4,"balance"],[410,4,559,4,"balance"],[410,11,559,11],[410,12,559,12,"sourceLength"],[410,24,559,11],[410,25,559,4],[410,28,559,28,"sourceLength"],[410,40,559,4],[412,0,560,4],[412,11,560,11,"balanceStart"],[412,23,560,23],[412,28,560,28],[412,29,560,4],[412,31,560,31],[413,0,561,8,"balancePrev"],[413,6,561,8,"balancePrev"],[413,17,561,19],[413,20,561,22,"balanceStart"],[413,32,561,34],[413,35,561,37,"OFFSET_MASK"],[413,46,561,8],[414,0,562,8,"balanceStart"],[414,6,562,8,"balanceStart"],[414,18,562,20],[414,21,562,23,"balance"],[414,28,562,30],[414,29,562,31,"balancePrev"],[414,40,562,30],[414,41,562,8],[415,0,563,8,"balance"],[415,6,563,8,"balance"],[415,13,563,15],[415,14,563,16,"balancePrev"],[415,25,563,15],[415,26,563,8],[415,29,563,31,"sourceLength"],[415,41,563,8],[416,0,564,5],[418,0,567,4,"stream"],[418,4,567,4,"stream"],[418,10,567,10],[418,11,567,11,"source"],[418,17,567,4],[418,20,567,20,"source"],[418,26,567,4],[419,0,568,4,"stream"],[419,4,568,4,"stream"],[419,10,568,10],[419,11,568,11,"firstCharOffset"],[419,26,568,4],[419,29,568,29,"start"],[419,34,568,4],[420,0,569,4,"stream"],[420,4,569,4,"stream"],[420,10,569,10],[420,11,569,11,"offsetAndType"],[420,24,569,4],[420,27,569,27,"offsetAndType"],[420,40,569,4],[421,0,570,4,"stream"],[421,4,570,4,"stream"],[421,10,570,10],[421,11,570,11,"tokenCount"],[421,21,570,4],[421,24,570,24,"tokenCount"],[421,34,570,4],[422,0,571,4,"stream"],[422,4,571,4,"stream"],[422,10,571,10],[422,11,571,11,"balance"],[422,18,571,4],[422,21,571,21,"balance"],[422,28,571,4],[423,0,572,4,"stream"],[423,4,572,4,"stream"],[423,10,572,10],[423,11,572,11,"reset"],[423,16,572,4],[424,0,573,4,"stream"],[424,4,573,4,"stream"],[424,10,573,10],[424,11,573,11,"next"],[424,15,573,4],[425,0,575,4],[425,11,575,11,"stream"],[425,17,575,4],[426,0,576,1],[428,0,579,0,"Object"],[428,2,579,0,"Object"],[428,8,579,6],[428,9,579,7,"keys"],[428,13,579,0],[428,14,579,12,"constants"],[428,23,579,0],[428,25,579,23,"forEach"],[428,32,579,0],[428,33,579,31],[428,43,579,40,"key"],[428,46,579,31],[428,48,579,45],[429,0,580,4,"tokenize"],[429,4,580,4,"tokenize"],[429,12,580,12],[429,13,580,13,"key"],[429,16,580,12],[429,17,580,4],[429,20,580,20,"constants"],[429,29,580,29],[429,30,580,30,"key"],[429,33,580,29],[429,34,580,4],[430,0,581,1],[430,3,579,0],[431,0,584,0,"Object"],[431,2,584,0,"Object"],[431,8,584,6],[431,9,584,7,"keys"],[431,13,584,0],[431,14,584,12,"charCodeDefinitions"],[431,33,584,0],[431,35,584,33,"forEach"],[431,42,584,0],[431,43,584,41],[431,53,584,50,"key"],[431,56,584,41],[431,58,584,55],[432,0,585,4,"tokenize"],[432,4,585,4,"tokenize"],[432,12,585,12],[432,13,585,13,"key"],[432,16,585,12],[432,17,585,4],[432,20,585,20,"charCodeDefinitions"],[432,39,585,39],[432,40,585,40,"key"],[432,43,585,39],[432,44,585,4],[433,0,586,1],[433,3,584,0],[434,0,587,0,"Object"],[434,2,587,0,"Object"],[434,8,587,6],[434,9,587,7,"keys"],[434,13,587,0],[434,14,587,12,"utils"],[434,19,587,0],[434,21,587,19,"forEach"],[434,28,587,0],[434,29,587,27],[434,39,587,36,"key"],[434,42,587,27],[434,44,587,41],[435,0,588,4,"tokenize"],[435,4,588,4,"tokenize"],[435,12,588,12],[435,13,588,13,"key"],[435,16,588,12],[435,17,588,4],[435,20,588,20,"utils"],[435,25,588,25],[435,26,588,26,"key"],[435,29,588,25],[435,30,588,4],[436,0,589,1],[436,3,587,0],[437,0,591,0,"module"],[437,2,591,0,"module"],[437,8,591,6],[437,9,591,7,"exports"],[437,16,591,0],[437,19,591,17,"tokenize"],[437,27,591,0]]},"type":"js/module"}]}