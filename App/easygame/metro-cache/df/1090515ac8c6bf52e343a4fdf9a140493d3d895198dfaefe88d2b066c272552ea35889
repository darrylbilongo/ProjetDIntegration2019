{"dependencies":[{"name":"./base64","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var base64 = _$$_REQUIRE(_dependencyMap[0], \"./base64\");\n\n  var VLQ_BASE_SHIFT = 5;\n  var VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n  var VLQ_BASE_MASK = VLQ_BASE - 1;\n  var VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n  function toVLQSigned(aValue) {\n    return aValue < 0 ? (-aValue << 1) + 1 : (aValue << 1) + 0;\n  }\n\n  function fromVLQSigned(aValue) {\n    var isNegative = (aValue & 1) === 1;\n    var shifted = aValue >> 1;\n    return isNegative ? -shifted : shifted;\n  }\n\n  exports.encode = function base64VLQ_encode(aValue) {\n    var encoded = \"\";\n    var digit;\n    var vlq = toVLQSigned(aValue);\n\n    do {\n      digit = vlq & VLQ_BASE_MASK;\n      vlq >>>= VLQ_BASE_SHIFT;\n\n      if (vlq > 0) {\n        digit |= VLQ_CONTINUATION_BIT;\n      }\n\n      encoded += base64.encode(digit);\n    } while (vlq > 0);\n\n    return encoded;\n  };\n\n  exports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n    var strLen = aStr.length;\n    var result = 0;\n    var shift = 0;\n    var continuation, digit;\n\n    do {\n      if (aIndex >= strLen) {\n        throw new Error(\"Expected more digits in base 64 VLQ value.\");\n      }\n\n      digit = base64.decode(aStr.charCodeAt(aIndex++));\n\n      if (digit === -1) {\n        throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n      }\n\n      continuation = !!(digit & VLQ_CONTINUATION_BIT);\n      digit &= VLQ_BASE_MASK;\n      result = result + (digit << shift);\n      shift += VLQ_BASE_SHIFT;\n    } while (continuation);\n\n    aOutParam.value = fromVLQSigned(result);\n    aOutParam.rest = aIndex;\n  };\n});","map":[[2,0,38,0],[2,6,38,4,"base64"],[2,12,38,10],[2,15,38,13,"require"],[2,26,38,20],[2,57,38,0],[4,0,52,0],[4,6,52,4,"VLQ_BASE_SHIFT"],[4,20,52,18],[4,23,52,21],[4,24,52,0],[5,0,55,0],[5,6,55,4,"VLQ_BASE"],[5,14,55,12],[5,17,55,15],[5,22,55,20,"VLQ_BASE_SHIFT"],[5,36,55,0],[6,0,58,0],[6,6,58,4,"VLQ_BASE_MASK"],[6,19,58,17],[6,22,58,20,"VLQ_BASE"],[6,30,58,28],[6,33,58,31],[6,34,58,0],[7,0,61,0],[7,6,61,4,"VLQ_CONTINUATION_BIT"],[7,26,61,24],[7,29,61,27,"VLQ_BASE"],[7,37,61,0],[9,0,69,0],[9,11,69,9,"toVLQSigned"],[9,22,69,0],[9,23,69,21,"aValue"],[9,29,69,0],[9,31,69,29],[10,0,70,2],[10,11,70,9,"aValue"],[10,17,70,15],[10,20,70,18],[10,21,70,9],[10,24,71,6],[10,25,71,8],[10,26,71,9,"aValue"],[10,32,71,7],[10,36,71,20],[10,37,71,6],[10,41,71,25],[10,42,70,9],[10,45,72,6],[10,46,72,7,"aValue"],[10,52,72,13],[10,56,72,17],[10,57,72,6],[10,61,72,22],[10,62,70,2],[11,0,73,1],[13,0,81,0],[13,11,81,9,"fromVLQSigned"],[13,24,81,0],[13,25,81,23,"aValue"],[13,31,81,0],[13,33,81,31],[14,0,82,2],[14,8,82,6,"isNegative"],[14,18,82,16],[14,21,82,19],[14,22,82,20,"aValue"],[14,28,82,26],[14,31,82,29],[14,32,82,19],[14,38,82,36],[14,39,82,2],[15,0,83,2],[15,8,83,6,"shifted"],[15,15,83,13],[15,18,83,16,"aValue"],[15,24,83,22],[15,28,83,26],[15,29,83,2],[16,0,84,2],[16,11,84,9,"isNegative"],[16,21,84,19],[16,24,85,6],[16,25,85,7,"shifted"],[16,32,84,19],[16,35,86,6,"shifted"],[16,42,84,2],[17,0,87,1],[19,0,92,0,"exports"],[19,2,92,0,"exports"],[19,9,92,7],[19,10,92,8,"encode"],[19,16,92,0],[19,19,92,17],[19,28,92,26,"base64VLQ_encode"],[19,44,92,17],[19,45,92,43,"aValue"],[19,51,92,17],[19,53,92,51],[20,0,93,2],[20,8,93,6,"encoded"],[20,15,93,13],[20,18,93,16],[20,20,93,2],[21,0,94,2],[21,8,94,6,"digit"],[21,13,94,2],[22,0,96,2],[22,8,96,6,"vlq"],[22,11,96,9],[22,14,96,12,"toVLQSigned"],[22,25,96,23],[22,26,96,24,"aValue"],[22,32,96,23],[22,33,96,2],[24,0,98,2],[24,7,98,5],[25,0,99,4,"digit"],[25,6,99,4,"digit"],[25,11,99,9],[25,14,99,12,"vlq"],[25,17,99,15],[25,20,99,18,"VLQ_BASE_MASK"],[25,33,99,4],[26,0,100,4,"vlq"],[26,6,100,4,"vlq"],[26,9,100,7],[26,15,100,13,"VLQ_BASE_SHIFT"],[26,29,100,4],[28,0,101,4],[28,10,101,8,"vlq"],[28,13,101,11],[28,16,101,14],[28,17,101,4],[28,19,101,17],[29,0,104,6,"digit"],[29,8,104,6,"digit"],[29,13,104,11],[29,17,104,15,"VLQ_CONTINUATION_BIT"],[29,37,104,6],[30,0,105,5],[32,0,106,4,"encoded"],[32,6,106,4,"encoded"],[32,13,106,11],[32,17,106,15,"base64"],[32,23,106,21],[32,24,106,22,"encode"],[32,30,106,15],[32,31,106,29,"digit"],[32,36,106,15],[32,37,106,4],[33,0,107,3],[33,5,98,2],[33,13,107,11,"vlq"],[33,16,107,14],[33,19,107,17],[33,20,98,2],[35,0,109,2],[35,11,109,9,"encoded"],[35,18,109,2],[36,0,110,1],[36,3,92,0],[38,0,116,0,"exports"],[38,2,116,0,"exports"],[38,9,116,7],[38,10,116,8,"decode"],[38,16,116,0],[38,19,116,17],[38,28,116,26,"base64VLQ_decode"],[38,44,116,17],[38,45,116,43,"aStr"],[38,49,116,17],[38,51,116,49,"aIndex"],[38,57,116,17],[38,59,116,57,"aOutParam"],[38,68,116,17],[38,70,116,68],[39,0,117,2],[39,8,117,6,"strLen"],[39,14,117,12],[39,17,117,15,"aStr"],[39,21,117,19],[39,22,117,20,"length"],[39,28,117,2],[40,0,118,2],[40,8,118,6,"result"],[40,14,118,12],[40,17,118,15],[40,18,118,2],[41,0,119,2],[41,8,119,6,"shift"],[41,13,119,11],[41,16,119,14],[41,17,119,2],[42,0,120,2],[42,8,120,6,"continuation"],[42,20,120,2],[42,22,120,20,"digit"],[42,27,120,2],[44,0,122,2],[44,7,122,5],[45,0,123,4],[45,10,123,8,"aIndex"],[45,16,123,14],[45,20,123,18,"strLen"],[45,26,123,4],[45,28,123,26],[46,0,124,6],[46,14,124,12],[46,18,124,16,"Error"],[46,23,124,12],[46,24,124,22],[46,68,124,12],[46,69,124,6],[47,0,125,5],[49,0,127,4,"digit"],[49,6,127,4,"digit"],[49,11,127,9],[49,14,127,12,"base64"],[49,20,127,18],[49,21,127,19,"decode"],[49,27,127,12],[49,28,127,26,"aStr"],[49,32,127,30],[49,33,127,31,"charCodeAt"],[49,43,127,26],[49,44,127,42,"aIndex"],[49,50,127,48],[49,52,127,26],[49,53,127,12],[49,54,127,4],[51,0,128,4],[51,10,128,8,"digit"],[51,15,128,13],[51,20,128,18],[51,21,128,19],[51,22,128,4],[51,24,128,22],[52,0,129,6],[52,14,129,12],[52,18,129,16,"Error"],[52,23,129,12],[52,24,129,22],[52,51,129,49,"aStr"],[52,55,129,53],[52,56,129,54,"charAt"],[52,62,129,49],[52,63,129,61,"aIndex"],[52,69,129,67],[52,72,129,70],[52,73,129,49],[52,74,129,12],[52,75,129,6],[53,0,130,5],[55,0,132,4,"continuation"],[55,6,132,4,"continuation"],[55,18,132,16],[55,21,132,19],[55,22,132,20],[55,24,132,22,"digit"],[55,29,132,27],[55,32,132,30,"VLQ_CONTINUATION_BIT"],[55,52,132,20],[55,53,132,4],[56,0,133,4,"digit"],[56,6,133,4,"digit"],[56,11,133,9],[56,15,133,13,"VLQ_BASE_MASK"],[56,28,133,4],[57,0,134,4,"result"],[57,6,134,4,"result"],[57,12,134,10],[57,15,134,13,"result"],[57,21,134,19],[57,25,134,23,"digit"],[57,30,134,28],[57,34,134,32,"shift"],[57,39,134,19],[57,40,134,4],[58,0,135,4,"shift"],[58,6,135,4,"shift"],[58,11,135,9],[58,15,135,13,"VLQ_BASE_SHIFT"],[58,29,135,4],[59,0,136,3],[59,5,122,2],[59,13,136,11,"continuation"],[59,25,122,2],[61,0,138,2,"aOutParam"],[61,4,138,2,"aOutParam"],[61,13,138,11],[61,14,138,12,"value"],[61,19,138,2],[61,22,138,20,"fromVLQSigned"],[61,35,138,33],[61,36,138,34,"result"],[61,42,138,33],[61,43,138,2],[62,0,139,2,"aOutParam"],[62,4,139,2,"aOutParam"],[62,13,139,11],[62,14,139,12,"rest"],[62,18,139,2],[62,21,139,19,"aIndex"],[62,27,139,2],[63,0,140,1],[63,3,116,0]]},"type":"js/module"}]}