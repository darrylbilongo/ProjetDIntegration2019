{"dependencies":[{"name":"../common/List","data":{"isAsync":false}},{"name":"../common/SyntaxError","data":{"isAsync":false}},{"name":"../common/TokenStream","data":{"isAsync":false}},{"name":"../lexer/Lexer","data":{"isAsync":false}},{"name":"../definition-syntax","data":{"isAsync":false}},{"name":"../tokenizer","data":{"isAsync":false}},{"name":"../parser/create","data":{"isAsync":false}},{"name":"../generator/create","data":{"isAsync":false}},{"name":"../convertor/create","data":{"isAsync":false}},{"name":"../walker/create","data":{"isAsync":false}},{"name":"../utils/clone","data":{"isAsync":false}},{"name":"../utils/names","data":{"isAsync":false}},{"name":"./config/mix","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var List = _$$_REQUIRE(_dependencyMap[0], \"../common/List\");\n\n  var SyntaxError = _$$_REQUIRE(_dependencyMap[1], \"../common/SyntaxError\");\n\n  var TokenStream = _$$_REQUIRE(_dependencyMap[2], \"../common/TokenStream\");\n\n  var Lexer = _$$_REQUIRE(_dependencyMap[3], \"../lexer/Lexer\");\n\n  var definitionSyntax = _$$_REQUIRE(_dependencyMap[4], \"../definition-syntax\");\n\n  var tokenize = _$$_REQUIRE(_dependencyMap[5], \"../tokenizer\");\n\n  var createParser = _$$_REQUIRE(_dependencyMap[6], \"../parser/create\");\n\n  var createGenerator = _$$_REQUIRE(_dependencyMap[7], \"../generator/create\");\n\n  var createConvertor = _$$_REQUIRE(_dependencyMap[8], \"../convertor/create\");\n\n  var createWalker = _$$_REQUIRE(_dependencyMap[9], \"../walker/create\");\n\n  var clone = _$$_REQUIRE(_dependencyMap[10], \"../utils/clone\");\n\n  var names = _$$_REQUIRE(_dependencyMap[11], \"../utils/names\");\n\n  var mix = _$$_REQUIRE(_dependencyMap[12], \"./config/mix\");\n\n  function assign(dest, src) {\n    for (var key in src) {\n      dest[key] = src[key];\n    }\n\n    return dest;\n  }\n\n  function _createSyntax(config) {\n    var parse = createParser(config);\n    var walk = createWalker(config);\n    var generate = createGenerator(config);\n    var convert = createConvertor(walk);\n    var syntax = {\n      List: List,\n      SyntaxError: SyntaxError,\n      TokenStream: TokenStream,\n      Lexer: Lexer,\n      vendorPrefix: names.vendorPrefix,\n      keyword: names.keyword,\n      property: names.property,\n      isCustomProperty: names.isCustomProperty,\n      definitionSyntax: definitionSyntax,\n      lexer: null,\n      createLexer: function createLexer(config) {\n        return new Lexer(config, syntax, syntax.lexer.structure);\n      },\n      tokenize: tokenize,\n      parse: parse,\n      walk: walk,\n      generate: generate,\n      find: walk.find,\n      findLast: walk.findLast,\n      findAll: walk.findAll,\n      clone: clone,\n      fromPlainObject: convert.fromPlainObject,\n      toPlainObject: convert.toPlainObject,\n      createSyntax: function createSyntax(config) {\n        return _createSyntax(mix({}, config));\n      },\n      fork: function fork(extension) {\n        var base = mix({}, config);\n        return _createSyntax(typeof extension === 'function' ? extension(base, assign) : mix(base, extension));\n      }\n    };\n    syntax.lexer = new Lexer({\n      generic: true,\n      types: config.types,\n      properties: config.properties,\n      node: config.node\n    }, syntax);\n    return syntax;\n  }\n\n  ;\n\n  exports.create = function (config) {\n    return _createSyntax(mix({}, config));\n  };\n});","map":[[2,0,1,0],[2,6,1,4,"List"],[2,10,1,8],[2,13,1,11,"require"],[2,24,1,18],[2,61,1,0],[4,0,2,0],[4,6,2,4,"SyntaxError"],[4,17,2,15],[4,20,2,18,"require"],[4,31,2,25],[4,75,2,0],[6,0,3,0],[6,6,3,4,"TokenStream"],[6,17,3,15],[6,20,3,18,"require"],[6,31,3,25],[6,75,3,0],[8,0,4,0],[8,6,4,4,"Lexer"],[8,11,4,9],[8,14,4,12,"require"],[8,25,4,19],[8,62,4,0],[10,0,5,0],[10,6,5,4,"definitionSyntax"],[10,22,5,20],[10,25,5,23,"require"],[10,36,5,30],[10,79,5,0],[12,0,6,0],[12,6,6,4,"tokenize"],[12,14,6,12],[12,17,6,15,"require"],[12,28,6,22],[12,63,6,0],[14,0,7,0],[14,6,7,4,"createParser"],[14,18,7,16],[14,21,7,19,"require"],[14,32,7,26],[14,71,7,0],[16,0,8,0],[16,6,8,4,"createGenerator"],[16,21,8,19],[16,24,8,22,"require"],[16,35,8,29],[16,77,8,0],[18,0,9,0],[18,6,9,4,"createConvertor"],[18,21,9,19],[18,24,9,22,"require"],[18,35,9,29],[18,77,9,0],[20,0,10,0],[20,6,10,4,"createWalker"],[20,18,10,16],[20,21,10,19,"require"],[20,32,10,26],[20,71,10,0],[22,0,11,0],[22,6,11,4,"clone"],[22,11,11,9],[22,14,11,12,"require"],[22,25,11,19],[22,63,11,0],[24,0,12,0],[24,6,12,4,"names"],[24,11,12,9],[24,14,12,12,"require"],[24,25,12,19],[24,63,12,0],[26,0,13,0],[26,6,13,4,"mix"],[26,9,13,7],[26,12,13,10,"require"],[26,23,13,17],[26,59,13,0],[28,0,15,0],[28,11,15,9,"assign"],[28,17,15,0],[28,18,15,16,"dest"],[28,22,15,0],[28,24,15,22,"src"],[28,27,15,0],[28,29,15,27],[29,0,16,4],[29,9,16,9],[29,13,16,13,"key"],[29,16,16,4],[29,20,16,20,"src"],[29,23,16,4],[29,25,16,25],[30,0,17,8,"dest"],[30,6,17,8,"dest"],[30,10,17,12],[30,11,17,13,"key"],[30,14,17,12],[30,15,17,8],[30,18,17,20,"src"],[30,21,17,23],[30,22,17,24,"key"],[30,25,17,23],[30,26,17,8],[31,0,18,5],[33,0,20,4],[33,11,20,11,"dest"],[33,15,20,4],[34,0,21,1],[36,0,23,0],[36,11,23,9,"createSyntax"],[36,24,23,0],[36,25,23,22,"config"],[36,31,23,0],[36,33,23,30],[37,0,24,4],[37,8,24,8,"parse"],[37,13,24,13],[37,16,24,16,"createParser"],[37,28,24,28],[37,29,24,29,"config"],[37,35,24,28],[37,36,24,4],[38,0,25,4],[38,8,25,8,"walk"],[38,12,25,12],[38,15,25,15,"createWalker"],[38,27,25,27],[38,28,25,28,"config"],[38,34,25,27],[38,35,25,4],[39,0,26,4],[39,8,26,8,"generate"],[39,16,26,16],[39,19,26,19,"createGenerator"],[39,34,26,34],[39,35,26,35,"config"],[39,41,26,34],[39,42,26,4],[40,0,27,4],[40,8,27,8,"convert"],[40,15,27,15],[40,18,27,18,"createConvertor"],[40,33,27,33],[40,34,27,34,"walk"],[40,38,27,33],[40,39,27,4],[41,0,29,4],[41,8,29,8,"syntax"],[41,14,29,14],[41,17,29,17],[42,0,30,8,"List"],[42,6,30,8,"List"],[42,10,30,12],[42,12,30,14,"List"],[42,16,29,17],[43,0,31,8,"SyntaxError"],[43,6,31,8,"SyntaxError"],[43,17,31,19],[43,19,31,21,"SyntaxError"],[43,30,29,17],[44,0,32,8,"TokenStream"],[44,6,32,8,"TokenStream"],[44,17,32,19],[44,19,32,21,"TokenStream"],[44,30,29,17],[45,0,33,8,"Lexer"],[45,6,33,8,"Lexer"],[45,11,33,13],[45,13,33,15,"Lexer"],[45,18,29,17],[46,0,35,8,"vendorPrefix"],[46,6,35,8,"vendorPrefix"],[46,18,35,20],[46,20,35,22,"names"],[46,25,35,27],[46,26,35,28,"vendorPrefix"],[46,38,29,17],[47,0,36,8,"keyword"],[47,6,36,8,"keyword"],[47,13,36,15],[47,15,36,17,"names"],[47,20,36,22],[47,21,36,23,"keyword"],[47,28,29,17],[48,0,37,8,"property"],[48,6,37,8,"property"],[48,14,37,16],[48,16,37,18,"names"],[48,21,37,23],[48,22,37,24,"property"],[48,30,29,17],[49,0,38,8,"isCustomProperty"],[49,6,38,8,"isCustomProperty"],[49,22,38,24],[49,24,38,26,"names"],[49,29,38,31],[49,30,38,32,"isCustomProperty"],[49,46,29,17],[50,0,40,8,"definitionSyntax"],[50,6,40,8,"definitionSyntax"],[50,22,40,24],[50,24,40,26,"definitionSyntax"],[50,40,29,17],[51,0,41,8,"lexer"],[51,6,41,8,"lexer"],[51,11,41,13],[51,13,41,15],[51,17,29,17],[52,0,42,8,"createLexer"],[52,6,42,8,"createLexer"],[52,17,42,19],[52,19,42,21],[52,40,42,30,"config"],[52,46,42,21],[52,48,42,38],[53,0,43,12],[53,15,43,19],[53,19,43,23,"Lexer"],[53,24,43,19],[53,25,43,29,"config"],[53,31,43,19],[53,33,43,37,"syntax"],[53,39,43,19],[53,41,43,45,"syntax"],[53,47,43,51],[53,48,43,52,"lexer"],[53,53,43,45],[53,54,43,58,"structure"],[53,63,43,19],[53,64,43,12],[54,0,44,9],[54,7,29,17],[55,0,46,8,"tokenize"],[55,6,46,8,"tokenize"],[55,14,46,16],[55,16,46,18,"tokenize"],[55,24,29,17],[56,0,47,8,"parse"],[56,6,47,8,"parse"],[56,11,47,13],[56,13,47,15,"parse"],[56,18,29,17],[57,0,48,8,"walk"],[57,6,48,8,"walk"],[57,10,48,12],[57,12,48,14,"walk"],[57,16,29,17],[58,0,49,8,"generate"],[58,6,49,8,"generate"],[58,14,49,16],[58,16,49,18,"generate"],[58,24,29,17],[59,0,51,8,"find"],[59,6,51,8,"find"],[59,10,51,12],[59,12,51,14,"walk"],[59,16,51,18],[59,17,51,19,"find"],[59,21,29,17],[60,0,52,8,"findLast"],[60,6,52,8,"findLast"],[60,14,52,16],[60,16,52,18,"walk"],[60,20,52,22],[60,21,52,23,"findLast"],[60,29,29,17],[61,0,53,8,"findAll"],[61,6,53,8,"findAll"],[61,13,53,15],[61,15,53,17,"walk"],[61,19,53,21],[61,20,53,22,"findAll"],[61,27,29,17],[62,0,55,8,"clone"],[62,6,55,8,"clone"],[62,11,55,13],[62,13,55,15,"clone"],[62,18,29,17],[63,0,56,8,"fromPlainObject"],[63,6,56,8,"fromPlainObject"],[63,21,56,23],[63,23,56,25,"convert"],[63,30,56,32],[63,31,56,33,"fromPlainObject"],[63,46,29,17],[64,0,57,8,"toPlainObject"],[64,6,57,8,"toPlainObject"],[64,19,57,21],[64,21,57,23,"convert"],[64,28,57,30],[64,29,57,31,"toPlainObject"],[64,42,29,17],[65,0,59,8,"createSyntax"],[65,6,59,8,"createSyntax"],[65,18,59,20],[65,20,59,22],[65,42,59,31,"config"],[65,48,59,22],[65,50,59,39],[66,0,60,12],[66,15,60,19,"createSyntax"],[66,28,60,31],[66,29,60,32,"mix"],[66,32,60,35],[66,33,60,36],[66,35,60,35],[66,37,60,40,"config"],[66,43,60,35],[66,44,60,31],[66,45,60,12],[67,0,61,9],[67,7,29,17],[68,0,62,8,"fork"],[68,6,62,8,"fork"],[68,10,62,12],[68,12,62,14],[68,26,62,23,"extension"],[68,35,62,14],[68,37,62,34],[69,0,63,12],[69,12,63,16,"base"],[69,16,63,20],[69,19,63,23,"mix"],[69,22,63,26],[69,23,63,27],[69,25,63,26],[69,27,63,31,"config"],[69,33,63,26],[69,34,63,12],[70,0,64,12],[70,15,64,19,"createSyntax"],[70,28,64,31],[70,29,65,16],[70,36,65,23,"extension"],[70,45,65,16],[70,50,65,37],[70,60,65,16],[70,63,66,22,"extension"],[70,72,66,31],[70,73,66,32,"base"],[70,77,66,31],[70,79,66,38,"assign"],[70,85,66,31],[70,86,65,16],[70,89,67,22,"mix"],[70,92,67,25],[70,93,67,26,"base"],[70,97,67,25],[70,99,67,32,"extension"],[70,108,67,25],[70,109,64,31],[70,110,64,12],[71,0,69,9],[72,0,29,17],[72,5,29,4],[73,0,72,4,"syntax"],[73,4,72,4,"syntax"],[73,10,72,10],[73,11,72,11,"lexer"],[73,16,72,4],[73,19,72,19],[73,23,72,23,"Lexer"],[73,28,72,19],[73,29,72,29],[74,0,73,8,"generic"],[74,6,73,8,"generic"],[74,13,73,15],[74,15,73,17],[74,19,72,29],[75,0,74,8,"types"],[75,6,74,8,"types"],[75,11,74,13],[75,13,74,15,"config"],[75,19,74,21],[75,20,74,22,"types"],[75,25,72,29],[76,0,75,8,"properties"],[76,6,75,8,"properties"],[76,16,75,18],[76,18,75,20,"config"],[76,24,75,26],[76,25,75,27,"properties"],[76,35,72,29],[77,0,76,8,"node"],[77,6,76,8,"node"],[77,10,76,12],[77,12,76,14,"config"],[77,18,76,20],[77,19,76,21,"node"],[78,0,72,29],[78,5,72,19],[78,7,77,7,"syntax"],[78,13,72,19],[78,14,72,4],[79,0,79,4],[79,11,79,11,"syntax"],[79,17,79,4],[80,0,80,1],[82,0,80,1],[84,0,82,0,"exports"],[84,2,82,0,"exports"],[84,9,82,7],[84,10,82,8,"create"],[84,16,82,0],[84,19,82,17],[84,29,82,26,"config"],[84,35,82,17],[84,37,82,34],[85,0,83,4],[85,11,83,11,"createSyntax"],[85,24,83,23],[85,25,83,24,"mix"],[85,28,83,27],[85,29,83,28],[85,31,83,27],[85,33,83,32,"config"],[85,39,83,27],[85,40,83,23],[85,41,83,4],[86,0,84,1],[86,3,82,0]]},"type":"js/module"}]}