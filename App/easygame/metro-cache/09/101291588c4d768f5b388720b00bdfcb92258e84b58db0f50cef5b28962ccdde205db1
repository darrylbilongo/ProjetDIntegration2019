{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/assertThisInitialized","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./../../../react-transform-hmr/lib/index.js","data":{"isAsync":false}},{"name":"prop-types","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"../config","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = exports.Slider = void 0;\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/objectWithoutProperties\"));\n\n  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/extends\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"@babel/runtime/helpers/assertThisInitialized\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"@babel/runtime/helpers/inherits\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"@babel/runtime/helpers/createClass\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[12], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13], \"./../../../react-transform-hmr/lib/index.js\"));\n\n  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14], \"prop-types\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[15], \"react-native\");\n\n  var _config = _$$_REQUIRE(_dependencyMap[16], \"../config\");\n\n  var _jsxFileName = \"/home/mandamtang/ProjetDIntegration2019/App/easygame/node_modules/react-native-elements/src/slider/Slider.js\";\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var _components = {\n    Slider: {\n      displayName: \"Slider\"\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"node_modules/react-native-elements/src/slider/Slider.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var TRACK_SIZE = 4;\n  var THUMB_SIZE = 20;\n  var DEFAULT_ANIMATION_CONFIGS = {\n    spring: {\n      friction: 7,\n      tension: 100\n    },\n    timing: {\n      duration: 150,\n      easing: _reactNative.Easing.inOut(_reactNative.Easing.ease),\n      delay: 0\n    }\n  };\n\n  var getBoundedValue = function getBoundedValue(_ref) {\n    var value = _ref.value,\n        maximumValue = _ref.maximumValue,\n        minimumValue = _ref.minimumValue;\n    return value > maximumValue ? maximumValue : value < minimumValue ? minimumValue : value;\n  };\n\n  var Rect = function () {\n    function Rect(x, y, width, height) {\n      (0, _classCallCheck2.default)(this, Rect);\n      this.x = x;\n      this.y = y;\n      this.width = width;\n      this.height = height;\n    }\n\n    (0, _createClass2.default)(Rect, [{\n      key: \"containsPoint\",\n      value: function containsPoint(x, y) {\n        return x >= this.x && y >= this.y && x <= this.x + this.width && y <= this.y + this.height;\n      }\n    }]);\n    return Rect;\n  }();\n\n  var Slider = function (_Component) {\n    (0, _inherits2.default)(Slider, _Component);\n\n    function Slider(props) {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, Slider);\n      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Slider).call(this, props));\n\n      _this.measureContainer = function (x) {\n        _this.handleMeasure('containerSize', x);\n      };\n\n      _this.measureTrack = function (x) {\n        _this.handleMeasure('trackSize', x);\n      };\n\n      _this.measureThumb = function (x) {\n        _this.handleMeasure('thumbSize', x);\n      };\n\n      _this.state = {\n        containerSize: {\n          width: 0,\n          height: 0\n        },\n        trackSize: {\n          width: 0,\n          height: 0\n        },\n        thumbSize: {\n          width: 0,\n          height: 0\n        },\n        allMeasured: false,\n        value: new _reactNative.Animated.Value(getBoundedValue(props))\n      };\n      _this.panResponder = _reactNative.PanResponder.create({\n        onStartShouldSetPanResponder: _this.handleStartShouldSetPanResponder.bind((0, _assertThisInitialized2.default)(_this)),\n        onMoveShouldSetPanResponder: _this.handleMoveShouldSetPanResponder.bind((0, _assertThisInitialized2.default)(_this)),\n        onPanResponderGrant: _this.handlePanResponderGrant.bind((0, _assertThisInitialized2.default)(_this)),\n        onPanResponderMove: _this.handlePanResponderMove.bind((0, _assertThisInitialized2.default)(_this)),\n        onPanResponderRelease: _this.handlePanResponderEnd.bind((0, _assertThisInitialized2.default)(_this)),\n        onPanResponderTerminationRequest: _this.handlePanResponderRequestEnd.bind((0, _assertThisInitialized2.default)(_this)),\n        onPanResponderTerminate: _this.handlePanResponderEnd.bind((0, _assertThisInitialized2.default)(_this))\n      });\n      return _this;\n    }\n\n    (0, _createClass2.default)(Slider, [{\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        var newValue = getBoundedValue(this.props);\n\n        if (prevProps.value !== newValue) {\n          if (this.props.animateTransitions) {\n            this.setCurrentValueAnimated(newValue);\n          } else {\n            this.setCurrentValue(newValue);\n          }\n        }\n      }\n    }, {\n      key: \"setCurrentValue\",\n      value: function setCurrentValue(value) {\n        this.state.value.setValue(value);\n      }\n    }, {\n      key: \"setCurrentValueAnimated\",\n      value: function setCurrentValueAnimated(value) {\n        var animationType = this.props.animationType;\n        var animationConfig = (0, _extends2.default)({}, DEFAULT_ANIMATION_CONFIGS[animationType], this.props.animationConfig, {\n          toValue: value\n        });\n\n        _reactNative.Animated[animationType](this.state.value, animationConfig).start();\n      }\n    }, {\n      key: \"handleMoveShouldSetPanResponder\",\n      value: function handleMoveShouldSetPanResponder() {\n        return false;\n      }\n    }, {\n      key: \"handlePanResponderGrant\",\n      value: function handlePanResponderGrant() {\n        this._previousLeft = this.getThumbLeft(this.getCurrentValue());\n        this.fireChangeEvent('onSlidingStart');\n      }\n    }, {\n      key: \"handlePanResponderMove\",\n      value: function handlePanResponderMove(_, gestureState) {\n        if (this.props.disabled) {\n          return;\n        }\n\n        this.setCurrentValue(this.getValue(gestureState));\n        this.fireChangeEvent('onValueChange');\n      }\n    }, {\n      key: \"handlePanResponderRequestEnd\",\n      value: function handlePanResponderRequestEnd() {\n        return false;\n      }\n    }, {\n      key: \"handlePanResponderEnd\",\n      value: function handlePanResponderEnd(_, gestureState) {\n        if (this.props.disabled) {\n          return;\n        }\n\n        this.setCurrentValue(this.getValue(gestureState));\n        this.fireChangeEvent('onSlidingComplete');\n      }\n    }, {\n      key: \"thumbHitTest\",\n      value: function thumbHitTest(_ref2) {\n        var nativeEvent = _ref2.nativeEvent;\n        var thumbTouchRect = this.getThumbTouchRect();\n        return thumbTouchRect.containsPoint(nativeEvent.locationX, nativeEvent.locationY);\n      }\n    }, {\n      key: \"handleStartShouldSetPanResponder\",\n      value: function handleStartShouldSetPanResponder(e) {\n        return this.thumbHitTest(e);\n      }\n    }, {\n      key: \"fireChangeEvent\",\n      value: function fireChangeEvent(event) {\n        if (this.props[event]) {\n          this.props[event](this.getCurrentValue());\n        }\n      }\n    }, {\n      key: \"getTouchOverflowSize\",\n      value: function getTouchOverflowSize() {\n        var _this$state = this.state,\n            thumbSize = _this$state.thumbSize,\n            allMeasured = _this$state.allMeasured,\n            containerSize = _this$state.containerSize;\n        var thumbTouchSize = this.props.thumbTouchSize;\n        var size = {};\n\n        if (allMeasured === true) {\n          size.width = Math.max(0, thumbTouchSize.width - thumbSize.width);\n          size.height = Math.max(0, thumbTouchSize.height - containerSize.height);\n        }\n\n        return size;\n      }\n    }, {\n      key: \"getTouchOverflowStyle\",\n      value: function getTouchOverflowStyle() {\n        var _this$getTouchOverflo = this.getTouchOverflowSize(),\n            width = _this$getTouchOverflo.width,\n            height = _this$getTouchOverflo.height;\n\n        var touchOverflowStyle = {};\n\n        if (width !== undefined && height !== undefined) {\n          var verticalMargin = -height / 2;\n          touchOverflowStyle.marginTop = verticalMargin;\n          touchOverflowStyle.marginBottom = verticalMargin;\n          var horizontalMargin = -width / 2;\n          touchOverflowStyle.marginLeft = horizontalMargin;\n          touchOverflowStyle.marginRight = horizontalMargin;\n        }\n\n        if (this.props.debugTouchArea === true) {\n          touchOverflowStyle.backgroundColor = 'orange';\n          touchOverflowStyle.opacity = 0.5;\n        }\n\n        return touchOverflowStyle;\n      }\n    }, {\n      key: \"handleMeasure\",\n      value: function handleMeasure(name, x) {\n        var _x$nativeEvent$layout = x.nativeEvent.layout,\n            layoutWidth = _x$nativeEvent$layout.width,\n            layoutHeight = _x$nativeEvent$layout.height;\n        var width = this.props.orientation === 'vertical' ? layoutHeight : layoutWidth;\n        var height = this.props.orientation === 'vertical' ? layoutWidth : layoutHeight;\n        var size = {\n          width: width,\n          height: height\n        };\n        var storeName = \"_\" + name;\n        var currentSize = this[storeName];\n\n        if (currentSize && width === currentSize.width && height === currentSize.height) {\n          return;\n        }\n\n        this[storeName] = size;\n\n        if (this._containerSize && this._trackSize && this._thumbSize) {\n          this.setState({\n            containerSize: this._containerSize,\n            trackSize: this._trackSize,\n            thumbSize: this._thumbSize,\n            allMeasured: true\n          });\n        }\n      }\n    }, {\n      key: \"getValue\",\n      value: function getValue(gestureState) {\n        var length = this.state.containerSize.width - this.state.thumbSize.width;\n        var thumbLeft = this._previousLeft + (this.props.orientation === 'vertical' ? gestureState.dy : gestureState.dx);\n        var ratio = thumbLeft / length;\n\n        if (this.props.step) {\n          return Math.max(this.props.minimumValue, Math.min(this.props.maximumValue, this.props.minimumValue + Math.round(ratio * (this.props.maximumValue - this.props.minimumValue) / this.props.step) * this.props.step));\n        }\n\n        return Math.max(this.props.minimumValue, Math.min(this.props.maximumValue, ratio * (this.props.maximumValue - this.props.minimumValue) + this.props.minimumValue));\n      }\n    }, {\n      key: \"getCurrentValue\",\n      value: function getCurrentValue() {\n        return this.state.value.__getValue();\n      }\n    }, {\n      key: \"getRatio\",\n      value: function getRatio(value) {\n        return (value - this.props.minimumValue) / (this.props.maximumValue - this.props.minimumValue);\n      }\n    }, {\n      key: \"getThumbLeft\",\n      value: function getThumbLeft(value) {\n        var ratio = this.getRatio(value);\n        return ratio * (this.state.containerSize.width - this.state.thumbSize.width);\n      }\n    }, {\n      key: \"getThumbTouchRect\",\n      value: function getThumbTouchRect() {\n        var _this$state2 = this.state,\n            thumbSize = _this$state2.thumbSize,\n            containerSize = _this$state2.containerSize;\n        var thumbTouchSize = this.props.thumbTouchSize;\n        var touchOverflowSize = this.getTouchOverflowSize();\n\n        if (this.props.orientation === 'vertical') {\n          return new Rect(touchOverflowSize.height / 2 + (containerSize.height - thumbTouchSize.height) / 2, touchOverflowSize.width / 2 + this.getThumbLeft(this.getCurrentValue()) + (thumbSize.width - thumbTouchSize.width) / 2, thumbTouchSize.width, thumbTouchSize.height);\n        }\n\n        return new Rect(touchOverflowSize.width / 2 + this.getThumbLeft(this.getCurrentValue()) + (thumbSize.width - thumbTouchSize.width) / 2, touchOverflowSize.height / 2 + (containerSize.height - thumbTouchSize.height) / 2, thumbTouchSize.width, thumbTouchSize.height);\n      }\n    }, {\n      key: \"renderDebugThumbTouchRect\",\n      value: function renderDebugThumbTouchRect(thumbLeft) {\n        var thumbTouchRect = this.getThumbTouchRect();\n        var positionStyle = {\n          left: thumbLeft,\n          top: thumbTouchRect.y,\n          width: thumbTouchRect.width,\n          height: thumbTouchRect.height\n        };\n        return _react.default.createElement(_reactNative.Animated.View, {\n          style: positionStyle,\n          pointerEvents: \"none\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 319\n          }\n        });\n      }\n    }, {\n      key: \"getMinimumTrackStyles\",\n      value: function getMinimumTrackStyles(thumbStart) {\n        var _this$state3 = this.state,\n            thumbSize = _this$state3.thumbSize,\n            trackSize = _this$state3.trackSize;\n        var minimumTrackStyle = {\n          position: 'absolute'\n        };\n\n        if (this.props.orientation === 'vertical') {\n          minimumTrackStyle.height = _reactNative.Animated.add(thumbStart, thumbSize.height / 2);\n          minimumTrackStyle.marginLeft = -trackSize.width;\n        } else {\n          minimumTrackStyle.width = _reactNative.Animated.add(thumbStart, thumbSize.width / 2);\n          minimumTrackStyle.marginTop = -trackSize.height;\n        }\n\n        return minimumTrackStyle;\n      }\n    }, {\n      key: \"getThumbPositionStyles\",\n      value: function getThumbPositionStyles(thumbStart) {\n        if (this.props.orientation === 'vertical') {\n          return [{\n            translateX: -(this.state.trackSize.height + this.state.thumbSize.height) / 2\n          }, {\n            translateY: thumbStart\n          }];\n        }\n\n        return [{\n          translateX: thumbStart\n        }, {\n          translateY: -(this.state.trackSize.height + this.state.thumbSize.height) / 2\n        }];\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$props = this.props,\n            minimumValue = _this$props.minimumValue,\n            maximumValue = _this$props.maximumValue,\n            minimumTrackTintColor = _this$props.minimumTrackTintColor,\n            maximumTrackTintColor = _this$props.maximumTrackTintColor,\n            thumbTintColor = _this$props.thumbTintColor,\n            containerStyle = _this$props.containerStyle,\n            style = _this$props.style,\n            trackStyle = _this$props.trackStyle,\n            thumbStyle = _this$props.thumbStyle,\n            debugTouchArea = _this$props.debugTouchArea,\n            orientation = _this$props.orientation,\n            other = (0, _objectWithoutProperties2.default)(_this$props, [\"minimumValue\", \"maximumValue\", \"minimumTrackTintColor\", \"maximumTrackTintColor\", \"thumbTintColor\", \"containerStyle\", \"style\", \"trackStyle\", \"thumbStyle\", \"debugTouchArea\", \"orientation\"]);\n        var _this$state4 = this.state,\n            value = _this$state4.value,\n            containerSize = _this$state4.containerSize,\n            thumbSize = _this$state4.thumbSize,\n            allMeasured = _this$state4.allMeasured;\n        var mainStyles = containerStyle || styles;\n        var thumbStart = value.interpolate({\n          inputRange: [minimumValue, maximumValue],\n          outputRange: [0, containerSize.width - thumbSize.width]\n        });\n        var valueVisibleStyle = {};\n\n        if (!allMeasured) {\n          valueVisibleStyle.height = 0;\n          valueVisibleStyle.width = 0;\n        }\n\n        var minimumTrackStyle = _objectSpread({}, this.getMinimumTrackStyles(thumbStart), {\n          backgroundColor: minimumTrackTintColor\n        }, valueVisibleStyle);\n\n        var thumbStyleTransform = thumbStyle && thumbStyle.transform || [];\n        var touchOverflowStyle = this.getTouchOverflowStyle();\n        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({}, other, {\n          style: _reactNative.StyleSheet.flatten([orientation === 'vertical' ? mainStyles.containerVertical : mainStyles.containerHorizontal, style]),\n          onLayout: this.measureContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 397\n          }\n        }), _react.default.createElement(_reactNative.View, {\n          style: _reactNative.StyleSheet.flatten([mainStyles.track, orientation === 'vertical' ? mainStyles.trackVertical : mainStyles.trackHorizontal, trackStyle, {\n            backgroundColor: maximumTrackTintColor\n          }]),\n          onLayout: this.measureTrack,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 407\n          }\n        }), _react.default.createElement(_reactNative.Animated.View, {\n          style: _reactNative.StyleSheet.flatten([mainStyles.track, orientation === 'vertical' ? mainStyles.trackVertical : mainStyles.trackHorizontal, trackStyle, minimumTrackStyle]),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 418\n          }\n        }), _react.default.createElement(_reactNative.Animated.View, {\n          testID: \"sliderThumb\",\n          onLayout: this.measureThumb,\n          style: _reactNative.StyleSheet.flatten([{\n            backgroundColor: thumbTintColor\n          }, mainStyles.thumb, orientation === 'vertical' ? mainStyles.thumbVertical(trackStyle && trackStyle.width) : mainStyles.thumbHorizontal(trackStyle && trackStyle.height), thumbStyle, _objectSpread({\n            transform: [].concat((0, _toConsumableArray2.default)(this.getThumbPositionStyles(thumbStart)), (0, _toConsumableArray2.default)(thumbStyleTransform))\n          }, valueVisibleStyle)]),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 428\n          }\n        }), _react.default.createElement(_reactNative.View, (0, _extends2.default)({\n          style: _reactNative.StyleSheet.flatten([styles.touchArea, touchOverflowStyle])\n        }, this.panResponder.panHandlers, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 447\n          }\n        }), debugTouchArea === true && this.renderDebugThumbTouchRect(thumbStart)));\n      }\n    }]);\n    return Slider;\n  }(_react.Component);\n\n  exports.Slider = Slider;\n  exports.Slider = Slider = _wrapComponent(\"Slider\")(Slider);\n  Slider.propTypes = {\n    value: _propTypes.default.number,\n    disabled: _propTypes.default.bool,\n    minimumValue: _propTypes.default.number,\n    maximumValue: _propTypes.default.number,\n    step: _propTypes.default.number,\n    minimumTrackTintColor: _propTypes.default.string,\n    maximumTrackTintColor: _propTypes.default.string,\n    thumbTintColor: _propTypes.default.string,\n    thumbTouchSize: _propTypes.default.shape({\n      width: _propTypes.default.number,\n      height: _propTypes.default.number\n    }),\n    onValueChange: _propTypes.default.func,\n    onSlidingStart: _propTypes.default.func,\n    onSlidingComplete: _propTypes.default.func,\n    style: _config.ViewPropTypes.style,\n    trackStyle: _config.ViewPropTypes.style,\n    thumbStyle: _config.ViewPropTypes.style,\n    debugTouchArea: _propTypes.default.bool,\n    animateTransitions: _propTypes.default.bool,\n    animationType: _propTypes.default.oneOf(['spring', 'timing']),\n    orientation: _propTypes.default.oneOf(['horizontal', 'vertical']),\n    animationConfig: _propTypes.default.object,\n    containerStyle: _config.ViewPropTypes.style\n  };\n  Slider.defaultProps = {\n    value: 0,\n    minimumValue: 0,\n    maximumValue: 1,\n    step: 0,\n    minimumTrackTintColor: '#3f3f3f',\n    maximumTrackTintColor: '#b3b3b3',\n    thumbTintColor: 'red',\n    thumbTouchSize: {\n      width: 40,\n      height: 40\n    },\n    debugTouchArea: false,\n    animationType: 'timing',\n    orientation: 'horizontal'\n  };\n\n  var styles = _reactNative.StyleSheet.create({\n    containerHorizontal: {\n      height: 40,\n      justifyContent: 'center'\n    },\n    containerVertical: {\n      width: 40,\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    track: {\n      borderRadius: TRACK_SIZE / 2\n    },\n    trackHorizontal: {\n      height: TRACK_SIZE\n    },\n    trackVertical: {\n      flex: 1,\n      width: TRACK_SIZE\n    },\n    thumb: {\n      position: 'absolute',\n      width: THUMB_SIZE,\n      height: THUMB_SIZE,\n      borderRadius: THUMB_SIZE / 2\n    },\n    thumbHorizontal: function thumbHorizontal(height) {\n      return {\n        top: 22 + (height ? (height - 4) / 2 : 0)\n      };\n    },\n    thumbVertical: function thumbVertical(width) {\n      return {\n        left: 22 + (width ? (width - 4) / 2 : 0)\n      };\n    },\n    touchArea: {\n      position: 'absolute',\n      backgroundColor: 'transparent',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0\n    },\n    debugThumbTouchArea: {\n      position: 'absolute',\n      backgroundColor: 'green',\n      opacity: 0.5\n    }\n  });\n\n  var _default2 = (0, _config.withTheme)(Slider, 'Slider');\n\n  exports.default = _default2;\n});","map":[[31,0,1,0],[35,0,2,0],[37,0,3,0],[39,0,5,0],[66,0,7,0],[66,6,7,6,"TRACK_SIZE"],[66,16,7,16],[66,19,7,19],[66,20,7,0],[67,0,8,0],[67,6,8,6,"THUMB_SIZE"],[67,16,8,16],[67,19,8,19],[67,21,8,0],[68,0,10,0],[68,6,10,6,"DEFAULT_ANIMATION_CONFIGS"],[68,31,10,31],[68,34,10,34],[69,0,11,2,"spring"],[69,4,11,2,"spring"],[69,10,11,8],[69,12,11,10],[70,0,12,4,"friction"],[70,6,12,4,"friction"],[70,14,12,12],[70,16,12,14],[70,17,11,10],[71,0,13,4,"tension"],[71,6,13,4,"tension"],[71,13,13,11],[71,15,13,13],[72,0,11,10],[72,5,10,34],[73,0,15,2,"timing"],[73,4,15,2,"timing"],[73,10,15,8],[73,12,15,10],[74,0,16,4,"duration"],[74,6,16,4,"duration"],[74,14,16,12],[74,16,16,14],[74,19,15,10],[75,0,17,4,"easing"],[75,6,17,4,"easing"],[75,12,17,10],[75,14,17,12,"Easing"],[75,34,17,19,"inOut"],[75,39,17,12],[75,40,17,25,"Easing"],[75,60,17,32,"ease"],[75,64,17,12],[75,65,15,10],[76,0,18,4,"delay"],[76,6,18,4,"delay"],[76,11,18,9],[76,13,18,11],[77,0,15,10],[78,0,10,34],[78,3,10,0],[80,0,22,0],[80,6,22,6,"getBoundedValue"],[80,21,22,21],[80,24,22,24],[80,33,22,6,"getBoundedValue"],[80,48,22,24],[81,0,22,24],[81,8,22,27,"value"],[81,13,22,24],[81,21,22,27,"value"],[81,26,22,24],[82,0,22,24],[82,8,22,34,"maximumValue"],[82,20,22,24],[82,28,22,34,"maximumValue"],[82,40,22,24],[83,0,22,24],[83,8,22,48,"minimumValue"],[83,20,22,24],[83,28,22,48,"minimumValue"],[83,40,22,24],[84,0,22,24],[84,11,23,2,"value"],[84,16,23,7],[84,19,23,10,"maximumValue"],[84,31,23,2],[84,34,24,6,"maximumValue"],[84,46,23,2],[84,49,25,6,"value"],[84,54,25,11],[84,57,25,14,"minimumValue"],[84,69,25,6],[84,72,26,6,"minimumValue"],[84,84,25,6],[84,87,27,6,"value"],[84,92,22,24],[85,0,22,24],[85,3,22,0],[87,6,29,6,"Rect"],[87,10],[88,0,30,2],[88,18,30,14,"x"],[88,19,30,2],[88,21,30,17,"y"],[88,22,30,2],[88,24,30,20,"width"],[88,29,30,2],[88,31,30,27,"height"],[88,37,30,2],[88,39,30,35],[89,0,30,35],[90,0,31,4],[90,11,31,9,"x"],[90,12,31,4],[90,15,31,13,"x"],[90,16,31,4],[91,0,32,4],[91,11,32,9,"y"],[91,12,32,4],[91,15,32,13,"y"],[91,16,32,4],[92,0,33,4],[92,11,33,9,"width"],[92,16,33,4],[92,19,33,17,"width"],[92,24,33,4],[93,0,34,4],[93,11,34,9,"height"],[93,17,34,4],[93,20,34,18,"height"],[93,26,34,4],[94,0,35,3],[98,36,37,16,"x"],[98,37],[98,39,37,19,"y"],[98,40],[98,42,37,22],[99,0,38,4],[99,15,39,6,"x"],[99,16,39,7],[99,20,39,11],[99,25,39,16,"x"],[99,26,39,6],[99,30,40,6,"y"],[99,31,40,7],[99,35,40,11],[99,40,40,16,"y"],[99,41,39,6],[99,45,41,6,"x"],[99,46,41,7],[99,50,41,11],[99,55,41,16,"x"],[99,56,41,11],[99,59,41,20],[99,64,41,25,"width"],[99,69,39,6],[99,73,42,6,"y"],[99,74,42,7],[99,78,42,11],[99,83,42,16,"y"],[99,84,42,11],[99,87,42,20],[99,92,42,25,"height"],[99,98,38,4],[100,0,44,3],[105,6,47,6,"Slider"],[105,12],[108,0,48,2],[108,20,48,14,"props"],[108,25,48,2],[108,27,48,21],[109,0,48,21],[111,0,48,21],[112,0,49,4],[112,110,49,10,"props"],[112,115,49,4],[114,0,48,21],[114,12,220,2,"measureContainer"],[114,28,48,21],[114,31,220,21],[114,41,220,21,"x"],[114,42,220,22],[114,44,220,26],[115,0,221,4],[115,14,221,9,"handleMeasure"],[115,27,221,4],[115,28,221,23],[115,43,221,4],[115,45,221,40,"x"],[115,46,221,4],[116,0,222,3],[116,7,48,21],[118,0,48,21],[118,12,224,2,"measureTrack"],[118,24,48,21],[118,27,224,17],[118,37,224,17,"x"],[118,38,224,18],[118,40,224,22],[119,0,225,4],[119,14,225,9,"handleMeasure"],[119,27,225,4],[119,28,225,23],[119,39,225,4],[119,41,225,36,"x"],[119,42,225,4],[120,0,226,3],[120,7,48,21],[122,0,48,21],[122,12,228,2,"measureThumb"],[122,24,48,21],[122,27,228,17],[122,37,228,17,"x"],[122,38,228,18],[122,40,228,22],[123,0,229,4],[123,14,229,9,"handleMeasure"],[123,27,229,4],[123,28,229,23],[123,39,229,4],[123,41,229,36,"x"],[123,42,229,4],[124,0,230,3],[124,7,48,21],[126,0,50,4],[126,12,50,9,"state"],[126,17,50,4],[126,20,50,17],[127,0,51,6,"containerSize"],[127,8,51,6,"containerSize"],[127,21,51,19],[127,23,51,21],[128,0,51,23,"width"],[128,10,51,23,"width"],[128,15,51,28],[128,17,51,30],[128,18,51,21],[129,0,51,33,"height"],[129,10,51,33,"height"],[129,16,51,39],[129,18,51,41],[130,0,51,21],[130,9,50,17],[131,0,52,6,"trackSize"],[131,8,52,6,"trackSize"],[131,17,52,15],[131,19,52,17],[132,0,52,19,"width"],[132,10,52,19,"width"],[132,15,52,24],[132,17,52,26],[132,18,52,17],[133,0,52,29,"height"],[133,10,52,29,"height"],[133,16,52,35],[133,18,52,37],[134,0,52,17],[134,9,50,17],[135,0,53,6,"thumbSize"],[135,8,53,6,"thumbSize"],[135,17,53,15],[135,19,53,17],[136,0,53,19,"width"],[136,10,53,19,"width"],[136,15,53,24],[136,17,53,26],[136,18,53,17],[137,0,53,29,"height"],[137,10,53,29,"height"],[137,16,53,35],[137,18,53,37],[138,0,53,17],[138,9,50,17],[139,0,54,6,"allMeasured"],[139,8,54,6,"allMeasured"],[139,19,54,17],[139,21,54,19],[139,26,50,17],[140,0,55,6,"value"],[140,8,55,6,"value"],[140,13,55,11],[140,15,55,13],[140,19,55,17,"Animated"],[140,41,55,26,"Value"],[140,46,55,13],[140,47,55,32,"getBoundedValue"],[140,62,55,47],[140,63,55,48,"props"],[140,68,55,47],[140,69,55,13],[141,0,50,17],[141,7,50,4],[142,0,58,4],[142,12,58,9,"panResponder"],[142,24,58,4],[142,27,58,24,"PanResponder"],[142,53,58,37,"create"],[142,59,58,24],[142,60,58,44],[143,0,59,6,"onStartShouldSetPanResponder"],[143,8,59,6,"onStartShouldSetPanResponder"],[143,36,59,34],[143,38,59,36],[143,44,59,41,"handleStartShouldSetPanResponder"],[143,76,59,36],[143,77,59,74,"bind"],[143,81,59,36],[143,126,58,44],[144,0,62,6,"onMoveShouldSetPanResponder"],[144,8,62,6,"onMoveShouldSetPanResponder"],[144,35,62,33],[144,37,62,35],[144,43,62,40,"handleMoveShouldSetPanResponder"],[144,74,62,35],[144,75,62,72,"bind"],[144,79,62,35],[144,124,58,44],[145,0,65,6,"onPanResponderGrant"],[145,8,65,6,"onPanResponderGrant"],[145,27,65,25],[145,29,65,27],[145,35,65,32,"handlePanResponderGrant"],[145,58,65,27],[145,59,65,56,"bind"],[145,63,65,27],[145,108,58,44],[146,0,66,6,"onPanResponderMove"],[146,8,66,6,"onPanResponderMove"],[146,26,66,24],[146,28,66,26],[146,34,66,31,"handlePanResponderMove"],[146,56,66,26],[146,57,66,54,"bind"],[146,61,66,26],[146,106,58,44],[147,0,67,6,"onPanResponderRelease"],[147,8,67,6,"onPanResponderRelease"],[147,29,67,27],[147,31,67,29],[147,37,67,34,"handlePanResponderEnd"],[147,58,67,29],[147,59,67,56,"bind"],[147,63,67,29],[147,108,58,44],[148,0,68,6,"onPanResponderTerminationRequest"],[148,8,68,6,"onPanResponderTerminationRequest"],[148,40,68,38],[148,42,68,40],[148,48,68,45,"handlePanResponderRequestEnd"],[148,76,68,40],[148,77,68,74,"bind"],[148,81,68,40],[148,126,58,44],[149,0,71,6,"onPanResponderTerminate"],[149,8,71,6,"onPanResponderTerminate"],[149,31,71,29],[149,33,71,31],[149,39,71,36,"handlePanResponderEnd"],[149,60,71,31],[149,61,71,58,"bind"],[149,65,71,31],[150,0,58,44],[150,7,58,24],[150,8,58,4],[151,0,48,21],[152,0,73,3],[156,41,75,21,"prevProps"],[156,50],[156,52,75,32],[157,0,76,4],[157,12,76,10,"newValue"],[157,20,76,18],[157,23,76,21,"getBoundedValue"],[157,38,76,36],[157,39,76,37],[157,44,76,42,"props"],[157,49,76,36],[157,50,76,4],[159,0,78,4],[159,12,78,8,"prevProps"],[159,21,78,17],[159,22,78,18,"value"],[159,27,78,8],[159,32,78,28,"newValue"],[159,40,78,4],[159,42,78,38],[160,0,79,6],[160,14,79,10],[160,19,79,15,"props"],[160,24,79,10],[160,25,79,21,"animateTransitions"],[160,43,79,6],[160,45,79,41],[161,0,80,8],[161,17,80,13,"setCurrentValueAnimated"],[161,40,80,8],[161,41,80,37,"newValue"],[161,49,80,8],[162,0,81,7],[162,11,79,6],[162,17,81,13],[163,0,82,8],[163,17,82,13,"setCurrentValue"],[163,32,82,8],[163,33,82,29,"newValue"],[163,41,82,8],[164,0,83,7],[165,0,84,5],[166,0,85,3],[169,38,87,18,"value"],[169,43],[169,45,87,25],[170,0,88,4],[170,13,88,9,"state"],[170,18,88,4],[170,19,88,15,"value"],[170,24,88,4],[170,25,88,21,"setValue"],[170,33,88,4],[170,34,88,30,"value"],[170,39,88,4],[171,0,89,3],[174,46,91,26,"value"],[174,51],[174,53,91,33],[175,0,91,33],[175,12,92,12,"animationType"],[175,25,91,33],[175,28,92,30],[175,33,92,35,"props"],[175,38,91,33],[175,39,92,12,"animationType"],[175,52,91,33],[176,0,93,4],[176,12,93,10,"animationConfig"],[176,27,93,25],[176,30,93,28],[176,53,94,6],[176,55,93,28],[176,57,95,6,"DEFAULT_ANIMATION_CONFIGS"],[176,82,95,31],[176,83,95,32,"animationType"],[176,96,95,31],[176,97,93,28],[176,99,96,6],[176,104,96,11,"props"],[176,109,96,6],[176,110,96,17,"animationConfig"],[176,125,93,28],[176,127,97,6],[177,0,98,8,"toValue"],[177,10,98,8,"toValue"],[177,17,98,15],[177,19,98,17,"value"],[178,0,97,6],[178,9,93,28],[178,10,93,4],[180,0,102,4,"Animated"],[180,30,102,13,"animationType"],[180,43,102,4],[180,45,102,28],[180,50,102,33,"state"],[180,55,102,28],[180,56,102,39,"value"],[180,61,102,4],[180,63,102,46,"animationConfig"],[180,78,102,4],[180,80,102,63,"start"],[180,85,102,4],[181,0,103,3],[184,56,105,73],[185,0,107,4],[185,15,107,11],[185,20,107,4],[186,0,108,3],[189,48,110,65],[190,0,111,4],[190,13,111,9,"_previousLeft"],[190,26,111,4],[190,29,111,25],[190,34,111,30,"getThumbLeft"],[190,46,111,25],[190,47,111,43],[190,52,111,48,"getCurrentValue"],[190,67,111,43],[190,69,111,25],[190,70,111,4],[191,0,112,4],[191,13,112,9,"fireChangeEvent"],[191,28,112,4],[191,29,112,25],[191,45,112,4],[192,0,113,3],[195,45,115,25,"_"],[195,46],[195,48,115,28,"gestureState"],[195,60],[195,62,115,42],[196,0,116,4],[196,12,116,8],[196,17,116,13,"props"],[196,22,116,8],[196,23,116,19,"disabled"],[196,31,116,4],[196,33,116,29],[197,0,117,6],[198,0,118,5],[200,0,120,4],[200,13,120,9,"setCurrentValue"],[200,28,120,4],[200,29,120,25],[200,34,120,30,"getValue"],[200,42,120,25],[200,43,120,39,"gestureState"],[200,55,120,25],[200,56,120,4],[201,0,121,4],[201,13,121,9,"fireChangeEvent"],[201,28,121,4],[201,29,121,25],[201,44,121,4],[202,0,122,3],[205,53,124,33],[206,0,126,4],[206,15,126,11],[206,20,126,4],[207,0,127,3],[210,44,129,24,"_"],[210,45],[210,47,129,27,"gestureState"],[210,59],[210,61,129,41],[211,0,130,4],[211,12,130,8],[211,17,130,13,"props"],[211,22,130,8],[211,23,130,19,"disabled"],[211,31,130,4],[211,33,130,29],[212,0,131,6],[213,0,132,5],[215,0,134,4],[215,13,134,9,"setCurrentValue"],[215,28,134,4],[215,29,134,25],[215,34,134,30,"getValue"],[215,42,134,25],[215,43,134,39,"gestureState"],[215,55,134,25],[215,56,134,4],[216,0,135,4],[216,13,135,9,"fireChangeEvent"],[216,28,135,4],[216,29,135,25],[216,48,135,4],[217,0,136,3],[220,42,138,32],[221,0,138,32],[221,12,138,17,"nativeEvent"],[221,23,138,32],[221,32,138,17,"nativeEvent"],[221,43,138,32],[222,0,139,4],[222,12,139,10,"thumbTouchRect"],[222,26,139,24],[222,29,139,27],[222,34,139,32,"getThumbTouchRect"],[222,51,139,27],[222,53,139,4],[223,0,140,4],[223,15,140,11,"thumbTouchRect"],[223,29,140,25],[223,30,140,26,"containsPoint"],[223,43,140,11],[223,44,141,6,"nativeEvent"],[223,55,141,17],[223,56,141,18,"locationX"],[223,65,140,11],[223,67,142,6,"nativeEvent"],[223,78,142,17],[223,79,142,18,"locationY"],[223,88,140,11],[223,89,140,4],[224,0,144,3],[227,55,146,35,"e"],[227,56],[227,58,146,65],[228,0,148,4],[228,15,148,11],[228,20,148,16,"thumbHitTest"],[228,32,148,11],[228,33,148,29,"e"],[228,34,148,11],[228,35,148,4],[229,0,149,3],[232,38,151,18,"event"],[232,43],[232,45,151,25],[233,0,152,4],[233,12,152,8],[233,17,152,13,"props"],[233,22,152,8],[233,23,152,19,"event"],[233,28,152,8],[233,29,152,4],[233,31,152,27],[234,0,153,6],[234,15,153,11,"props"],[234,20,153,6],[234,21,153,17,"event"],[234,26,153,6],[234,28,153,24],[234,33,153,29,"getCurrentValue"],[234,48,153,24],[234,50,153,6],[235,0,154,5],[236,0,155,3],[239,45,157,25],[240,0,157,25],[240,26,158,54],[240,31,158,59,"state"],[240,36,157,25],[241,0,157,25],[241,12,158,12,"thumbSize"],[241,21,157,25],[241,36,158,12,"thumbSize"],[241,45,157,25],[242,0,157,25],[242,12,158,23,"allMeasured"],[242,23,157,25],[242,38,158,23,"allMeasured"],[242,49,157,25],[243,0,157,25],[243,12,158,36,"containerSize"],[243,25,157,25],[243,40,158,36,"containerSize"],[243,53,157,25],[244,0,157,25],[244,12,159,12,"thumbTouchSize"],[244,26,157,25],[244,29,159,31],[244,34,159,36,"props"],[244,39,157,25],[244,40,159,12,"thumbTouchSize"],[244,54,157,25],[245,0,161,4],[245,12,161,10,"size"],[245,16,161,14],[245,19,161,17],[245,21,161,4],[247,0,162,4],[247,12,162,8,"allMeasured"],[247,23,162,19],[247,28,162,24],[247,32,162,4],[247,34,162,30],[248,0,163,6,"size"],[248,10,163,6,"size"],[248,14,163,10],[248,15,163,11,"width"],[248,20,163,6],[248,23,163,19,"Math"],[248,27,163,23],[248,28,163,24,"max"],[248,31,163,19],[248,32,163,28],[248,33,163,19],[248,35,163,31,"thumbTouchSize"],[248,49,163,45],[248,50,163,46,"width"],[248,55,163,31],[248,58,163,54,"thumbSize"],[248,67,163,63],[248,68,163,64,"width"],[248,73,163,19],[248,74,163,6],[249,0,164,6,"size"],[249,10,164,6,"size"],[249,14,164,10],[249,15,164,11,"height"],[249,21,164,6],[249,24,164,20,"Math"],[249,28,164,24],[249,29,164,25,"max"],[249,32,164,20],[249,33,164,29],[249,34,164,20],[249,36,164,32,"thumbTouchSize"],[249,50,164,46],[249,51,164,47,"height"],[249,57,164,32],[249,60,164,56,"containerSize"],[249,73,164,69],[249,74,164,70,"height"],[249,80,164,20],[249,81,164,6],[250,0,165,5],[252,0,167,4],[252,15,167,11,"size"],[252,19,167,4],[253,0,168,3],[256,46,170,26],[257,0,170,26],[257,36,171,30],[257,41,171,35,"getTouchOverflowSize"],[257,61,171,30],[257,63,170,26],[258,0,170,26],[258,12,171,12,"width"],[258,17,170,26],[258,42,171,12,"width"],[258,47,170,26],[259,0,170,26],[259,12,171,19,"height"],[259,18,170,26],[259,43,171,19,"height"],[259,49,170,26],[261,0,173,4],[261,12,173,10,"touchOverflowStyle"],[261,30,173,28],[261,33,173,31],[261,35,173,4],[263,0,174,4],[263,12,174,8,"width"],[263,17,174,13],[263,22,174,18,"undefined"],[263,31,174,8],[263,35,174,31,"height"],[263,41,174,37],[263,46,174,42,"undefined"],[263,55,174,4],[263,57,174,53],[264,0,175,6],[264,14,175,12,"verticalMargin"],[264,28,175,26],[264,31,175,29],[264,32,175,30,"height"],[264,38,175,29],[264,41,175,39],[264,42,175,6],[265,0,176,6,"touchOverflowStyle"],[265,10,176,6,"touchOverflowStyle"],[265,28,176,24],[265,29,176,25,"marginTop"],[265,38,176,6],[265,41,176,37,"verticalMargin"],[265,55,176,6],[266,0,177,6,"touchOverflowStyle"],[266,10,177,6,"touchOverflowStyle"],[266,28,177,24],[266,29,177,25,"marginBottom"],[266,41,177,6],[266,44,177,40,"verticalMargin"],[266,58,177,6],[267,0,179,6],[267,14,179,12,"horizontalMargin"],[267,30,179,28],[267,33,179,31],[267,34,179,32,"width"],[267,39,179,31],[267,42,179,40],[267,43,179,6],[268,0,180,6,"touchOverflowStyle"],[268,10,180,6,"touchOverflowStyle"],[268,28,180,24],[268,29,180,25,"marginLeft"],[268,39,180,6],[268,42,180,38,"horizontalMargin"],[268,58,180,6],[269,0,181,6,"touchOverflowStyle"],[269,10,181,6,"touchOverflowStyle"],[269,28,181,24],[269,29,181,25,"marginRight"],[269,40,181,6],[269,43,181,39,"horizontalMargin"],[269,59,181,6],[270,0,182,5],[272,0,184,4],[272,12,184,8],[272,17,184,13,"props"],[272,22,184,8],[272,23,184,19,"debugTouchArea"],[272,37,184,8],[272,42,184,38],[272,46,184,4],[272,48,184,44],[273,0,185,6,"touchOverflowStyle"],[273,10,185,6,"touchOverflowStyle"],[273,28,185,24],[273,29,185,25,"backgroundColor"],[273,44,185,6],[273,47,185,43],[273,55,185,6],[274,0,186,6,"touchOverflowStyle"],[274,10,186,6,"touchOverflowStyle"],[274,28,186,24],[274,29,186,25,"opacity"],[274,36,186,6],[274,39,186,35],[274,42,186,6],[275,0,187,5],[277,0,189,4],[277,15,189,11,"touchOverflowStyle"],[277,33,189,4],[278,0,190,3],[281,36,192,16,"name"],[281,40],[281,42,192,22,"x"],[281,43],[281,45,192,25],[282,0,192,25],[282,36,193,57,"x"],[282,37,193,58],[282,38,193,59,"nativeEvent"],[282,49,193,57],[282,50,193,71,"layout"],[282,56,192,25],[283,0,192,25],[283,12,193,19,"layoutWidth"],[283,23,192,25],[283,48,193,12,"width"],[283,53,192,25],[284,0,192,25],[284,12,193,40,"layoutHeight"],[284,24,192,25],[284,49,193,32,"height"],[284,55,192,25],[285,0,194,4],[285,12,194,10,"width"],[285,17,194,15],[285,20,195,6],[285,25,195,11,"props"],[285,30,195,6],[285,31,195,17,"orientation"],[285,42,195,6],[285,47,195,33],[285,57,195,6],[285,60,195,46,"layoutHeight"],[285,72,195,6],[285,75,195,61,"layoutWidth"],[285,86,194,4],[286,0,196,4],[286,12,196,10,"height"],[286,18,196,16],[286,21,197,6],[286,26,197,11,"props"],[286,31,197,6],[286,32,197,17,"orientation"],[286,43,197,6],[286,48,197,33],[286,58,197,6],[286,61,197,46,"layoutWidth"],[286,72,197,6],[286,75,197,60,"layoutHeight"],[286,87,196,4],[287,0,198,4],[287,12,198,10,"size"],[287,16,198,14],[287,19,198,17],[288,0,198,19,"width"],[288,10,198,19,"width"],[288,15,198,24],[288,17,198,19,"width"],[288,22,198,17],[289,0,198,26,"height"],[289,10,198,26,"height"],[289,16,198,32],[289,18,198,26,"height"],[290,0,198,17],[290,9,198,4],[291,0,199,4],[291,12,199,10,"storeName"],[291,21,199,19],[291,30,199,26,"name"],[291,34,199,4],[292,0,200,4],[292,12,200,10,"currentSize"],[292,23,200,21],[292,26,200,24],[292,31,200,29,"storeName"],[292,40,200,24],[292,41,200,4],[294,0,201,4],[294,12,202,6,"currentSize"],[294,23,202,17],[294,27,203,6,"width"],[294,32,203,11],[294,37,203,16,"currentSize"],[294,48,203,27],[294,49,203,28,"width"],[294,54,202,6],[294,58,204,6,"height"],[294,64,204,12],[294,69,204,17,"currentSize"],[294,80,204,28],[294,81,204,29,"height"],[294,87,201,4],[294,89,205,6],[295,0,206,6],[296,0,207,5],[298,0,208,4],[298,13,208,9,"storeName"],[298,22,208,4],[298,26,208,22,"size"],[298,30,208,4],[300,0,210,4],[300,12,210,8],[300,17,210,13,"_containerSize"],[300,31,210,8],[300,35,210,31],[300,40,210,36,"_trackSize"],[300,50,210,8],[300,54,210,50],[300,59,210,55,"_thumbSize"],[300,69,210,4],[300,71,210,67],[301,0,211,6],[301,15,211,11,"setState"],[301,23,211,6],[301,24,211,20],[302,0,212,8,"containerSize"],[302,12,212,8,"containerSize"],[302,25,212,21],[302,27,212,23],[302,32,212,28,"_containerSize"],[302,46,211,20],[303,0,213,8,"trackSize"],[303,12,213,8,"trackSize"],[303,21,213,17],[303,23,213,19],[303,28,213,24,"_trackSize"],[303,38,211,20],[304,0,214,8,"thumbSize"],[304,12,214,8,"thumbSize"],[304,21,214,17],[304,23,214,19],[304,28,214,24,"_thumbSize"],[304,38,211,20],[305,0,215,8,"allMeasured"],[305,12,215,8,"allMeasured"],[305,23,215,19],[305,25,215,21],[306,0,211,20],[306,11,211,6],[307,0,217,5],[308,0,218,3],[311,31,232,11,"gestureState"],[311,43],[311,45,232,25],[312,0,233,4],[312,12,233,10,"length"],[312,18,233,16],[312,21,233,19],[312,26,233,24,"state"],[312,31,233,19],[312,32,233,30,"containerSize"],[312,45,233,19],[312,46,233,44,"width"],[312,51,233,19],[312,54,233,52],[312,59,233,57,"state"],[312,64,233,52],[312,65,233,63,"thumbSize"],[312,74,233,52],[312,75,233,73,"width"],[312,80,233,4],[313,0,234,4],[313,12,234,10,"thumbLeft"],[313,21,234,19],[313,24,235,6],[313,29,235,11,"_previousLeft"],[313,42,235,6],[313,46,236,7],[313,51,236,12,"props"],[313,56,236,7],[313,57,236,18,"orientation"],[313,68,236,7],[313,73,236,34],[313,83,236,7],[313,86,237,10,"gestureState"],[313,98,237,22],[313,99,237,23,"dy"],[313,101,236,7],[313,104,238,10,"gestureState"],[313,116,238,22],[313,117,238,23,"dx"],[313,119,235,6],[313,120,234,4],[314,0,240,4],[314,12,240,10,"ratio"],[314,17,240,15],[314,20,240,18,"thumbLeft"],[314,29,240,27],[314,32,240,30,"length"],[314,38,240,4],[316,0,242,4],[316,12,242,8],[316,17,242,13,"props"],[316,22,242,8],[316,23,242,19,"step"],[316,27,242,4],[316,29,242,25],[317,0,243,6],[317,17,243,13,"Math"],[317,21,243,17],[317,22,243,18,"max"],[317,25,243,13],[317,26,244,8],[317,31,244,13,"props"],[317,36,244,8],[317,37,244,19,"minimumValue"],[317,49,243,13],[317,51,245,8,"Math"],[317,55,245,12],[317,56,245,13,"min"],[317,59,245,8],[317,60,246,10],[317,65,246,15,"props"],[317,70,246,10],[317,71,246,21,"maximumValue"],[317,83,245,8],[317,85,247,10],[317,90,247,15,"props"],[317,95,247,10],[317,96,247,21,"minimumValue"],[317,108,247,10],[317,111,248,12,"Math"],[317,115,248,16],[317,116,248,17,"round"],[317,121,248,12],[317,122,249,15,"ratio"],[317,127,249,20],[317,131,249,24],[317,136,249,29,"props"],[317,141,249,24],[317,142,249,35,"maximumValue"],[317,154,249,24],[317,157,249,50],[317,162,249,55,"props"],[317,167,249,50],[317,168,249,61,"minimumValue"],[317,180,249,20],[317,181,249,14],[317,184,250,16],[317,189,250,21,"props"],[317,194,250,16],[317,195,250,27,"step"],[317,199,248,12],[317,203,252,14],[317,208,252,19,"props"],[317,213,252,14],[317,214,252,25,"step"],[317,218,245,8],[317,219,243,13],[317,220,243,6],[318,0,255,5],[320,0,256,4],[320,15,256,11,"Math"],[320,19,256,15],[320,20,256,16,"max"],[320,23,256,11],[320,24,257,6],[320,29,257,11,"props"],[320,34,257,6],[320,35,257,17,"minimumValue"],[320,47,256,11],[320,49,258,6,"Math"],[320,53,258,10],[320,54,258,11,"min"],[320,57,258,6],[320,58,259,8],[320,63,259,13,"props"],[320,68,259,8],[320,69,259,19,"maximumValue"],[320,81,258,6],[320,83,260,8,"ratio"],[320,88,260,13],[320,92,260,17],[320,97,260,22,"props"],[320,102,260,17],[320,103,260,28,"maximumValue"],[320,115,260,17],[320,118,260,43],[320,123,260,48,"props"],[320,128,260,43],[320,129,260,54,"minimumValue"],[320,141,260,13],[320,142,260,8],[320,145,261,10],[320,150,261,15,"props"],[320,155,261,10],[320,156,261,21,"minimumValue"],[320,168,258,6],[320,169,256,11],[320,170,256,4],[321,0,264,3],[324,40,266,20],[325,0,267,4],[325,15,267,11],[325,20,267,16,"state"],[325,25,267,11],[325,26,267,22,"value"],[325,31,267,11],[325,32,267,28,"__getValue"],[325,42,267,11],[325,44,267,4],[326,0,268,3],[329,31,270,11,"value"],[329,36],[329,38,270,18],[330,0,271,4],[330,15,272,6],[330,16,272,7,"value"],[330,21,272,12],[330,24,272,15],[330,29,272,20,"props"],[330,34,272,15],[330,35,272,26,"minimumValue"],[330,47,272,6],[330,52,273,7],[330,57,273,12,"props"],[330,62,273,7],[330,63,273,18,"maximumValue"],[330,75,273,7],[330,78,273,33],[330,83,273,38,"props"],[330,88,273,33],[330,89,273,44,"minimumValue"],[330,101,272,6],[330,102,271,4],[331,0,275,3],[334,35,277,15,"value"],[334,40],[334,42,277,22],[335,0,278,4],[335,12,278,10,"ratio"],[335,17,278,15],[335,20,278,18],[335,25,278,23,"getRatio"],[335,33,278,18],[335,34,278,32,"value"],[335,39,278,18],[335,40,278,4],[336,0,279,4],[336,15,280,6,"ratio"],[336,20,280,11],[336,24,280,15],[336,29,280,20,"state"],[336,34,280,15],[336,35,280,26,"containerSize"],[336,48,280,15],[336,49,280,40,"width"],[336,54,280,15],[336,57,280,48],[336,62,280,53,"state"],[336,67,280,48],[336,68,280,59,"thumbSize"],[336,77,280,48],[336,78,280,69,"width"],[336,83,280,11],[336,84,279,4],[337,0,282,3],[340,42,284,22],[341,0,284,22],[341,27,285,41],[341,32,285,46,"state"],[341,37,284,22],[342,0,284,22],[342,12,285,12,"thumbSize"],[342,21,284,22],[342,37,285,12,"thumbSize"],[342,46,284,22],[343,0,284,22],[343,12,285,23,"containerSize"],[343,25,284,22],[343,41,285,23,"containerSize"],[343,54,284,22],[344,0,284,22],[344,12,286,12,"thumbTouchSize"],[344,26,284,22],[344,29,286,31],[344,34,286,36,"props"],[344,39,284,22],[344,40,286,12,"thumbTouchSize"],[344,54,284,22],[345,0,287,4],[345,12,287,10,"touchOverflowSize"],[345,29,287,27],[345,32,287,30],[345,37,287,35,"getTouchOverflowSize"],[345,57,287,30],[345,59,287,4],[347,0,289,4],[347,12,289,8],[347,17,289,13,"props"],[347,22,289,8],[347,23,289,19,"orientation"],[347,34,289,8],[347,39,289,35],[347,49,289,4],[347,51,289,47],[348,0,290,6],[348,17,290,13],[348,21,290,17,"Rect"],[348,25,290,13],[348,26,291,8,"touchOverflowSize"],[348,43,291,25],[348,44,291,26,"height"],[348,50,291,8],[348,53,291,35],[348,54,291,8],[348,57,292,10],[348,58,292,11,"containerSize"],[348,71,292,24],[348,72,292,25,"height"],[348,78,292,11],[348,81,292,34,"thumbTouchSize"],[348,95,292,48],[348,96,292,49,"height"],[348,102,292,10],[348,106,292,59],[348,107,290,13],[348,109,293,8,"touchOverflowSize"],[348,126,293,25],[348,127,293,26,"width"],[348,132,293,8],[348,135,293,34],[348,136,293,8],[348,139,294,10],[348,144,294,15,"getThumbLeft"],[348,156,294,10],[348,157,294,28],[348,162,294,33,"getCurrentValue"],[348,177,294,28],[348,179,294,10],[348,180,293,8],[348,183,295,10],[348,184,295,11,"thumbSize"],[348,193,295,20],[348,194,295,21,"width"],[348,199,295,11],[348,202,295,29,"thumbTouchSize"],[348,216,295,43],[348,217,295,44,"width"],[348,222,295,10],[348,226,295,53],[348,227,290,13],[348,229,296,8,"thumbTouchSize"],[348,243,296,22],[348,244,296,23,"width"],[348,249,290,13],[348,251,297,8,"thumbTouchSize"],[348,265,297,22],[348,266,297,23,"height"],[348,272,290,13],[348,273,290,6],[349,0,299,5],[351,0,300,4],[351,15,300,11],[351,19,300,15,"Rect"],[351,23,300,11],[351,24,301,6,"touchOverflowSize"],[351,41,301,23],[351,42,301,24,"width"],[351,47,301,6],[351,50,301,32],[351,51,301,6],[351,54,302,8],[351,59,302,13,"getThumbLeft"],[351,71,302,8],[351,72,302,26],[351,77,302,31,"getCurrentValue"],[351,92,302,26],[351,94,302,8],[351,95,301,6],[351,98,303,8],[351,99,303,9,"thumbSize"],[351,108,303,18],[351,109,303,19,"width"],[351,114,303,9],[351,117,303,27,"thumbTouchSize"],[351,131,303,41],[351,132,303,42,"width"],[351,137,303,8],[351,141,303,51],[351,142,300,11],[351,144,304,6,"touchOverflowSize"],[351,161,304,23],[351,162,304,24,"height"],[351,168,304,6],[351,171,304,33],[351,172,304,6],[351,175,305,8],[351,176,305,9,"containerSize"],[351,189,305,22],[351,190,305,23,"height"],[351,196,305,9],[351,199,305,32,"thumbTouchSize"],[351,213,305,46],[351,214,305,47,"height"],[351,220,305,8],[351,224,305,57],[351,225,300,11],[351,227,306,6,"thumbTouchSize"],[351,241,306,20],[351,242,306,21,"width"],[351,247,300,11],[351,249,307,6,"thumbTouchSize"],[351,263,307,20],[351,264,307,21,"height"],[351,270,300,11],[351,271,300,4],[352,0,309,3],[355,48,311,28,"thumbLeft"],[355,57],[355,59,311,39],[356,0,312,4],[356,12,312,10,"thumbTouchRect"],[356,26,312,24],[356,29,312,27],[356,34,312,32,"getThumbTouchRect"],[356,51,312,27],[356,53,312,4],[357,0,313,4],[357,12,313,10,"positionStyle"],[357,25,313,23],[357,28,313,26],[358,0,314,6,"left"],[358,10,314,6,"left"],[358,14,314,10],[358,16,314,12,"thumbLeft"],[358,25,313,26],[359,0,315,6,"top"],[359,10,315,6,"top"],[359,13,315,9],[359,15,315,11,"thumbTouchRect"],[359,29,315,25],[359,30,315,26,"y"],[359,31,313,26],[360,0,316,6,"width"],[360,10,316,6,"width"],[360,15,316,11],[360,17,316,13,"thumbTouchRect"],[360,31,316,27],[360,32,316,28,"width"],[360,37,313,26],[361,0,317,6,"height"],[361,10,317,6,"height"],[361,16,317,12],[361,18,317,14,"thumbTouchRect"],[361,32,317,28],[361,33,317,29,"height"],[362,0,313,26],[362,9,313,4],[363,0,319,4],[363,15,319,11],[363,44,319,12],[363,65,319,11],[363,66,319,21],[363,70,319,11],[364,0,319,26],[364,10,319,26],[364,15,319,31],[364,17,319,33,"positionStyle"],[364,30,319,11],[365,0,319,48],[365,10,319,48],[365,23,319,61],[365,25,319,62],[365,31,319,11],[366,0,319,11],[367,0,319,11],[368,0,319,11],[369,0,319,11],[370,0,319,11],[370,10,319,4],[371,0,320,3],[374,44,322,24,"thumbStart"],[374,54],[374,56,322,36],[375,0,322,36],[375,27,323,37],[375,32,323,42,"state"],[375,37,322,36],[376,0,322,36],[376,12,323,12,"thumbSize"],[376,21,322,36],[376,37,323,12,"thumbSize"],[376,46,322,36],[377,0,322,36],[377,12,323,23,"trackSize"],[377,21,322,36],[377,37,323,23,"trackSize"],[377,46,322,36],[378,0,324,4],[378,12,324,10,"minimumTrackStyle"],[378,29,324,27],[378,32,324,30],[379,0,325,6,"position"],[379,10,325,6,"position"],[379,18,325,14],[379,20,325,16],[380,0,324,30],[380,9,324,4],[382,0,328,4],[382,12,328,8],[382,17,328,13,"props"],[382,22,328,8],[382,23,328,19,"orientation"],[382,34,328,8],[382,39,328,35],[382,49,328,4],[382,51,328,47],[383,0,329,6,"minimumTrackStyle"],[383,10,329,6,"minimumTrackStyle"],[383,27,329,23],[383,28,329,24,"height"],[383,34,329,6],[383,37,329,33,"Animated"],[383,59,329,42,"add"],[383,62,329,33],[383,63,329,46,"thumbStart"],[383,73,329,33],[383,75,329,58,"thumbSize"],[383,84,329,67],[383,85,329,68,"height"],[383,91,329,58],[383,94,329,77],[383,95,329,33],[383,96,329,6],[384,0,330,6,"minimumTrackStyle"],[384,10,330,6,"minimumTrackStyle"],[384,27,330,23],[384,28,330,24,"marginLeft"],[384,38,330,6],[384,41,330,37],[384,42,330,38,"trackSize"],[384,51,330,47],[384,52,330,48,"width"],[384,57,330,6],[385,0,331,5],[385,9,328,4],[385,15,331,11],[386,0,332,6,"minimumTrackStyle"],[386,10,332,6,"minimumTrackStyle"],[386,27,332,23],[386,28,332,24,"width"],[386,33,332,6],[386,36,332,32,"Animated"],[386,58,332,41,"add"],[386,61,332,32],[386,62,332,45,"thumbStart"],[386,72,332,32],[386,74,332,57,"thumbSize"],[386,83,332,66],[386,84,332,67,"width"],[386,89,332,57],[386,92,332,75],[386,93,332,32],[386,94,332,6],[387,0,333,6,"minimumTrackStyle"],[387,10,333,6,"minimumTrackStyle"],[387,27,333,23],[387,28,333,24,"marginTop"],[387,37,333,6],[387,40,333,36],[387,41,333,37,"trackSize"],[387,50,333,46],[387,51,333,47,"height"],[387,57,333,6],[388,0,334,5],[390,0,335,4],[390,15,335,11,"minimumTrackStyle"],[390,32,335,4],[391,0,336,3],[394,45,338,25,"thumbStart"],[394,55],[394,57,338,37],[395,0,339,4],[395,12,339,8],[395,17,339,13,"props"],[395,22,339,8],[395,23,339,19,"orientation"],[395,34,339,8],[395,39,339,35],[395,49,339,4],[395,51,339,47],[396,0,340,6],[396,17,340,13],[396,18,341,8],[397,0,342,10,"translateX"],[397,12,342,10,"translateX"],[397,22,342,20],[397,24,343,12],[397,26,343,14],[397,31,343,19,"state"],[397,36,343,14],[397,37,343,25,"trackSize"],[397,46,343,14],[397,47,343,35,"height"],[397,53,343,14],[397,56,343,44],[397,61,343,49,"state"],[397,66,343,44],[397,67,343,55,"thumbSize"],[397,76,343,44],[397,77,343,65,"height"],[397,83,343,12],[397,87,343,75],[398,0,341,8],[398,11,340,13],[398,13,345,8],[399,0,345,10,"translateY"],[399,12,345,10,"translateY"],[399,22,345,20],[399,24,345,22,"thumbStart"],[400,0,345,8],[400,11,340,13],[400,12,340,6],[401,0,347,5],[403,0,348,4],[403,15,348,11],[403,16,349,6],[404,0,349,8,"translateX"],[404,10,349,8,"translateX"],[404,20,349,18],[404,22,349,20,"thumbStart"],[405,0,349,6],[405,9,348,11],[405,11,350,6],[406,0,351,8,"translateY"],[406,10,351,8,"translateY"],[406,20,351,18],[406,22,352,10],[406,24,352,12],[406,29,352,17,"state"],[406,34,352,12],[406,35,352,23,"trackSize"],[406,44,352,12],[406,45,352,33,"height"],[406,51,352,12],[406,54,352,42],[406,59,352,47,"state"],[406,64,352,42],[406,65,352,53,"thumbSize"],[406,74,352,42],[406,75,352,63,"height"],[406,81,352,10],[406,85,352,73],[407,0,350,6],[407,9,348,11],[407,10,348,4],[408,0,355,3],[411,31,357,11],[412,0,357,11],[412,26,371,8],[412,31,371,13,"props"],[412,36,357,11],[413,0,357,11],[413,12,359,6,"minimumValue"],[413,24,357,11],[413,39,359,6,"minimumValue"],[413,51,357,11],[414,0,357,11],[414,12,360,6,"maximumValue"],[414,24,357,11],[414,39,360,6,"maximumValue"],[414,51,357,11],[415,0,357,11],[415,12,361,6,"minimumTrackTintColor"],[415,33,357,11],[415,48,361,6,"minimumTrackTintColor"],[415,69,357,11],[416,0,357,11],[416,12,362,6,"maximumTrackTintColor"],[416,33,357,11],[416,48,362,6,"maximumTrackTintColor"],[416,69,357,11],[417,0,357,11],[417,12,363,6,"thumbTintColor"],[417,26,357,11],[417,41,363,6,"thumbTintColor"],[417,55,357,11],[418,0,357,11],[418,12,364,6,"containerStyle"],[418,26,357,11],[418,41,364,6,"containerStyle"],[418,55,357,11],[419,0,357,11],[419,12,365,6,"style"],[419,17,357,11],[419,32,365,6,"style"],[419,37,357,11],[420,0,357,11],[420,12,366,6,"trackStyle"],[420,22,357,11],[420,37,366,6,"trackStyle"],[420,47,357,11],[421,0,357,11],[421,12,367,6,"thumbStyle"],[421,22,357,11],[421,37,367,6,"thumbStyle"],[421,47,357,11],[422,0,357,11],[422,12,368,6,"debugTouchArea"],[422,26,357,11],[422,41,368,6,"debugTouchArea"],[422,55,357,11],[423,0,357,11],[423,12,369,6,"orientation"],[423,23,357,11],[423,38,369,6,"orientation"],[423,49,357,11],[424,0,357,11],[424,12,370,9,"other"],[424,17,357,11],[425,0,357,11],[425,27,373,61],[425,32,373,66,"state"],[425,37,357,11],[426,0,357,11],[426,12,373,12,"value"],[426,17,357,11],[426,33,373,12,"value"],[426,38,357,11],[427,0,357,11],[427,12,373,19,"containerSize"],[427,25,357,11],[427,41,373,19,"containerSize"],[427,54,357,11],[428,0,357,11],[428,12,373,34,"thumbSize"],[428,21,357,11],[428,37,373,34,"thumbSize"],[428,46,357,11],[429,0,357,11],[429,12,373,45,"allMeasured"],[429,23,357,11],[429,39,373,45,"allMeasured"],[429,50,357,11],[430,0,375,4],[430,12,375,10,"mainStyles"],[430,22,375,20],[430,25,375,23,"containerStyle"],[430,39,375,37],[430,43,375,41,"styles"],[430,49,375,4],[431,0,376,4],[431,12,376,10,"thumbStart"],[431,22,376,20],[431,25,376,23,"value"],[431,30,376,28],[431,31,376,29,"interpolate"],[431,42,376,23],[431,43,376,41],[432,0,377,6,"inputRange"],[432,10,377,6,"inputRange"],[432,20,377,16],[432,22,377,18],[432,23,377,19,"minimumValue"],[432,35,377,18],[432,37,377,33,"maximumValue"],[432,49,377,18],[432,50,376,41],[433,0,378,6,"outputRange"],[433,10,378,6,"outputRange"],[433,21,378,17],[433,23,378,19],[433,24,378,20],[433,25,378,19],[433,27,378,23,"containerSize"],[433,40,378,36],[433,41,378,37,"width"],[433,46,378,23],[433,49,378,45,"thumbSize"],[433,58,378,54],[433,59,378,55,"width"],[433,64,378,19],[434,0,376,41],[434,9,376,23],[434,10,376,4],[435,0,382,4],[435,12,382,10,"valueVisibleStyle"],[435,29,382,27],[435,32,382,30],[435,34,382,4],[437,0,383,4],[437,12,383,8],[437,13,383,9,"allMeasured"],[437,24,383,4],[437,26,383,22],[438,0,384,6,"valueVisibleStyle"],[438,10,384,6,"valueVisibleStyle"],[438,27,384,23],[438,28,384,24,"height"],[438,34,384,6],[438,37,384,33],[438,38,384,6],[439,0,385,6,"valueVisibleStyle"],[439,10,385,6,"valueVisibleStyle"],[439,27,385,23],[439,28,385,24,"width"],[439,33,385,6],[439,36,385,32],[439,37,385,6],[440,0,386,5],[442,0,388,4],[442,12,388,10,"minimumTrackStyle"],[442,29,388,27],[442,50,389,9],[442,55,389,14,"getMinimumTrackStyles"],[442,76,389,9],[442,77,389,36,"thumbStart"],[442,87,389,9],[442,88,388,27],[443,0,390,6,"backgroundColor"],[443,10,390,6,"backgroundColor"],[443,25,390,21],[443,27,390,23,"minimumTrackTintColor"],[444,0,388,27],[444,11,391,9,"valueVisibleStyle"],[444,28,388,27],[444,29,388,4],[446,0,394,4],[446,12,394,10,"thumbStyleTransform"],[446,31,394,29],[446,34,394,33,"thumbStyle"],[446,44,394,43],[446,48,394,47,"thumbStyle"],[446,58,394,57],[446,59,394,58,"transform"],[446,68,394,32],[446,72,394,72],[446,74,394,4],[447,0,395,4],[447,12,395,10,"touchOverflowStyle"],[447,30,395,28],[447,33,395,31],[447,38,395,36,"getTouchOverflowStyle"],[447,59,395,31],[447,61,395,4],[448,0,396,4],[448,15,397,6],[448,44,397,7],[448,61,397,6],[448,90,398,12,"other"],[448,95,397,6],[449,0,399,8],[449,10,399,8],[449,15,399,13],[449,17,399,15,"StyleSheet"],[449,41,399,26,"flatten"],[449,48,399,15],[449,49,399,34],[449,50,400,10,"orientation"],[449,61,400,21],[449,66,400,26],[449,76,400,10],[449,79,401,14,"mainStyles"],[449,89,401,24],[449,90,401,25,"containerVertical"],[449,107,400,10],[449,110,402,14,"mainStyles"],[449,120,402,24],[449,121,402,25,"containerHorizontal"],[449,140,399,34],[449,142,403,10,"style"],[449,147,399,34],[449,148,399,15],[449,149,397,6],[450,0,405,8],[450,10,405,8],[450,18,405,16],[450,20,405,18],[450,25,405,23,"measureContainer"],[450,41,397,6],[451,0,397,6],[452,0,397,6],[453,0,397,6],[454,0,397,6],[455,0,397,6],[455,12,407,8],[455,41,407,9],[455,58,407,8],[456,0,408,10],[456,10,408,10],[456,15,408,15],[456,17,408,17,"StyleSheet"],[456,41,408,28,"flatten"],[456,48,408,17],[456,49,408,36],[456,50,409,12,"mainStyles"],[456,60,409,22],[456,61,409,23,"track"],[456,66,408,36],[456,68,410,12,"orientation"],[456,79,410,23],[456,84,410,28],[456,94,410,12],[456,97,411,16,"mainStyles"],[456,107,411,26],[456,108,411,27,"trackVertical"],[456,121,410,12],[456,124,412,16,"mainStyles"],[456,134,412,26],[456,135,412,27,"trackHorizontal"],[456,150,408,36],[456,152,413,12,"trackStyle"],[456,162,408,36],[456,164,414,12],[457,0,414,14,"backgroundColor"],[457,12,414,14,"backgroundColor"],[457,27,414,29],[457,29,414,31,"maximumTrackTintColor"],[458,0,414,12],[458,11,408,36],[458,12,408,17],[458,13,407,8],[459,0,416,10],[459,10,416,10],[459,18,416,18],[459,20,416,20],[459,25,416,25,"measureTrack"],[459,37,407,8],[460,0,407,8],[461,0,407,8],[462,0,407,8],[463,0,407,8],[464,0,407,8],[464,10,397,6],[464,12,418,8],[464,41,418,9],[464,62,418,8],[464,63,418,18],[464,67,418,8],[465,0,419,10],[465,10,419,10],[465,15,419,15],[465,17,419,17,"StyleSheet"],[465,41,419,28,"flatten"],[465,48,419,17],[465,49,419,36],[465,50,420,12,"mainStyles"],[465,60,420,22],[465,61,420,23,"track"],[465,66,419,36],[465,68,421,12,"orientation"],[465,79,421,23],[465,84,421,28],[465,94,421,12],[465,97,422,16,"mainStyles"],[465,107,422,26],[465,108,422,27,"trackVertical"],[465,121,421,12],[465,124,423,16,"mainStyles"],[465,134,423,26],[465,135,423,27,"trackHorizontal"],[465,150,419,36],[465,152,424,12,"trackStyle"],[465,162,419,36],[465,164,425,12,"minimumTrackStyle"],[465,181,419,36],[465,182,419,17],[465,183,418,8],[466,0,418,8],[467,0,418,8],[468,0,418,8],[469,0,418,8],[470,0,418,8],[470,10,397,6],[470,12,428,8],[470,41,428,9],[470,62,428,8],[470,63,428,18],[470,67,428,8],[471,0,429,10],[471,10,429,10],[471,16,429,16],[471,18,429,17],[471,31,428,8],[472,0,430,10],[472,10,430,10],[472,18,430,18],[472,20,430,20],[472,25,430,25,"measureThumb"],[472,37,428,8],[473,0,431,10],[473,10,431,10],[473,15,431,15],[473,17,431,17,"StyleSheet"],[473,41,431,28,"flatten"],[473,48,431,17],[473,49,431,36],[473,50,432,12],[474,0,432,14,"backgroundColor"],[474,12,432,14,"backgroundColor"],[474,27,432,29],[474,29,432,31,"thumbTintColor"],[475,0,432,12],[475,11,431,36],[475,13,433,12,"mainStyles"],[475,23,433,22],[475,24,433,23,"thumb"],[475,29,431,36],[475,31,434,12,"orientation"],[475,42,434,23],[475,47,434,28],[475,57,434,12],[475,60,435,16,"mainStyles"],[475,70,435,26],[475,71,435,27,"thumbVertical"],[475,84,435,16],[475,85,435,41,"trackStyle"],[475,95,435,51],[475,99,435,55,"trackStyle"],[475,109,435,65],[475,110,435,66,"width"],[475,115,435,16],[475,116,434,12],[475,119,436,16,"mainStyles"],[475,129,436,26],[475,130,436,27,"thumbHorizontal"],[475,145,436,16],[475,146,436,43,"trackStyle"],[475,156,436,53],[475,160,436,57,"trackStyle"],[475,170,436,67],[475,171,436,68,"height"],[475,177,436,16],[475,178,431,36],[475,180,437,12,"thumbStyle"],[475,190,431,36],[476,0,439,14,"transform"],[476,12,439,14,"transform"],[476,21,439,23],[476,66,440,19],[476,71,440,24,"getThumbPositionStyles"],[476,93,440,19],[476,94,440,47,"thumbStart"],[476,104,440,19],[476,105,439,23],[476,141,441,19,"thumbStyleTransform"],[476,160,439,23],[477,0,431,36],[477,13,443,17,"valueVisibleStyle"],[477,30,431,36],[477,32,431,17],[477,33,428,8],[478,0,428,8],[479,0,428,8],[480,0,428,8],[481,0,428,8],[482,0,428,8],[482,10,397,6],[482,12,447,8],[482,41,447,9],[482,58,447,8],[483,0,448,10],[483,10,448,10],[483,15,448,15],[483,17,448,17,"StyleSheet"],[483,41,448,28,"flatten"],[483,48,448,17],[483,49,448,36],[483,50,448,37,"styles"],[483,56,448,43],[483,57,448,44,"touchArea"],[483,66,448,36],[483,68,448,55,"touchOverflowStyle"],[483,86,448,36],[483,87,448,17],[484,0,447,8],[484,11,449,14],[484,16,449,19,"panResponder"],[484,28,449,14],[484,29,449,32,"panHandlers"],[484,40,447,8],[485,0,447,8],[486,0,447,8],[487,0,447,8],[488,0,447,8],[489,0,447,8],[489,12,451,11,"debugTouchArea"],[489,26,451,25],[489,31,451,30],[489,35,451,11],[489,39,452,12],[489,44,452,17,"renderDebugThumbTouchRect"],[489,69,452,12],[489,70,452,43,"thumbStart"],[489,80,452,12],[489,81,447,8],[489,82,397,6],[489,83,396,4],[490,0,456,3],[493,4,47,21,"Component"],[493,20],[497,0,459,0,"Slider"],[497,2,459,0,"Slider"],[497,8,459,6],[497,9,459,7,"propTypes"],[497,18,459,0],[497,21,459,19],[498,0,468,2,"value"],[498,4,468,2,"value"],[498,9,468,7],[498,11,468,9,"PropTypes"],[498,30,468,19,"number"],[498,36,459,19],[499,0,474,2,"disabled"],[499,4,474,2,"disabled"],[499,12,474,10],[499,14,474,12,"PropTypes"],[499,33,474,22,"bool"],[499,37,459,19],[500,0,479,2,"minimumValue"],[500,4,479,2,"minimumValue"],[500,16,479,14],[500,18,479,16,"PropTypes"],[500,37,479,26,"number"],[500,43,459,19],[501,0,484,2,"maximumValue"],[501,4,484,2,"maximumValue"],[501,16,484,14],[501,18,484,16,"PropTypes"],[501,37,484,26,"number"],[501,43,459,19],[502,0,490,2,"step"],[502,4,490,2,"step"],[502,8,490,6],[502,10,490,8,"PropTypes"],[502,29,490,18,"number"],[502,35,459,19],[503,0,496,2,"minimumTrackTintColor"],[503,4,496,2,"minimumTrackTintColor"],[503,25,496,23],[503,27,496,25,"PropTypes"],[503,46,496,35,"string"],[503,52,459,19],[504,0,502,2,"maximumTrackTintColor"],[504,4,502,2,"maximumTrackTintColor"],[504,25,502,23],[504,27,502,25,"PropTypes"],[504,46,502,35,"string"],[504,52,459,19],[505,0,507,2,"thumbTintColor"],[505,4,507,2,"thumbTintColor"],[505,18,507,16],[505,20,507,18,"PropTypes"],[505,39,507,28,"string"],[505,45,459,19],[506,0,516,2,"thumbTouchSize"],[506,4,516,2,"thumbTouchSize"],[506,18,516,16],[506,20,516,18,"PropTypes"],[506,39,516,28,"shape"],[506,44,516,18],[506,45,516,34],[507,0,517,4,"width"],[507,6,517,4,"width"],[507,11,517,9],[507,13,517,11,"PropTypes"],[507,32,517,21,"number"],[507,38,516,34],[508,0,518,4,"height"],[508,6,518,4,"height"],[508,12,518,10],[508,14,518,12,"PropTypes"],[508,33,518,22,"number"],[509,0,516,34],[509,5,516,18],[509,6,459,19],[510,0,524,2,"onValueChange"],[510,4,524,2,"onValueChange"],[510,17,524,15],[510,19,524,17,"PropTypes"],[510,38,524,27,"func"],[510,42,459,19],[511,0,530,2,"onSlidingStart"],[511,4,530,2,"onSlidingStart"],[511,18,530,16],[511,20,530,18,"PropTypes"],[511,39,530,28,"func"],[511,43,459,19],[512,0,536,2,"onSlidingComplete"],[512,4,536,2,"onSlidingComplete"],[512,21,536,19],[512,23,536,21,"PropTypes"],[512,42,536,31,"func"],[512,46,459,19],[513,0,541,2,"style"],[513,4,541,2,"style"],[513,9,541,7],[513,11,541,9,"ViewPropTypes"],[513,33,541,23,"style"],[513,38,459,19],[514,0,546,2,"trackStyle"],[514,4,546,2,"trackStyle"],[514,14,546,12],[514,16,546,14,"ViewPropTypes"],[514,38,546,28,"style"],[514,43,459,19],[515,0,551,2,"thumbStyle"],[515,4,551,2,"thumbStyle"],[515,14,551,12],[515,16,551,14,"ViewPropTypes"],[515,38,551,28,"style"],[515,43,459,19],[516,0,556,2,"debugTouchArea"],[516,4,556,2,"debugTouchArea"],[516,18,556,16],[516,20,556,18,"PropTypes"],[516,39,556,28,"bool"],[516,43,459,19],[517,0,561,2,"animateTransitions"],[517,4,561,2,"animateTransitions"],[517,22,561,20],[517,24,561,22,"PropTypes"],[517,43,561,32,"bool"],[517,47,459,19],[518,0,566,2,"animationType"],[518,4,566,2,"animationType"],[518,17,566,15],[518,19,566,17,"PropTypes"],[518,38,566,27,"oneOf"],[518,43,566,17],[518,44,566,33],[518,45,566,34],[518,53,566,33],[518,55,566,44],[518,63,566,33],[518,64,566,17],[518,65,459,19],[519,0,571,2,"orientation"],[519,4,571,2,"orientation"],[519,15,571,13],[519,17,571,15,"PropTypes"],[519,36,571,25,"oneOf"],[519,41,571,15],[519,42,571,31],[519,43,571,32],[519,55,571,31],[519,57,571,46],[519,67,571,31],[519,68,571,15],[519,69,459,19],[520,0,576,2,"animationConfig"],[520,4,576,2,"animationConfig"],[520,19,576,17],[520,21,576,19,"PropTypes"],[520,40,576,29,"object"],[520,46,459,19],[521,0,577,2,"containerStyle"],[521,4,577,2,"containerStyle"],[521,18,577,16],[521,20,577,18,"ViewPropTypes"],[521,42,577,32,"style"],[522,0,459,19],[522,3,459,0],[523,0,580,0,"Slider"],[523,2,580,0,"Slider"],[523,8,580,6],[523,9,580,7,"defaultProps"],[523,21,580,0],[523,24,580,22],[524,0,581,2,"value"],[524,4,581,2,"value"],[524,9,581,7],[524,11,581,9],[524,12,580,22],[525,0,582,2,"minimumValue"],[525,4,582,2,"minimumValue"],[525,16,582,14],[525,18,582,16],[525,19,580,22],[526,0,583,2,"maximumValue"],[526,4,583,2,"maximumValue"],[526,16,583,14],[526,18,583,16],[526,19,580,22],[527,0,584,2,"step"],[527,4,584,2,"step"],[527,8,584,6],[527,10,584,8],[527,11,580,22],[528,0,585,2,"minimumTrackTintColor"],[528,4,585,2,"minimumTrackTintColor"],[528,25,585,23],[528,27,585,25],[528,36,580,22],[529,0,586,2,"maximumTrackTintColor"],[529,4,586,2,"maximumTrackTintColor"],[529,25,586,23],[529,27,586,25],[529,36,580,22],[530,0,587,2,"thumbTintColor"],[530,4,587,2,"thumbTintColor"],[530,18,587,16],[530,20,587,18],[530,25,580,22],[531,0,588,2,"thumbTouchSize"],[531,4,588,2,"thumbTouchSize"],[531,18,588,16],[531,20,588,18],[532,0,588,20,"width"],[532,6,588,20,"width"],[532,11,588,25],[532,13,588,27],[532,15,588,18],[533,0,588,31,"height"],[533,6,588,31,"height"],[533,12,588,37],[533,14,588,39],[534,0,588,18],[534,5,580,22],[535,0,589,2,"debugTouchArea"],[535,4,589,2,"debugTouchArea"],[535,18,589,16],[535,20,589,18],[535,25,580,22],[536,0,590,2,"animationType"],[536,4,590,2,"animationType"],[536,17,590,15],[536,19,590,17],[536,27,580,22],[537,0,591,2,"orientation"],[537,4,591,2,"orientation"],[537,15,591,13],[537,17,591,15],[538,0,580,22],[538,3,580,0],[540,0,594,0],[540,6,594,6,"styles"],[540,12,594,12],[540,15,594,15,"StyleSheet"],[540,39,594,26,"create"],[540,45,594,15],[540,46,594,33],[541,0,595,2,"containerHorizontal"],[541,4,595,2,"containerHorizontal"],[541,23,595,21],[541,25,595,23],[542,0,596,4,"height"],[542,6,596,4,"height"],[542,12,596,10],[542,14,596,12],[542,16,595,23],[543,0,597,4,"justifyContent"],[543,6,597,4,"justifyContent"],[543,20,597,18],[543,22,597,20],[544,0,595,23],[544,5,594,33],[545,0,599,2,"containerVertical"],[545,4,599,2,"containerVertical"],[545,21,599,19],[545,23,599,21],[546,0,600,4,"width"],[546,6,600,4,"width"],[546,11,600,9],[546,13,600,11],[546,15,599,21],[547,0,601,4,"flexDirection"],[547,6,601,4,"flexDirection"],[547,19,601,17],[547,21,601,19],[547,29,599,21],[548,0,602,4,"alignItems"],[548,6,602,4,"alignItems"],[548,16,602,14],[548,18,602,16],[549,0,599,21],[549,5,594,33],[550,0,604,2,"track"],[550,4,604,2,"track"],[550,9,604,7],[550,11,604,9],[551,0,605,4,"borderRadius"],[551,6,605,4,"borderRadius"],[551,18,605,16],[551,20,605,18,"TRACK_SIZE"],[551,30,605,28],[551,33,605,31],[552,0,604,9],[552,5,594,33],[553,0,607,2,"trackHorizontal"],[553,4,607,2,"trackHorizontal"],[553,19,607,17],[553,21,607,19],[554,0,608,4,"height"],[554,6,608,4,"height"],[554,12,608,10],[554,14,608,12,"TRACK_SIZE"],[555,0,607,19],[555,5,594,33],[556,0,610,2,"trackVertical"],[556,4,610,2,"trackVertical"],[556,17,610,15],[556,19,610,17],[557,0,611,4,"flex"],[557,6,611,4,"flex"],[557,10,611,8],[557,12,611,10],[557,13,610,17],[558,0,612,4,"width"],[558,6,612,4,"width"],[558,11,612,9],[558,13,612,11,"TRACK_SIZE"],[559,0,610,17],[559,5,594,33],[560,0,614,2,"thumb"],[560,4,614,2,"thumb"],[560,9,614,7],[560,11,614,9],[561,0,615,4,"position"],[561,6,615,4,"position"],[561,14,615,12],[561,16,615,14],[561,26,614,9],[562,0,616,4,"width"],[562,6,616,4,"width"],[562,11,616,9],[562,13,616,11,"THUMB_SIZE"],[562,23,614,9],[563,0,617,4,"height"],[563,6,617,4,"height"],[563,12,617,10],[563,14,617,12,"THUMB_SIZE"],[563,24,614,9],[564,0,618,4,"borderRadius"],[564,6,618,4,"borderRadius"],[564,18,618,16],[564,20,618,18,"THUMB_SIZE"],[564,30,618,28],[564,33,618,31],[565,0,614,9],[565,5,594,33],[566,0,620,2,"thumbHorizontal"],[566,4,620,2,"thumbHorizontal"],[566,19,620,17],[566,21,620,19],[566,46,620,19,"height"],[566,52,620,25],[567,0,620,25],[567,13,620,30],[568,0,621,4,"top"],[568,8,621,4,"top"],[568,11,621,7],[568,13,621,9],[568,19,621,15,"height"],[568,25,621,21],[568,28,621,24],[568,29,621,25,"height"],[568,35,621,31],[568,38,621,34],[568,39,621,24],[568,43,621,39],[568,44,621,21],[568,47,621,43],[568,48,621,9],[569,0,620,30],[569,7,620,25],[570,0,620,25],[570,5,594,33],[571,0,623,2,"thumbVertical"],[571,4,623,2,"thumbVertical"],[571,17,623,15],[571,19,623,17],[571,42,623,17,"width"],[571,47,623,22],[572,0,623,22],[572,13,623,27],[573,0,624,4,"left"],[573,8,624,4,"left"],[573,12,624,8],[573,14,624,10],[573,20,624,16,"width"],[573,25,624,21],[573,28,624,24],[573,29,624,25,"width"],[573,34,624,30],[573,37,624,33],[573,38,624,24],[573,42,624,38],[573,43,624,21],[573,46,624,42],[573,47,624,10],[574,0,623,27],[574,7,623,22],[575,0,623,22],[575,5,594,33],[576,0,626,2,"touchArea"],[576,4,626,2,"touchArea"],[576,13,626,11],[576,15,626,13],[577,0,627,4,"position"],[577,6,627,4,"position"],[577,14,627,12],[577,16,627,14],[577,26,626,13],[578,0,628,4,"backgroundColor"],[578,6,628,4,"backgroundColor"],[578,21,628,19],[578,23,628,21],[578,36,626,13],[579,0,629,4,"top"],[579,6,629,4,"top"],[579,9,629,7],[579,11,629,9],[579,12,626,13],[580,0,630,4,"left"],[580,6,630,4,"left"],[580,10,630,8],[580,12,630,10],[580,13,626,13],[581,0,631,4,"right"],[581,6,631,4,"right"],[581,11,631,9],[581,13,631,11],[581,14,626,13],[582,0,632,4,"bottom"],[582,6,632,4,"bottom"],[582,12,632,10],[582,14,632,12],[583,0,626,13],[583,5,594,33],[584,0,634,2,"debugThumbTouchArea"],[584,4,634,2,"debugThumbTouchArea"],[584,23,634,21],[584,25,634,23],[585,0,635,4,"position"],[585,6,635,4,"position"],[585,14,635,12],[585,16,635,14],[585,26,634,23],[586,0,636,4,"backgroundColor"],[586,6,636,4,"backgroundColor"],[586,21,636,19],[586,23,636,21],[586,30,634,23],[587,0,637,4,"opacity"],[587,6,637,4,"opacity"],[587,13,637,11],[587,15,637,13],[588,0,634,23],[589,0,594,33],[589,3,594,15],[589,4,594,0],[591,18,642,15],[591,41,642,25,"Slider"],[591,47,642,15],[591,49,642,33],[591,57,642,15],[591,58]]},"type":"js/module"}]}