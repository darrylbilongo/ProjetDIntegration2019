{"version":3,"sources":["Login.js"],"names":["Dimensions","get","width","height","Value","Animated","concat","event","clockRunning","timing","debug","stopClock","startClock","Clock","block","cond","eq","Extrapolate","interpolate","set","Login","login","fetch","method","headers","body","JSON","stringify","email","state","userEmail","motDePasse","userPassword","response","json","responseAPI","isLoading","console","log","verifierDonnees","indexOf","myValidate","message","global","utilisateur","NavigationService","navigate","Alert","alert","stopAction","e","stopPropagation","viewOpacity","buttonOpacity","onStateChange","nativeEvent","State","END","runTiming","onStateChangeView","onCloseState","buttonY","inputRange","outputRange","extrapolate","CLAMP","bgY","textInputZindex","textInputY","textInputOpacity","viewX","rotateCross","refName","setTimeout","scrollResponder","refs","scrollView","getScrollResponder","scrollResponderScrollNativeHandleToKeyboard","React","findNodeHandle","myContainer","container","opacity","transform","translateX","StyleSheet","absoluteFill","translateY","require","justifyContent","marginVertical","styles","button","backgroundColor","fontSize","fontWeight","color","top","zIndex","closeButton","rotate","textInput","setState","Component","clock","value","dest","finished","position","time","frameTime","config","duration","toValue","easing","Easing","inOut","ease","create","flex","alignItems"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { StyleSheet, Text, View, Dimensions, TextInput, Alert,} from 'react-native';\nimport Welcome from '../Accueil/Welcome';\nimport Animated, {Easing} from \"react-native-reanimated\";\nimport {TapGestureHandler, State, TouchableOpacity} from 'react-native-gesture-handler';\nimport Svg, {Image, Circle, ClipPath} from 'react-native-svg';\nimport styles from './styles';\nimport NavigationService from '../Navigation/NavigationService';\n\nconst { width, height } = Dimensions.get('window');\n\nconst {Value ,concat, event, clockRunning, timing, debug, stopClock, startClock, Clock, block, cond, eq, Extrapolate, interpolate, set} = Animated;\n\nexport default class Login extends Component {\n  constructor(){\n    super();\n\n    global.utilisateur = {};\n\n    this.state = {\n      userEmail: \"\",\n      userPassword: \"\",\n      responseAPI: \"\",\n      isLoading: true\n    }\n\n    this.viewOpacity = new Value(1);\n\n    this.buttonOpacity = new Value(1);\n    \n\n    this.onStateChange = event([\n      {\n        nativeEvent: ({state})=>block([\n          cond(eq(state, State.END), set(this.buttonOpacity, runTiming(new Clock(), 1, 0)))\n        ])\n      }\n    ]);\n\n    this.onStateChangeView = event([\n      {\n        nativeEvent: ({state})=>block([\n          cond(eq(state, State.END), set(this.viewOpacity, runTiming(new Clock(), 1, 0)))\n        ])\n      }\n    ]);\n\n    this.onCloseState = event([\n      {\n        nativeEvent: ({state})=>block([\n          cond(eq(state, State.END), set(this.buttonOpacity, runTiming(new Clock(), 0, 1)))\n        ])\n      }\n    ]);\n\n    this.buttonY = interpolate(this.buttonOpacity, {\n      inputRange: [0, 1],\n      outputRange: [100, 0],\n      extrapolate: Extrapolate.CLAMP\n    });\n\n    this.bgY = interpolate(this.buttonOpacity, {\n      inputRange: [0, 1],\n      outputRange: [- height/2 -50, 0],\n      extrapolate: Extrapolate.CLAMP\n    });\n\n    this.textInputZindex = interpolate(this.buttonOpacity, {\n      inputRange: [0, 1],\n      outputRange: [1, -1],\n      extrapolate: Extrapolate.CLAMP\n    });\n\n    this.textInputY = interpolate(this.buttonOpacity, {\n      inputRange: [0, 1],\n      outputRange: [0, 300],\n      extrapolate: Extrapolate.CLAMP\n    });\n    \n    this.textInputOpacity = interpolate(this.buttonOpacity, {\n      inputRange: [0, 1],\n      outputRange: [1, 0],\n      extrapolate: Extrapolate.CLAMP\n    });\n\n    this.viewX = interpolate(this.viewOpacity, {\n      inputRange: [0, 1],\n      outputRange: [width, 0],\n      extrapolate: Extrapolate.CLAMP\n    });\n\n    this.rotateCross = interpolate(this.buttonOpacity, {\n      inputRange: [0, 1],\n      outputRange: [180, 360],\n      extrapolate: Extrapolate.CLAMP\n    });\n  }\n\n\n  login = async () => {\n    try{\n      const response = await fetch('http://192.168.1.122:5000/users/login', {\n                              method: 'POST',\n                              headers: {\n                                'Accept': 'application/json',\n                                'Content-Type': 'application/json'\n                              },\n                              body: JSON.stringify({\n                                email: this.state.userEmail,\n                                motDePasse: this.state.userPassword\n                              })\n                            });                \n      this.state.responseAPI = await response.json(); \n      this.state.isLoading = false;\n    }\n    catch (error){\n      console.log(error);\n    }\n    \n  }\n\n  verifierDonnees = (userEmail, userPassword) => {\n    if(userEmail == \"\" && userPassword == \"\"){\n      return false;\n    }\n    else if((userEmail == \"\" || userEmail.indexOf('@') == -1)){\n      return false;\n    }\n    else if(userEmail != \"\" && userPassword == \"\"){\n      return false;\n    }\n    return true;\n  }\n\n  myValidate = () => {\n    const {userEmail, userPassword} = this.state;\n    if(this.verifierDonnees(userEmail, userPassword)){\n      this.login();\n      if(this.state.responseAPI.message == 'Utilisateur existant: Connexion reussie!!!'){\n        this.state.userPassword = '';\n        this.state.userEmail = '';\n        global.utilisateur = this.state.responseAPI.utilisateur;\n        NavigationService.navigate('Profile');\n      }\n      else if(this.state.responseAPI.message != '')\n        Alert.alert(this.state.responseAPI.message);\n    }\n    else\n      Alert.alert(\"Veuillez remplir votre mail et votre mot de passe\");\n  }\n\n  stopAction = (e) =>{\n    e.stopPropagation();\n  }\n\n  inputFocused (refName) {\n    setTimeout(() => {\n      let scrollResponder = this.refs.scrollView.getScrollResponder();\n      scrollResponder.scrollResponderScrollNativeHandleToKeyboard(\n        React.findNodeHandle(this.refs[refName]),\n        110,\n        true\n      );\n    }, 50);\n  }\n\n  render() {\n    if(this.state.isLoading){}\n    \n    return (\n    <View style={myContainer.container}>\n        <Animated.View style={{...myContainer.container,\n                                opacity: this.viewOpacity,\n                                transform: [{translateX: this.viewX}]\n                              }}>\n          <Animated.View style={{...StyleSheet.absoluteFill, transform: [{translateY: this.bgY}]}}>\n              <Svg height={height+50} width={width}>\n                <ClipPath id='clip'>\n                  <Circle r={height+50} cx={width / 2} />\n                </ClipPath>\n              <Image\n                  href={require(\"../../images/feuille.jpg\")}\n                  width={width}\n                  height={height+50}\n                  preserveAspectRatio=\"xMidYMid slice\"\n                  clipPath=\"url(#clip)\"\n              />\n              </Svg>\n          </Animated.View>\n\n          <View style={{ height: height / 2, justifyContent: 'center' , marginVertical:30 }}>\n          <Welcome />\n            <TapGestureHandler onHandlerStateChange={this.onStateChange}>\n              <Animated.View style={{\n                                      ...styles.button, \n                                      backgroundColor: 'white',\n                                      opacity: this.buttonOpacity,\n                                      transform: [{translateY: this.buttonY}]\n                                    }}>\n                <Text style={{ fontSize: 20, fontWeight: 'bold' }}>Se connecter</Text>\n              </Animated.View>\n            </TapGestureHandler>\n            <TapGestureHandler onHandlerStateChange={()=>{NavigationService.navigate('Register');}}>\n              <Animated.View style={{ \n                                      ...styles.button, \n                                      backgroundColor: '#003d00',\n                                      opacity: this.buttonOpacity,\n                                      transform: [{translateY: this.buttonY}]\n                                    }}>\n                <Text style={{ fontSize: 20, fontWeight: 'bold', color: 'white' }}>\n                    Créer un compte\n                </Text>\n              </Animated.View>\n            </TapGestureHandler>\n\n            <Animated.View style={{height:height/2, \n                                    ...StyleSheet.absoluteFill, \n                                    top:null, \n                                    justifyContent:'center',\n                                    zIndex: this.textInputZindex,\n                                    opacity: this.textInputOpacity,\n                                    transform:[{translateY: this.textInputY}],\n                                    \n                                  }}>\n              <TapGestureHandler onHandlerStateChange={this.onCloseState}>\n                <Animated.View style={styles.closeButton}>\n                  <Animated.Text style={{fontSize: 15,\n                                          color: 'black',\n                                          fontWeight: 'bold',\n                                          transform: [{rotate: concat(this.rotateCross, 'deg')}]}}>\n                    X\n                  </Animated.Text>\n                </Animated.View>\n              </TapGestureHandler>\n              <TextInput \n                  placeholder=\"email\"\n                  style={styles.textInput}\n                  placeholderTextColor=\"black\"\n                  keyboardType={'email-address'}\n                  onChangeText={userEmail => this.setState({userEmail})}\n                  autoCapitalize='none'\n                  returnKeyType='next'\n                />\n                <TextInput \n                  placeholder=\"mot de passe\"\n                  style={styles.textInput}\n                  secureTextEntry={true}\n                  placeholderTextColor=\"black\"\n                  autoCapitalize='none'\n                  onChangeText={userPassword => this.setState({userPassword})}\n                  keyboardType={'default'}\n                />\n                <TouchableOpacity style={{...styles.button, backgroundColor: '#003d00'}}\n                  onPress={this.myValidate}\n                >\n                  <Text style={{fontSize:20, fontWeight:'bold', color: 'white'}} >\n                    Connexion\n                  </Text>\n                </TouchableOpacity>\n            </Animated.View>\n          </View>\n        </Animated.View>\n    </View>\n    );\n  }\n}\n\nfunction runTiming(clock, value, dest) {\n  const state = {\n    finished: new Value(0),\n    position: new Value(0),\n    time: new Value(0),\n    frameTime: new Value(0)\n  };\n\n  const config = {\n    duration: 1000,\n    toValue: new Value(0),\n    easing: Easing.inOut(Easing.ease)\n  };\n\n  return block([\n    cond(clockRunning(clock), 0, [\n      set(state.finished, 0),\n      set(state.time, 0),\n      set(state.position, value),\n      set(state.frameTime, 0),\n      set(config.toValue, dest),\n      startClock(clock)\n    ]),\n    timing(clock, state, config),\n    cond(state.finished, debug('stop clock', stopClock(clock))),\n    state.position\n  ]);\n}\n\nconst myContainer = StyleSheet.create({\n    container: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        height:height,\n        width: width,\n      }\n});"]}